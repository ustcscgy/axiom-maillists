From MAILER-DAEMON Sat Mar 01 17:38:07 2008
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1JVaLG-0005Gi-TD
	for mharc-axiom-mail@gnu.org; Sat, 01 Mar 2008 17:38:06 -0500
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1JVaLF-0005FO-Ql
	for axiom-mail@nongnu.org; Sat, 01 Mar 2008 17:38:05 -0500
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1JVaLE-0005Dr-5v
	for axiom-mail@nongnu.org; Sat, 01 Mar 2008 17:38:05 -0500
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1JVaLE-0005Dh-00
	for axiom-mail@nongnu.org; Sat, 01 Mar 2008 17:38:04 -0500
Received: from mail.gmx.net ([213.165.64.20])
	by monty-python.gnu.org with smtp (Exim 4.60)
	(envelope-from <tandemsucher@gmx.de>) id 1JVaLD-0007nZ-Jx
	for axiom-mail@nongnu.org; Sat, 01 Mar 2008 17:38:03 -0500
Received: (qmail 13740 invoked by uid 0); 1 Mar 2008 22:38:01 -0000
Received: from 87.173.76.126 by www120.gmx.net with HTTP;
	Sat, 01 Mar 2008 23:38:01 +0100 (CET)
Content-Transfer-Encoding: 7bit
Content-Type: text/plain; charset="us-ascii"
Date: Sat, 01 Mar 2008 23:38:01 +0100
From: tandemsucher@gmx.de
Message-ID: <20080301223801.44420@gmx.net>
MIME-Version: 1.0
To: axiom-mail@nongnu.org
X-Authenticated: #8004071
X-Flags: 0001
X-Mailer: WWW-Mail 6100 (Global Message Exchange)
X-Priority: 3
X-Provags-ID: V01U2FsdGVkX1+M1REh/HOM+T+9knMnXqfxgd+it0xdgYvwMiLKW7
	DDL4GCdRPnfdd3T72XN4ED2BdHk7sckdg/Dg== 
X-GMX-UID: /uL/dmgiYmYBUtEWH3c3VqhCWkZTQZR8
X-detected-kernel: by monty-python.gnu.org: Linux 2.6, seldom 2.4 (older, 4)
Subject: [Axiom-mail] Calc. with a self-inverse integer matrix
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 01 Mar 2008 22:38:06 -0000

Dear Axiom-Users,

i am new to axiom. 

I need the solution for the components of a matrix product 
A times B = I.

,,A'' is a self-inverse matrix with integer components, the components of ,,B'' are ploynomial equations containing the components of two vectors which  have their scalar product equal to zero, and one of them is normalized. this leads after all to the system of equations below. 

the problems:

1.) i get:
>> Error detected within library code:
   system does not have a finite number of solutions

however, i was expecting to find at least some more information.

2.) how do i tell ,,axiom'' that the a_ij have to be of type integer?


solve([

(d1+2*n1)*(a11*n1+a12*n2+a13*n3)-a11=1,

(d2+2*n2)*(a21*n1+a22*n2+a23*n3)-a22=1,

(d3+2*n3)*(a31*n1+a32*n2+a33*n3)-a33=1,


(d2+2*n2)*(a11*n1+a12*n2+a13*n3)-a12=0,

(d3+2*n3)*(a11*n1+a12*n2+a13*n3)-a13=0,


(d1+2*n1)*(a21*n1+a22*n2+a23*n3)-a21=0,

(d3+2*n3)*(a21*n1+a22*n2+a23*n3)-a23=0,


(d1+2*n1)*(a31*n1+a32*n2+a33*n3)-a31=0,

(d2+2*n2)*(a31*n1+a32*n2+a33*n3)-a32=0,


n1*n1+n2*n2+n3*n3=1,

d1*n1+d2*n2+d3*n3=0,

a11*a11+a12*a21+a13*a31=1,
a11*a12+a12*a22+a13*a32=0,
a11*a13+a12*a23+a13*a33=0,

a21*a11+a22*a21+a23*a31=0,
a21*a12+a22*a22+a23*a32=1,
a21*a13+a22*a23+a23*a33=0,

a31*a11+a32*a21+a33*a31=0,
a31*a12+a32*a22+a33*a32=0,
a31*a13+a32*a23+a33*a33=1])

what can i do?

by the way, is their a way to define the type ,,self-inverse matrix tith integer components'' in axiom?

thanks,

Rainer

-- 
Psst! Geheimtipp: Online Games kostenlos spielen bei den GMX Free Games! 
http://games.entertainment.web.de/de/entertainment/games/free

-- 
Psst! Geheimtipp: Online Games kostenlos spielen bei den GMX Free Games! 
http://games.entertainment.web.de/de/entertainment/games/free



From MAILER-DAEMON Sun Mar 02 12:11:04 2008
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1JVriK-0003mI-Eo
	for mharc-axiom-mail@gnu.org; Sun, 02 Mar 2008 12:11:04 -0500
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1JVTBL-0007ze-7b
	for axiom-mail@nongnu.org; Sat, 01 Mar 2008 09:59:23 -0500
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1JVTBJ-0007yC-4C
	for axiom-mail@nongnu.org; Sat, 01 Mar 2008 09:59:22 -0500
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1JVTBI-0007xr-PU
	for axiom-mail@nongnu.org; Sat, 01 Mar 2008 09:59:20 -0500
Received: from mail.gmx.net ([213.165.64.20])
	by monty-python.gnu.org with smtp (Exim 4.60)
	(envelope-from <gluegerainer@gmx.de>) id 1JVTBH-0005ra-6k
	for axiom-mail@nongnu.org; Sat, 01 Mar 2008 09:59:20 -0500
Received: (qmail 4545 invoked by uid 0); 1 Mar 2008 14:59:08 -0000
Received: from 87.173.76.126 by www082.gmx.net with HTTP;
	Sat, 01 Mar 2008 15:59:08 +0100 (CET)
Content-Type: text/plain; charset="us-ascii"
Date: Sat, 01 Mar 2008 15:59:09 +0100
From: "Rainer Gluege" <gluegerainer@gmx.de>
Message-ID: <20080301145909.42070@gmx.net>
MIME-Version: 1.0
To: axiom-mail@nongnu.org
X-Authenticated: #8004071
X-Flags: 0001
X-Mailer: WWW-Mail 6100 (Global Message Exchange)
X-Priority: 3
X-Provags-ID: V01U2FsdGVkX19rcglRS91rpsjApxVssjX6SpMroZIENzv31knOyG
	V5BsOoHPRP4CXyLVm5O4M+bDt0Ldgmg3tbxA== 
Content-Transfer-Encoding: 7bit
X-GMX-UID: agq7ZwtxeSEqaIZCEXQhs1N+IGRvb4CS
X-detected-kernel: by monty-python.gnu.org: Linux 2.6, seldom 2.4 (older, 4)
X-Mailman-Approved-At: Sun, 02 Mar 2008 12:11:04 -0500
Subject: [Axiom-mail] Calc. with a self-inverse integer matrix
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 01 Mar 2008 14:59:23 -0000


Dear Axiom-Users,

i am new to axiom. 

I need the solution for the components of a matrix product 
A times B = I.

,,A'' is a self-inverse matrix with integer components, the components of ,,B'' are ploynomial equations containing the components of two vectors which  have their scalar product equal to zero, and one of them is normalized. this leads after all to the system of equations below. 

the problems:

1.) i get:
>> Error detected within library code:
   system does not have a finite number of solutions

however, i was expecting to find at least some more information.

2.) how do i tell ,,axiom'' that the a_ij have to be of type integer?


solve([

(d1+2*n1)*(a11*n1+a12*n2+a13*n3)-a11=1,

(d2+2*n2)*(a21*n1+a22*n2+a23*n3)-a22=1,

(d3+2*n3)*(a31*n1+a32*n2+a33*n3)-a33=1,


(d2+2*n2)*(a11*n1+a12*n2+a13*n3)-a12=0,

(d3+2*n3)*(a11*n1+a12*n2+a13*n3)-a13=0,


(d1+2*n1)*(a21*n1+a22*n2+a23*n3)-a21=0,

(d3+2*n3)*(a21*n1+a22*n2+a23*n3)-a23=0,


(d1+2*n1)*(a31*n1+a32*n2+a33*n3)-a31=0,

(d2+2*n2)*(a31*n1+a32*n2+a33*n3)-a32=0,


n1*n1+n2*n2+n3*n3=1,

d1*n1+d2*n2+d3*n3=0,

a11*a11+a12*a21+a13*a31=1,
a11*a12+a12*a22+a13*a32=0,
a11*a13+a12*a23+a13*a33=0,

a21*a11+a22*a21+a23*a31=0,
a21*a12+a22*a22+a23*a32=1,
a21*a13+a22*a23+a23*a33=0,

a31*a11+a32*a21+a33*a31=0,
a31*a12+a32*a22+a33*a32=0,
a31*a13+a32*a23+a33*a33=1])

what can i do?

by the way, is their a way to define the type ,,self-inverse matrix tith integer components'' in axiom?

thanks,

Rainer

-- 
Psst! Geheimtipp: Online Games kostenlos spielen bei den GMX Free Games! 
http://games.entertainment.web.de/de/entertainment/games/free



From MAILER-DAEMON Mon Mar 03 03:15:07 2008
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1JW5pD-0002ra-Lm
	for mharc-axiom-mail@gnu.org; Mon, 03 Mar 2008 03:15:07 -0500
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1JW5pB-0002rL-4t
	for axiom-mail@nongnu.org; Mon, 03 Mar 2008 03:15:05 -0500
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1JW5pA-0002r7-H1
	for axiom-mail@nongnu.org; Mon, 03 Mar 2008 03:15:04 -0500
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1JW5pA-0002r4-Bv
	for axiom-mail@nongnu.org; Mon, 03 Mar 2008 03:15:04 -0500
Received: from mx20.gnu.org ([199.232.41.8])
	by monty-python.gnu.org with esmtps (TLS-1.0:RSA_AES_256_CBC_SHA1:32)
	(Exim 4.60) (envelope-from <martin.rubey@univie.ac.at>)
	id 1JW5p9-0007Pd-Mr
	for axiom-mail@nongnu.org; Mon, 03 Mar 2008 03:15:03 -0500
Received: from grace.univie.ac.at ([131.130.3.115])
	by mx20.gnu.org with esmtp (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1JW5p1-0005Rq-DD
	for axiom-mail@nongnu.org; Mon, 03 Mar 2008 03:14:55 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=univie.ac.at; s=rev1; h=Sender:To:Cc:Subject:References:From:
	Date:In-Reply-To:Message-ID:MIME-Version:Content-Type; bh=o0XgAE
	LoDvEqcCyDY/bXV/DDj555jlDdp1tzwcCjrdE=; b=iXDdb55yLgvxVh6x/aCGUm
	R9IcJQlG8l67byCEmlTOBKGdRzSLcRpiMHI7zhwTsM2CYhhhsOr6HaZrADWA704r
	6WZXjlUok89Xz27tp4bkVkN8bDhLxpEl7QR4210F3Aw9mO7kL5+17SkYN64ts11i
	F6MN8RBn5Hd/EJ9qScVdE=
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.69)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1JW5ow-0007eu-Oi; Mon, 03 Mar 2008 09:14:50 +0100
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.69)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1JW5ow-000270-NW; Mon, 03 Mar 2008 09:14:50 +0100
Sender: rubey@aquin.mat.univie.ac.at
To: "Rainer Gluege" <gluegerainer@gmx.de>, Ralf.Hemmecke@risc.uni-linz.ac.at
Subject: Re: [Axiom-mail] Calc. with a self-inverse integer matrix
References: <20080301145909.42070@gmx.net>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 03 Mar 2008 09:14:50 +0100
In-Reply-To: <20080301145909.42070@gmx.net>
Message-ID: <9qd4qcdy11.fsf@aquin.mat.univie.ac.at>
Lines: 103
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: by mx20.gnu.org: Linux 2.6, seldom 2.4 (older, 4)
X-detected-kernel: by monty-python.gnu.org: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 03 Mar 2008 08:15:05 -0000

"Rainer Gluege" <gluegerainer@gmx.de> writes:

> Dear Axiom-Users,
> 
> i am new to axiom. 
> 
> I need the solution for the components of a matrix product 
> A times B = I.
> 
> ,,A'' is a self-inverse matrix with integer components, 

Sorry, I do not understand: if A times B = I, then B = A^-1.  If A is
self-inverse, then A = B.


> the components of ,,B'' are polynomial equations containing the components of
> two vectors which have their scalar product equal to zero, and one of them is
> normalized. this leads after all to the system of equations below.


> the problems:
> 
> 1.) i get:
> >> Error detected within library code:
>    system does not have a finite number of solutions

> however, i was expecting to find at least some more information.

Yes, the solver is not very intelligent, it seems.  At times, you can help by
specifying (as second argument to solve) the right variables to solve for.
Note however, that solve returning an empty list does not mean that there are
no solutions, only that no solutions were found.

I guess one can do better using Groebner Bases, but I would not know how.
Ralf?

(66) -> m n == matrix [[a[i,j] for j in 1..n] for i in 1..n]
   Compiled code for m has been cleared.
   1 old definition(s) deleted for function or rule m 
                                                                   Type: Void

(67) -> solve(parts(((m 3)^2)::SQMATRIX(3, POLY INT)-1), [a[3,3], a[3,2], a[3,1], a[2,3], a[2,2]])

   (67)
   [
                             2                     2              2
            - a   a    - a     + a           - a    a    + (- a     + 1)a
               1,2 2,1    1,1     1,1           1,2  2,1       1,1       1,2
     [a   = -------------------------, a   = -------------------------------,
       3,3           a    - 1           3,2           (a    - 1)a
                      1,1                               1,1      1,3
                             2
            - a   a    - a     + 1        a   a           a   a    + a    - 1
               1,2 2,1    1,1              1,3 2,1         1,2 2,1    1,1
      a   = ----------------------, a   = --------, a   = -------------------]
       3,1           a               2,3  a    - 1   2,2        a    - 1
                      1,3                  1,1                   1,1
     ,

                             2                     2              2
            - a   a    - a     - a           - a    a    + (- a     + 1)a
               1,2 2,1    1,1     1,1           1,2  2,1       1,1       1,2
     [a   = -------------------------, a   = -------------------------------,
       3,3           a    + 1           3,2           (a    + 1)a
                      1,1                               1,1      1,3
                             2
            - a   a    - a     + 1        a   a           a   a    - a    - 1
               1,2 2,1    1,1              1,3 2,1         1,2 2,1    1,1
      a   = ----------------------, a   = --------, a   = -------------------]
       3,1           a               2,3  a    + 1   2,2        a    + 1
                      1,3                  1,1                   1,1
     ]
                         Type: List List Equation Fraction Polynomial Integer

 
> 2.) how do i tell ,,axiom'' that the a_ij have to be of type integer?

currently, you cannot, i.e., I do not know of an algorithm present in Axiom
that solves within the integers.

> by the way, is their a way to define the type ,,self-inverse matrix with
> integer components'' in axiom?

You can certainly introduce a domain 

SelfInverseMatrix(R: Ring): Exports == Implementation where

    Exports ==> with

        ...

    Implementation ==> add

        ...

But what would you like to do with it?  You cannot even multiply two such
matrices without leaving the domain...

(Note that in Axiom a type is mostly intended to contain elements that satisfy
certain closure properties.  For example, in a field, you can add, multiply and
divide two elements and you will get again an element of the field)

Martin




From MAILER-DAEMON Mon Mar 03 04:57:35 2008
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1JW7QN-0007BQ-2I
	for mharc-axiom-mail@gnu.org; Mon, 03 Mar 2008 04:57:35 -0500
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1JW7QJ-00077F-9v
	for axiom-mail@nongnu.org; Mon, 03 Mar 2008 04:57:31 -0500
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1JW7QH-00074D-6T
	for axiom-mail@nongnu.org; Mon, 03 Mar 2008 04:57:29 -0500
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1JW7QG-00073c-MS
	for axiom-mail@nongnu.org; Mon, 03 Mar 2008 04:57:28 -0500
Received: from mail.gmx.net ([213.165.64.20])
	by monty-python.gnu.org with smtp (Exim 4.60)
	(envelope-from <gluegerainer@gmx.de>) id 1JW7QG-0002tR-3a
	for axiom-mail@nongnu.org; Mon, 03 Mar 2008 04:57:28 -0500
Received: (qmail invoked by alias); 03 Mar 2008 09:57:25 -0000
Received: from ifm-pc50.mb.uni-magdeburg.de (EHLO
	ifm-pc50.mb.Uni-Magdeburg.DE) [141.44.130.100]
	by mail.gmx.net (mp051) with SMTP; 03 Mar 2008 10:57:25 +0100
X-Authenticated: #8004071
X-Provags-ID: V01U2FsdGVkX1+BK2x66LiB83o7owRbzxjy0UXAqUG/AOTATvZHCA
	S//m3Z4gFJ9jqp
From: "gluegerainer@gmx.de" <gluegerainer@gmx.de>
To: axiom-mail@nongnu.org
Subject: Re: [Axiom-mail] Calc. with a self-inverse integer matrix
Date: Mon, 3 Mar 2008 11:04:17 +0100
User-Agent: KMail/1.7.1
References: <20080301145909.42070@gmx.net>
	<9qd4qcdy11.fsf@aquin.mat.univie.ac.at>
In-Reply-To: <9qd4qcdy11.fsf@aquin.mat.univie.ac.at>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200803031104.17544.gluegerainer@gmx.de>
X-Y-GMX-Trusted: 0
X-detected-kernel: by monty-python.gnu.org: Linux 2.6, seldom 2.4 (older, 4)
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: gluegerainer@gmx.de
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 03 Mar 2008 09:57:32 -0000


Hello,

thanks first for the advice that B=A! That is right, sorry for conducting too 
soon to the CAS.
With this, all the a_ij are out, and the problem is to find d_i and n_j such 
that B is self-inverse and integer, and that 2 conditions are fulfilled:

B=-I + n @ d + 2 n @ n
n.n=1
n.d=0

in components:

   --------------------------------------------------------------------------|
   | -1 + n1 d1 + 2 n1 n1    | n1 d2 + 2 n1 n2       | n1 d3 + 2 n1 n3       |
   |-------------------------|-----------------------|-----------------------|
B= |  n2 d1 + 2 n2 n1        | -1 + n2 d2 + 2 n2 n2  | n2 d3 + 2 n2 n3       |
   |-------------------------|-----------------------|-----------------------|
   |  n3 d1 + 2 n3 n1        | n3 d2 + 2 n3 n2       | -1 + d3 n3 + n3 n3    |
   --------------------------------------------------------------------------|

n1 n1 + n2 n2 +n3 n3 = 1
d1 n1 + d2 n2 +d3 n3 = 0

as you stated below, it is not possible to solve within the integers. now that 
the a_ij are out, maybe this does not apply anymore?

i am assuming that one can not find other solutions than for example
n=(1,0,0) d=(0,z1,z2), with

B=   |  1  z1  z2 |
     |  0  -1  0  |
     |  0  0  -1  |

being integer and self-inverse when z1 and z2 are integer. however, assuming 
is not enough. 
as i am new to axiom, i dont even know how to state the problem.

thanks in advance,

rainer

> "Rainer Gluege" <gluegerainer@gmx.de> writes:
> > Dear Axiom-Users,
> >
> > i am new to axiom.
> >
> > I need the solution for the components of a matrix product
> > A times B = I.
> >
> > ,,A'' is a self-inverse matrix with integer components,
>
> Sorry, I do not understand: if A times B = I, then B = A^-1.  If A is
> self-inverse, then A = B.
>
> > the components of ,,B'' are polynomial equations containing the
> > components of two vectors which have their scalar product equal to zero,
> > and one of them is normalized. this leads after all to the system of
> > equations below.
> >
> >
> > the problems:
> >
> > 1.) i get:
> > >> Error detected within library code:
> >
> >    system does not have a finite number of solutions
> >
> > however, i was expecting to find at least some more information.
>
> Yes, the solver is not very intelligent, it seems.  At times, you can help
> by specifying (as second argument to solve) the right variables to solve
> for. Note however, that solve returning an empty list does not mean that
> there are no solutions, only that no solutions were found.
>
> I guess one can do better using Groebner Bases, but I would not know how.
> Ralf?
>
> (66) -> m n == matrix [[a[i,j] for j in 1..n] for i in 1..n]
>    Compiled code for m has been cleared.
>    1 old definition(s) deleted for function or rule m
>                                                                    Type:
> Void
>
> (67) -> solve(parts(((m 3)^2)::SQMATRIX(3, POLY INT)-1), [a[3,3], a[3,2],
> a[3,1], a[2,3], a[2,2]])
>
>    (67)
>    [
>                              2                     2              2
>             - a   a    - a     + a           - a    a    + (- a     + 1)a
>                1,2 2,1    1,1     1,1           1,2  2,1       1,1      
> 1,2 [a   = -------------------------, a   =
> -------------------------------, 3,3           a    - 1           3,2      
>     (a    - 1)a
>                       1,1                               1,1      1,3
>                              2
>             - a   a    - a     + 1        a   a           a   a    + a    -
> 1 1,2 2,1    1,1              1,3 2,1         1,2 2,1    1,1 a   =
> ----------------------, a   = --------, a   = -------------------] 3,1     
>      a               2,3  a    - 1   2,2        a    - 1 1,3               
>   1,1                   1,1 ,
>
>                              2                     2              2
>             - a   a    - a     - a           - a    a    + (- a     + 1)a
>                1,2 2,1    1,1     1,1           1,2  2,1       1,1      
> 1,2 [a   = -------------------------, a   =
> -------------------------------, 3,3           a    + 1           3,2      
>     (a    + 1)a
>                       1,1                               1,1      1,3
>                              2
>             - a   a    - a     + 1        a   a           a   a    - a    -
> 1 1,2 2,1    1,1              1,3 2,1         1,2 2,1    1,1 a   =
> ----------------------, a   = --------, a   = -------------------] 3,1     
>      a               2,3  a    + 1   2,2        a    + 1 1,3               
>   1,1                   1,1 ]
>                          Type: List List Equation Fraction Polynomial
> Integer
>
> > 2.) how do i tell ,,axiom'' that the a_ij have to be of type integer?
>
> currently, you cannot, i.e., I do not know of an algorithm present in Axiom
> that solves within the integers.
>
> > by the way, is their a way to define the type ,,self-inverse matrix with
> > integer components'' in axiom?
>
> You can certainly introduce a domain
>
> SelfInverseMatrix(R: Ring): Exports == Implementation where
>
>     Exports ==> with
>
>         ...
>
>     Implementation ==> add
>
>         ...
>
> But what would you like to do with it?  You cannot even multiply two such
> matrices without leaving the domain...
>
> (Note that in Axiom a type is mostly intended to contain elements that
> satisfy certain closure properties.  For example, in a field, you can add,
> multiply and divide two elements and you will get again an element of the
> field)
>
> Martin
>
>
>
> _______________________________________________
> Axiom-mail mailing list
> Axiom-mail@nongnu.org
> http://lists.nongnu.org/mailman/listinfo/axiom-mail



From MAILER-DAEMON Mon Mar 03 05:36:31 2008
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1JW823-0005JD-Bp
	for mharc-axiom-mail@gnu.org; Mon, 03 Mar 2008 05:36:31 -0500
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1JW821-0005I1-RK
	for axiom-mail@nongnu.org; Mon, 03 Mar 2008 05:36:29 -0500
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1JW821-0005HH-34
	for axiom-mail@nongnu.org; Mon, 03 Mar 2008 05:36:29 -0500
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1JW820-0005Gr-I1
	for axiom-mail@nongnu.org; Mon, 03 Mar 2008 05:36:28 -0500
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1JW820-0004tB-2J
	for axiom-mail@nongnu.org; Mon, 03 Mar 2008 05:36:28 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=univie.ac.at; s=rev1; h=Sender:To:Cc:Subject:References:From:
	Date:In-Reply-To:Message-ID:MIME-Version:Content-Type; bh=YBWuaY
	Ke3P/qlsjr7GhATjhqUCtHfrkUMkkB3GGu4i4=; b=T7qdKUVB5HM6vsQ4/fnZHV
	oEa+Q4bIEu0w41X/kvi2c3uK5E9+wfD4kTvQqFzbaQkrdiX730WqjbmYnkugGn6u
	seIw4EO1FbiM8+ahv2m/IUOXUiE++i2LdYZeVB9Fu3ud1YCOx6j2sStRaxkv3kWm
	4ETv5fsZtWGuFrudpRfvw=
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.69)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1JW81x-0007eu-Kd; Mon, 03 Mar 2008 11:36:25 +0100
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.69)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1JW81x-0002LK-JH; Mon, 03 Mar 2008 11:36:25 +0100
Sender: rubey@aquin.mat.univie.ac.at
To: gluegerainer@gmx.de
Subject: Re: [Axiom-mail] Calc. with a self-inverse integer matrix
References: <20080301145909.42070@gmx.net>
	<9qd4qcdy11.fsf@aquin.mat.univie.ac.at>
	<200803031104.17544.gluegerainer@gmx.de>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 03 Mar 2008 11:36:26 +0100
In-Reply-To: <200803031104.17544.gluegerainer@gmx.de>
Message-ID: <9qlk506qmt.fsf@aquin.mat.univie.ac.at>
Lines: 88
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: by monty-python.gnu.org: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 03 Mar 2008 10:36:30 -0000

"gluegerainer@gmx.de" <gluegerainer@gmx.de> writes:

> Hello,
> 
> thanks first for the advice that B=A! That is right, sorry for conducting too 
> soon to the CAS.
> With this, all the a_ij are out, and the problem is to find d_i and n_j such 
> that B is self-inverse and integer, and that 2 conditions are fulfilled:
> 
> B=-I + n @ d + 2 n @ n
> n.n=1
> n.d=0
> 
> in components:
> 
>    --------------------------------------------------------------------------|
>    | -1 + n1 d1 + 2 n1 n1    | n1 d2 + 2 n1 n2       | n1 d3 + 2 n1 n3       |
>    |-------------------------|-----------------------|-----------------------|
> B= |  n2 d1 + 2 n2 n1        | -1 + n2 d2 + 2 n2 n2  | n2 d3 + 2 n2 n3       |
>    |-------------------------|-----------------------|-----------------------|
>    |  n3 d1 + 2 n3 n1        | n3 d2 + 2 n3 n2       | -1 + d3 n3 + n3 n3    |
>    --------------------------------------------------------------------------|
> 
> n1 n1 + n2 n2 +n3 n3 = 1
> d1 n1 + d2 n2 +d3 n3 = 0
> 
> as you stated below, it is not possible to solve within the integers. 

I meant to say that maybe you can solve it within the integers, but not
automatically with axiom.

> now that the a_ij are out, maybe this does not apply anymore?
> 
> i am assuming that one can not find other solutions than for example
> n=(1,0,0) d=(0,z1,z2), with
> 
> B=   |  1  z1  z2 |
>      |  0  -1  0  |
>      |  0  0  -1  |
> 
> being integer and self-inverse when z1 and z2 are integer. however, assuming
> is not enough.  as i am new to axiom, i dont even know how to state the
> problem.

To save others some time, here are some functions I defined to play around:

N k == matrix [[n[i] for i in 1..k]]

D k == matrix [[d[i] for i in 1..k]]

B k == -scalarMatrix(k, 1)+N k * D k + 2*N k * transpose N k

L k == concat([first parts(transpose N k * N k - 1), first parts(D k * N k)],parts((B k)^2::SQMATRIX(k, POLY INT) - 1))

we now want to say, for example,

solve L 2

but that does not work.  However:

(57) -> radicalSolve(L 2, [n[1], n[2]]).1

                   +---------+
                   |     2
                   |   d
                   |    1
                d  |---------       +---------+
                 2 |  2     2       |     2
                   |d   + d         |   d
                  \| 2     1        |    1
   (57)  [n = - --------------,n =  |--------- ]
           1          d         2   |  2     2
                       1            |d   + d
                                   \| 2     1
                                       Type: List Equation Expression Integer


Substituting back into B 2:

eval(B 2, radicalSolve(L 2, [n[1], n[2]]).1)

You will have to check by hand whether you find some integral solutions
there...


Maybe somebody else can help...

Martin




From MAILER-DAEMON Fri Mar 14 09:50:57 2008
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1JaAJF-0004iS-27
	for mharc-axiom-mail@gnu.org; Fri, 14 Mar 2008 09:50:57 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1JYRsF-0006iS-R1
	for axiom-mail@nongnu.org; Sun, 09 Mar 2008 16:11:59 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1JYRsC-0006h0-9I
	for axiom-mail@nongnu.org; Sun, 09 Mar 2008 16:11:59 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1JYRsC-0006gr-0m
	for axiom-mail@nongnu.org; Sun, 09 Mar 2008 16:11:56 -0400
Received: from sneakemail.com ([38.113.6.61] helo=sneak1.sneakemail.com)
	by monty-python.gnu.org with smtp (Exim 4.60)
	(envelope-from <0939ulf02@sneakemail.com>) id 1JYRsB-00019i-Ns
	for axiom-mail@nongnu.org; Sun, 09 Mar 2008 16:11:55 -0400
Received: (qmail 16968 invoked by uid 508); 9 Mar 2008 20:11:53 -0000
Date: 9 Mar 2008 20:11:53 -0000
To: axiom-mail@nongnu.org
Encoding: 8bit
From: 0939ulf02@sneakemail.com
Message-ID: <10673-80527@sneakemail.com>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 3)
X-Mailman-Approved-At: Fri, 14 Mar 2008 09:50:55 -0400
Subject: [Axiom-mail] Show conversion steps
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sun, 09 Mar 2008 20:12:00 -0000

Hello

I was wondering whether it was possible to see the conversion steps that axiom does, for example when integration a certain expression. After a quick browse through the documentation, the closest thing I came up with was trace. Is there any better way?

Thanks
Iwan



From MAILER-DAEMON Fri Mar 14 10:08:46 2008
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1JaAaT-0008Nv-0S
	for mharc-axiom-mail@gnu.org; Fri, 14 Mar 2008 10:08:45 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1JaAaO-0008Jv-JV
	for axiom-mail@nongnu.org; Fri, 14 Mar 2008 10:08:40 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1JaAaK-0008Gp-7c
	for axiom-mail@nongnu.org; Fri, 14 Mar 2008 10:08:37 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1JaAaK-0008Gd-4N
	for axiom-mail@nongnu.org; Fri, 14 Mar 2008 10:08:36 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1JaAaJ-00059g-CZ
	for axiom-mail@nongnu.org; Fri, 14 Mar 2008 10:08:35 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=univie.ac.at; s=rev1; h=Sender:To:Cc:Subject:References:From:
	Date:In-Reply-To:Message-ID:MIME-Version:Content-Type; bh=tHNSGj
	XniD4OzAFahUOJQVEGAKyWxlET+pQhPI3Su4k=; b=ozbqFYhUExn9Wii01gvVzN
	rzfVy1QLZhMvEztC8Emm85vcpFGtIoCy93tM8Uy1kYGoLyPZqyITeqpgnDLDXE3U
	QzHKTBy+GCwqc3Dx7Yb/vfBrasUps12gHHXwNOdm+8BwfJeNXRGtqxY5HlYJan/G
	XlYvEirS6BZsX/zrXRzr4=
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.69)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1JaAaH-0008TW-Ou; Fri, 14 Mar 2008 15:08:33 +0100
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.69)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1JaAaH-0007rf-Mg; Fri, 14 Mar 2008 15:08:33 +0100
Sender: rubey@aquin.mat.univie.ac.at
To: 0939ulf02@sneakemail.com
Subject: Re: [Axiom-mail] Show conversion steps
References: <10673-80527@sneakemail.com>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 14 Mar 2008 15:08:35 +0100
In-Reply-To: <10673-80527@sneakemail.com>
Message-ID: <9qfxutxusc.fsf@aquin.mat.univie.ac.at>
Lines: 20
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: by monty-python.gnu.org: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Fri, 14 Mar 2008 14:08:43 -0000

0939ulf02@sneakemail.com writes:

> Hello
> 
> I was wondering whether it was possible to see the conversion steps that
> axiom does, for example when integration a certain expression. After a quick
> browse through the documentation, the closest thing I came up with was
> trace. Is there any better way?

Maybe

  )set message bottom on

or, shorter

  )se me bo on

is what you are looking for?

Martin




From MAILER-DAEMON Mon Mar 17 02:41:15 2008
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Jb923-0006xw-Qh
	for mharc-axiom-mail@gnu.org; Mon, 17 Mar 2008 02:41:15 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Jb921-0006uS-Ge
	for axiom-mail@nongnu.org; Mon, 17 Mar 2008 02:41:13 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Jb920-0006si-LS
	for axiom-mail@nongnu.org; Mon, 17 Mar 2008 02:41:13 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Jb920-0006sX-J9
	for axiom-mail@nongnu.org; Mon, 17 Mar 2008 02:41:12 -0400
Received: from msa.uoa.gr ([195.134.100.72])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <amantzaf@math.uoa.gr>) id 1Jb920-0006UZ-3j
	for axiom-mail@nongnu.org; Mon, 17 Mar 2008 02:41:12 -0400
Received: by MSA with id A60ED010321C070D4A178D36E17AF88CB8803E92
Received: from angelopc (dsl-88-218-12-253.customers.vivodi.gr [88.218.12.253])
	(authenticated bits=0)
	by msa.uoa.gr (8.14.1/8.14.1) with ESMTP id m2H6eiIw009110
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NOT)
	for <axiom-mail@nongnu.org>; Mon, 17 Mar 2008 08:40:44 +0200 (EET)
From: "Angelos Mantzaflaris" <amantzaf@math.uoa.gr>
To: <axiom-mail@nongnu.org>
Date: Mon, 17 Mar 2008 08:40:47 +0200
Message-ID: <000101c887f9$d5469bc0$7fd3d340$@uoa.gr>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Mailer: Microsoft Office Outlook 12.0
Thread-Index: AciH+dNikbPfaorVTWSp/fPffFZ/9Q==
Content-Language: el
x-cr-hashedpuzzle: ACq3 BaFu CBjh CFLT CPt0 DPUg ETTy EVE5 Esyw FCsz Gk/L HPr4
	H2+M JOFp JndD Jrvk; 1;
	YQB4AGkAbwBtAC0AbQBhAGkAbABAAG4AbwBuAGcAbgB1AC4AbwByAGcA;
	Sosha1_v1; 7; {5922FD24-473D-423C-AE67-DE263E5878EC};
	YQBtAGEAbgB0AHoAYQBmAEAAbQBhAHQAaAAuAHUAbwBhAC4AZwByAA==;
	Mon, 17 Mar 2008 06:40:44 GMT;
	RABlAGMAbABhAHIAZQAgAHYAYQByAGkAYQBiAGwAZQAgAHQAeQBwAGUAIAB3AGkAdABoAGkAbgAgAGYAdQBuAGMAdABpAG8AbgA=
x-cr-puzzleid: {5922FD24-473D-423C-AE67-DE263E5878EC}
Sender: amantzaf@math.uoa.gr
X-UoAMSAId: A60ED010321C070D4A178D36E17AF88CB8803E92
X-detected-kernel: by monty-python.gnu.org: Genre and OS details not
	recognized.
Subject: [Axiom-mail] Declare variable type within function
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 17 Mar 2008 06:41:13 -0000

Hello,

Here is a newbie question: I am writing some axiom scripts for which I don't
want to declare I/O types. But, I need to declare, for example, an empty
list of typeOf(input). I have tried the following:

foo(x)==
	L:=[]
	L:= append(L,x)
	return L

Axiom will complain:
The type of the local variable L has changed in the computation.
We will attempt to interpret the code. I also try:

foo(x)==
	L:=[]::typeOf(x)
	L:= append(L,x)
	return L

Axiom will complain again:
Cannot compile conversion for types involving local variables.
In particular, could not compile the expression involving :: typeOf
AXIOM will attempt to step through and interpret the code.

But I can play tricks like this:

foo(x)==
	L:=[x.1-x.1]
	L:= append(L,x)
	return L

And Axiom will compile the function without errors:
Compiling function foo with type List PositiveInteger List Integer


So my question is, how can I do this in a straightforward way (without
playing tricks)?

Thank you in advance,
Angelos





From MAILER-DAEMON Mon Mar 17 05:35:30 2008
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1JbBkg-0001xp-FB
	for mharc-axiom-mail@gnu.org; Mon, 17 Mar 2008 05:35:30 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1JbBke-0001xZ-CG
	for axiom-mail@nongnu.org; Mon, 17 Mar 2008 05:35:28 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1JbBkc-0001wx-Jk
	for axiom-mail@nongnu.org; Mon, 17 Mar 2008 05:35:27 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1JbBkc-0001wu-AY
	for axiom-mail@nongnu.org; Mon, 17 Mar 2008 05:35:26 -0400
Received: from mail183.messagelabs.com ([62.231.131.67])
	by monty-python.gnu.org with smtp (Exim 4.60)
	(envelope-from <themos@nag.co.uk>) id 1JbBkb-0004Qe-WF
	for axiom-mail@nongnu.org; Mon, 17 Mar 2008 05:35:26 -0400
X-VirusChecked: Checked
X-Env-Sender: themos@nag.co.uk
X-Msg-Ref: server-4.tower-183.messagelabs.com!1205746523!8583832!1
X-StarScan-Version: 5.5.12.14.2; banners=nag.co.uk,-,-
X-Originating-IP: [62.231.145.242]
Received: (qmail 28023 invoked from network); 17 Mar 2008 09:35:23 -0000
Received: from nagmx1.nag.co.uk (HELO nagmx1.nag.co.uk) (62.231.145.242)
	by server-4.tower-183.messagelabs.com with SMTP;
	17 Mar 2008 09:35:23 -0000
Received: from loanamd6.nag.co.uk (loanamd6.nag.co.uk [192.156.217.152])
	by nagmx1.nag.co.uk (Postfix) with ESMTP id 94CC812015F
	for <axiom-mail@nongnu.org>; Mon, 17 Mar 2008 09:34:46 +0000 (GMT)
From: Themos Tsikas <themos@nag.co.uk>
Organization: NAG Ltd
To: axiom-mail@nongnu.org
Subject: Re: [Axiom-mail] Declare variable type within function
Date: Mon, 17 Mar 2008 09:35:18 +0000
User-Agent: KMail/1.9.6 (enterprise 20070904.708012)
References: <000101c887f9$d5469bc0$7fd3d340$@uoa.gr>
In-Reply-To: <000101c887f9$d5469bc0$7fd3d340$@uoa.gr>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200803170935.19685.themos@nag.co.uk>
X-detected-kernel: by monty-python.gnu.org: Linux 2.4-2.6
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: themos@nag.co.uk
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 17 Mar 2008 09:35:29 -0000

foo(x) == list x

works for you?

Themos Tsikas


On Monday 17 March 2008, Angelos Mantzaflaris wrote:
> Hello,
>
> Here is a newbie question: I am writing some axiom scripts for which I
> don't want to declare I/O types. But, I need to declare, for example, an
> empty list of typeOf(input). I have tried the following:
>
> foo(x)==
> 	L:=[]
> 	L:= append(L,x)
> 	return L
>
> Axiom will complain:
> The type of the local variable L has changed in the computation.
> We will attempt to interpret the code. I also try:
>
> foo(x)==
> 	L:=[]::typeOf(x)
> 	L:= append(L,x)
> 	return L
>
> Axiom will complain again:
> Cannot compile conversion for types involving local variables.
> In particular, could not compile the expression involving :: typeOf
> AXIOM will attempt to step through and interpret the code.
>
> But I can play tricks like this:
>
> foo(x)==
> 	L:=[x.1-x.1]
> 	L:= append(L,x)
> 	return L
>
> And Axiom will compile the function without errors:
> Compiling function foo with type List PositiveInteger List Integer
>
>
> So my question is, how can I do this in a straightforward way (without
> playing tricks)?
>
> Thank you in advance,
> Angelos
>
>
>
>
> _______________________________________________
> Axiom-mail mailing list
> Axiom-mail@nongnu.org
> http://lists.nongnu.org/mailman/listinfo/axiom-mail
>
> ________________________________________________________________________
> This e-mail has been scanned for all viruses by Star.
> ________________________________________________________________________



________________________________________________________________________
The Numerical Algorithms Group Ltd is a company registered in England
and Wales with company number 1249803. The registered office is:
Wilkinson House, Jordan Hill Road, Oxford OX2 8DR, United Kingdom.

This e-mail has been scanned for all viruses by Star. The service is
powered by MessageLabs. 
________________________________________________________________________



From MAILER-DAEMON Mon Mar 17 12:07:02 2008
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1JbHra-0006zA-09
	for mharc-axiom-mail@gnu.org; Mon, 17 Mar 2008 12:07:02 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1JbHrX-0006yl-GY
	for axiom-mail@nongnu.org; Mon, 17 Mar 2008 12:06:59 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1JbHrW-0006yM-Eb
	for axiom-mail@nongnu.org; Mon, 17 Mar 2008 12:06:58 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1JbHrW-0006yI-B7
	for axiom-mail@nongnu.org; Mon, 17 Mar 2008 12:06:58 -0400
Received: from fg-out-1718.google.com ([72.14.220.157])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1JbHrV-0001C2-Rd
	for axiom-mail@nongnu.org; Mon, 17 Mar 2008 12:06:58 -0400
Received: by fg-out-1718.google.com with SMTP id e12so4788707fga.8
	for <axiom-mail@nongnu.org>; Mon, 17 Mar 2008 09:06:55 -0700 (PDT)
Received: by 10.86.27.9 with SMTP id a9mr94954fga.62.1205770014776;
	Mon, 17 Mar 2008 09:06:54 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Mon, 17 Mar 2008 09:06:54 -0700 (PDT)
Message-ID: <fbcd16d40803170906l9b35ab5g3b635afaa06152d@mail.gmail.com>
Date: Mon, 17 Mar 2008 12:06:54 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: "Angelos Mantzaflaris" <amantzaf@math.uoa.gr>
Subject: Re: [Axiom-mail] Declare variable type within function
In-Reply-To: <000101c887f9$d5469bc0$7fd3d340$@uoa.gr>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <000101c887f9$d5469bc0$7fd3d340$@uoa.gr>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 17 Mar 2008 16:07:00 -0000

Welcome to Axiom!

On 3/17/08, Angelos Mantzaflaris wrote:
>
> Here is a newbie question: I am writing some axiom scripts for
> which I don't want to declare I/O types.

In general the ability to write scripts without declaring types in
Axiom is rather limited. Axiom is strongly typed (everything has a
type) but the type inference in the Axiom command line interpreter is
rather weak and sometimes can produce very unexpected results. So I
would first comment: "continue on this path with caution"...

> But, I need to declare, for example, an empty
>  list of typeOf(input). I have tried the following:
>
>  foo(x)==
>         L:=[]
>         L:= append(L,x)
>         return L
>
>  Axiom will complain:
>  The type of the local variable L has changed in the computation.
>  We will attempt to interpret the code. I also try:
>
>  foo(x)==
>         L:=[]::typeOf(x)
>         L:= append(L,x)
>         return L
>
>  Axiom will complain again:
>  Cannot compile conversion for types involving local variables.
>  In particular, could not compile the expression involving
> :: typeOf AXIOM will attempt to step through and interpret the
> code.

Axiom is not complaining, it is only giving you a warning that it
cannot compile what you wrote (for the reason it gave) but it still
might be able to interpret it - and does. Is there a reason why you do
not want this to happen?

>
>  But I can play tricks like this:
>
>  foo(x)==
>         L:=[x.1-x.1]
>         L:= append(L,x)
>         return L
>
>  And Axiom will compile the function without errors:
>  Compiling function foo with type List PositiveInteger List Integer
>
>
>  So my question is, how can I do this in a straightforward way
> (without playing tricks)?
>

Although you might still consider it a "trick" I would suggest the
following code that I think is more transparent:

  foo(x)==
         L:=select(a+->false,x)
         L:= append(L,x)

Personally, in the context where you want to use this ("scripts
without declaring types"), I would not regard this as a trick. It
seems likely however that in most cases it should be possible to write
the code you want without having to first create an empty list by
using higher-order functions like 'select' and 'map'.

Please feel free to post examples of any problems you encounter.

Regards,
Bill Page



From MAILER-DAEMON Mon Mar 17 12:20:03 2008
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1JbI4B-0004iY-Iq
	for mharc-axiom-mail@gnu.org; Mon, 17 Mar 2008 12:20:03 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1JbI4A-0004i1-DM
	for axiom-mail@nongnu.org; Mon, 17 Mar 2008 12:20:02 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1JbI48-0004hV-PV
	for axiom-mail@nongnu.org; Mon, 17 Mar 2008 12:20:01 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1JbI48-0004hS-Ig
	for axiom-mail@nongnu.org; Mon, 17 Mar 2008 12:20:00 -0400
Received: from fk-out-0910.google.com ([209.85.128.184])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1JbI48-0005Fa-6k
	for axiom-mail@nongnu.org; Mon, 17 Mar 2008 12:20:00 -0400
Received: by fk-out-0910.google.com with SMTP id 18so6351590fkq.2
	for <axiom-mail@nongnu.org>; Mon, 17 Mar 2008 09:19:59 -0700 (PDT)
Received: by 10.82.182.1 with SMTP id e1mr36463993buf.21.1205770793595;
	Mon, 17 Mar 2008 09:19:53 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Mon, 17 Mar 2008 09:19:53 -0700 (PDT)
Message-ID: <fbcd16d40803170919k5f7567bbgcb61d61070963d30@mail.gmail.com>
Date: Mon, 17 Mar 2008 12:19:53 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: themos@nag.co.uk
Subject: Re: [Axiom-mail] Declare variable type within function
In-Reply-To: <200803170935.19685.themos@nag.co.uk>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <000101c887f9$d5469bc0$7fd3d340$@uoa.gr>
	<200803170935.19685.themos@nag.co.uk>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 17 Mar 2008 16:20:02 -0000

On 3/17/08, Themos Tsikas wrote:
> foo(x) == list x
>
>  works for you?
>

This function is *not* equivalent to what Angelos wrote which could
actually be written most simply as just:

 foo(x) == x

>  > foo(x)==
>  >       L:=[x.1-x.1]
>  >       L:= append(L,x)
>  >       return L

However I am sure that he intended this only as an example and in
general the logical of this function could be much more complex then
just calling append and returning what was passed. As I understand it
the point of the example is that we want 'L' to have the *same type*
as 'x' but a different value - without ever specifying the actual type
of 'x'.

Regards,
Bill Page.



From MAILER-DAEMON Mon Mar 17 12:27:31 2008
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1JbIBP-0008Hv-Cq
	for mharc-axiom-mail@gnu.org; Mon, 17 Mar 2008 12:27:31 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1JbIBN-0008Hm-7T
	for axiom-mail@nongnu.org; Mon, 17 Mar 2008 12:27:29 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1JbIBL-0008HP-JL
	for axiom-mail@nongnu.org; Mon, 17 Mar 2008 12:27:28 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1JbIBL-0008HM-84
	for axiom-mail@nongnu.org; Mon, 17 Mar 2008 12:27:27 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1JbIBK-0007T1-O4
	for axiom-mail@nongnu.org; Mon, 17 Mar 2008 12:27:27 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=univie.ac.at; s=rev1; h=Sender:To:Cc:Subject:References:From:
	Date:In-Reply-To:Message-ID:MIME-Version:Content-Type; bh=tuMefb
	c6/8eewOpJKarsmoz/91DM6iltMeKZBctJEeY=; b=MAT8Yj/Y+smNKnx32rb0bF
	uFG+5uquXr2mcY3So1F/aZQMpAu7I++4u3CzqZp+8H5hj+4LmTdzwDHyGR4GXOOz
	kiZ4xEpIdZVAzKefyoX4aPC/fBaU1VXrfltSnqsiRvj5ghrEbYEyr+14zHcd0cpZ
	mRSn4pi18B6/KvKoeKUTE=
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.69)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1JbIBH-0000Qp-SR; Mon, 17 Mar 2008 17:27:23 +0100
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.69)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1JbIBH-0006sk-RN; Mon, 17 Mar 2008 17:27:23 +0100
Sender: rubey@aquin.mat.univie.ac.at
To: "Bill Page" <bill.page@newsynthesis.org>
Subject: Re: [Axiom-mail] Declare variable type within function
References: <000101c887f9$d5469bc0$7fd3d340$@uoa.gr>
	<fbcd16d40803170906l9b35ab5g3b635afaa06152d@mail.gmail.com>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 17 Mar 2008 17:27:26 +0100
In-Reply-To: <fbcd16d40803170906l9b35ab5g3b635afaa06152d@mail.gmail.com>
Message-ID: <9qprttwc29.fsf@aquin.mat.univie.ac.at>
Lines: 29
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: by monty-python.gnu.org: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 17 Mar 2008 16:27:29 -0000

"Bill Page" <bill.page@newsynthesis.org> writes:

> >  But I can play tricks like this:
> >
> >  foo(x)==
> >         L:=[x.1-x.1]
> >         L:= append(L,x)
> >         return L
> >

> Although you might still consider it a "trick" I would suggest the
> following code that I think is more transparent:
> 
>   foo(x)==
>          L:=select(a+->false,x)
>          L:= append(L,x)

Angelos' trick is better: select would have to consider every element of x...

But maybe you like

   foo(x)==
          L:= if empty? x then x else rest [first x]
          L:= append(L,x)

The best way to go forward is of course to make type inference better.  (And I
do believe that it's already quite OK, contrary to Bill)

Martin




From MAILER-DAEMON Mon Mar 17 13:04:54 2008
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1JbIla-0003nb-75
	for mharc-axiom-mail@gnu.org; Mon, 17 Mar 2008 13:04:54 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1JbIlY-0003k1-6e
	for axiom-mail@nongnu.org; Mon, 17 Mar 2008 13:04:52 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1JbIlX-0003io-HB
	for axiom-mail@nongnu.org; Mon, 17 Mar 2008 13:04:51 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1JbIlX-0003ie-8B
	for axiom-mail@nongnu.org; Mon, 17 Mar 2008 13:04:51 -0400
Received: from fg-out-1718.google.com ([72.14.220.157])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1JbIlW-0007de-62
	for axiom-mail@nongnu.org; Mon, 17 Mar 2008 13:04:51 -0400
Received: by fg-out-1718.google.com with SMTP id e12so4807778fga.8
	for <axiom-mail@nongnu.org>; Mon, 17 Mar 2008 10:04:48 -0700 (PDT)
Received: by 10.86.28.5 with SMTP id b5mr5407623fgb.79.1205773488548;
	Mon, 17 Mar 2008 10:04:48 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Mon, 17 Mar 2008 10:04:48 -0700 (PDT)
Message-ID: <fbcd16d40803171004s18d997eak5db2b632d3cb83cb@mail.gmail.com>
Date: Mon, 17 Mar 2008 13:04:48 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: "Martin Rubey" <martin.rubey@univie.ac.at>
Subject: Re: [Axiom-mail] Declare variable type within function
In-Reply-To: <9qprttwc29.fsf@aquin.mat.univie.ac.at>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <000101c887f9$d5469bc0$7fd3d340$@uoa.gr>
	<fbcd16d40803170906l9b35ab5g3b635afaa06152d@mail.gmail.com>
	<9qprttwc29.fsf@aquin.mat.univie.ac.at>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 17 Mar 2008 17:04:52 -0000

On 17 Mar 2008 17:27:26 +0100, Martin Rubey <martin.rubey@univie.ac.at> wrote:
> "Bill Page" <bill.page@newsynthesis.org> writes:
>
>  > >  But I can play tricks like this:
>  > >
>  > >  foo(x)==
>  > >         L:=[x.1-x.1]
>  > >         L:= append(L,x)
>  > >         return L
>  > >
>
>
> > Although you might still consider it a "trick" I would suggest the
>  > following code that I think is more transparent:
>  >
>  >   foo(x)==
>  >          L:=select(a+->false,x)
>  >          L:= append(L,x)
>
>
> Angelos' trick is better: select would have to consider every element of x...
>

Define "better". I said it was more "transparent".

The Angelo's example actually produces:

(3) -> foo(x)==(L:=[x.1-x.1]; L:=append(L,x))
   Compiled code for foo has been cleared.
   1 old definition(s) deleted for function or rule foo
                                                                   Type: Void
(4) -> foo([1,2,3])
   Compiling function foo with type List PositiveInteger -> List
      Integer

   (4)  [0,1,2,3]
                                                           Type: List Integer

So a "better" definition for this function might be just:

(5) -> foo(x)==concat(0,x)
   Compiled code for foo has been cleared.
   1 old definition(s) deleted for function or rule foo
                                                                   Type: Void
(6) -> foo([1,2,3])
   Compiling function foo with type List PositiveInteger -> List
      Integer

   (6)  [0,1,2,3]
                                                           Type: List Integer

>  But maybe you like
>
>    foo(x)==
>           L:= if empty? x then x else rest [first x]
>           L:= append(L,x)
>

You are joking, right?  :-) ... what you wrote seems horribly obscure to me.

>  The best way to go forward is of course to make type inference better.
>  (And I do believe that it's already quite OK, contrary to Bill)
>

I agree it should be better but I think making it better without
changing the whole underlying philosophy could be very difficult.
(Think about Haskell as an example of a strongly typed language with
much better type inference.). And as you know there are some cases
where Axiom produces some spectacularly unexpected results for the new
user ... Probably some of these cases could be prevented by a careful
re-design of the system of coercions available by default to the axiom
interpreter, but then one might risk also further weakening the set of
inferences that are possible.  (I guess this is a subject best
continued on the developer list...)

Regards,
Bill Page.



From MAILER-DAEMON Tue Mar 18 07:19:45 2008
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1JbZr6-0000NQ-TL
	for mharc-axiom-mail@gnu.org; Tue, 18 Mar 2008 07:19:44 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1JbZr4-0000MH-D9
	for axiom-mail@nongnu.org; Tue, 18 Mar 2008 07:19:42 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1JbZr2-0000LX-Mg
	for axiom-mail@nongnu.org; Tue, 18 Mar 2008 07:19:41 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1JbZr2-0000LG-BO
	for axiom-mail@nongnu.org; Tue, 18 Mar 2008 07:19:40 -0400
Received: from msa.uoa.gr ([195.134.100.72])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <amantzaf@math.uoa.gr>) id 1JbZr1-0000JL-O5
	for axiom-mail@nongnu.org; Tue, 18 Mar 2008 07:19:40 -0400
Received: by MSA with id 0D6DB23698B05EFDBABBF070DAC8ABFC67CBE16E
Received: from angelopc ([195.134.98.203]) (authenticated bits=0)
	by msa.uoa.gr (8.14.1/8.14.1) with ESMTP id m2IBJ3Q0022078
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NOT)
	for <axiom-mail@nongnu.org>; Tue, 18 Mar 2008 13:19:07 +0200 (EET)
From: "Angelos Mantzaflaris" <amantzaf@math.uoa.gr>
To: <axiom-mail@nongnu.org>
References: <000101c887f9$d5469bc0$7fd3d340$@uoa.gr>
	<fbcd16d40803170906l9b35ab5g3b635afaa06152d@mail.gmail.com>
In-Reply-To: <fbcd16d40803170906l9b35ab5g3b635afaa06152d@mail.gmail.com>
Subject: RE: [Axiom-mail] Declare variable type within function
Date: Tue, 18 Mar 2008 13:19:06 +0200
Message-ID: <000601c888e9$e4754fb0$ad5fef10$@uoa.gr>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Mailer: Microsoft Office Outlook 12.0
Thread-Index: AciISPgCPKcHkJsGQhyB9NAplZtTPAAni1KA
Content-Language: el
Sender: amantzaf@math.uoa.gr
X-UoAMSAId: 0D6DB23698B05EFDBABBF070DAC8ABFC67CBE16E
X-detected-kernel: by monty-python.gnu.org: Genre and OS details not
	recognized.
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 18 Mar 2008 11:19:42 -0000

Thank you for your answers everyone.

>Axiom is not complaining, it is only giving you a warning that it
>cannot compile what you wrote (for the reason it gave) but it still
>might be able to interpret it - and does. Is there a reason why you do
>not want this to happen?

Well it just seemed strange to me since it will compile it if I do the trick
I told you. After all, compiling is better than interpreting, right?
Another reason is that If I explicitly define a local variable type this
saves me from having to convert the right side of some assignments inside
the code, cause otherwise I won't get the desired output type (it won't
auto-convert to left hand type).
So my thought is: " Cannot compile conversion for types involving local
variables": Why not? Since you can do it if I do the trick!

To be more specific, I would like to have a function that works with
polynomials, for example the normalForm function. This function works with
POLY FRAC INT, Univariate, DMP's, HDMP's and so on. If I want to write a
script that implements this function and just make it work with polynomials,
I should leave it I/O undeclared.

Thank you again,

Angelos





From MAILER-DAEMON Tue Mar 18 08:31:30 2008
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1JbayY-0007UP-5h
	for mharc-axiom-mail@gnu.org; Tue, 18 Mar 2008 08:31:30 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1JbayW-0007Rj-04
	for axiom-mail@nongnu.org; Tue, 18 Mar 2008 08:31:28 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1JbayU-0007QO-Vp
	for axiom-mail@nongnu.org; Tue, 18 Mar 2008 08:31:27 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1JbayU-0007Pw-PM
	for axiom-mail@nongnu.org; Tue, 18 Mar 2008 08:31:26 -0400
Received: from fg-out-1718.google.com ([72.14.220.152])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1JbayU-0002au-Bi
	for axiom-mail@nongnu.org; Tue, 18 Mar 2008 08:31:26 -0400
Received: by fg-out-1718.google.com with SMTP id e12so5174981fga.8
	for <axiom-mail@nongnu.org>; Tue, 18 Mar 2008 05:31:24 -0700 (PDT)
Received: by 10.86.4.2 with SMTP id 2mr6151065fgd.9.1205843484272;
	Tue, 18 Mar 2008 05:31:24 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Tue, 18 Mar 2008 05:31:24 -0700 (PDT)
Message-ID: <fbcd16d40803180531o60413035yf62d19a7e9735a07@mail.gmail.com>
Date: Tue, 18 Mar 2008 08:31:24 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: "Angelos Mantzaflaris" <amantzaf@math.uoa.gr>
Subject: Re: [Axiom-mail] Declare variable type within function
In-Reply-To: <000601c888e9$e4754fb0$ad5fef10$@uoa.gr>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <000101c887f9$d5469bc0$7fd3d340$@uoa.gr>
	<fbcd16d40803170906l9b35ab5g3b635afaa06152d@mail.gmail.com>
	<000601c888e9$e4754fb0$ad5fef10$@uoa.gr>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 18 Mar 2008 12:31:28 -0000

On 3/18/08, Angelos Mantzaflaris wrote:
>
> Well it just seemed strange to me since it will compile it if I do the
> trick I told you. After all, compiling is better than interpreting, right?

Yes, it results in code that executes more quickly although in some
cases and in some versions of Axiom compiling involves a significant
overhead so if the function is only used infrequently there many be no
net gain in performance. To prevent compilation of functions in the
interpreter there is the system command:

  )set functions compile off

It is 'on' by default.

>  Another reason is that If I explicitly define a local variable type this
>  saves me from having to convert the right side of some assignments
> inside the code, cause otherwise I won't get the desired output type
> (it won't auto-convert to left hand type). So my thought is:
> " Cannot compile conversion for types involving local
>  variables": Why not? Since you can do it if I do the trick!
>

Yes, it is a good question. In Axiom types are essentially static.
This is particularly true in the Spad library compiler but it is also
true to a lesser extent in the Axiom command interpreter. This means
that variables cannot be used where types are required (e.g. in the
declaration of a new variable). In the case of your example, the type
of the variable is called "static in context", i.e. the type is known
and fixed by the value of a parameter. So in principle a smarter
interpreter/compiler could in principle analyze the situation and
compile the code. The trick you used makes this fact obvious to the
interpreter so the compilation goes ahead.

>  To be more specific, I would like to have a function that works with
>  polynomials, for example the normalForm function. This function works
> with  POLY FRAC INT, Univariate, DMP's, HDMP's and so on. If I want
> to write a script that implements this function and just make it work
> with polynomials, I should leave it I/O undeclared.
>

I think that is very interesting.

Regards,
Bill Page.



