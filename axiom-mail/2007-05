From MAILER-DAEMON Wed May 02 02:52:48 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hj8hj-0006t4-Il
	for mharc-axiom-mail@gnu.org; Wed, 02 May 2007 02:52:47 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hj8hi-0006rf-5E
	for axiom-mail@nongnu.org; Wed, 02 May 2007 02:52:46 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hj8hg-0006rP-Ph
	for axiom-mail@nongnu.org; Wed, 02 May 2007 02:52:45 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43)
	id 1Hj8he-0006r7-N1; Wed, 02 May 2007 02:52:42 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1Hj8bG-0004zI-9x; Wed, 02 May 2007 02:46:06 -0400
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1Hj8b8-0006VF-U1; Wed, 02 May 2007 08:45:58 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1Hj8b8-0008Nm-Pn; Wed, 02 May 2007 08:45:58 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: risc <risc2007@axiom-developer.org>
References: <9qk5yahtxi.fsf@kratt3.mat.univie.ac.at>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 02 May 2007 08:45:57 +0200
Message-ID: <9qfy6fbu56.fsf@aquin.mat.univie.ac.at>
Lines: 60
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: aldor-l <aldor-l@aldor.org>, nfn-info@dmg.tuwien.ac.at,
	axiom-math <axiom-math@nongnu.org>, axiom-mail <axiom-mail@nongnu.org>,
	maxima <maxima@math.utexas.edu>, mupad-combinat-devel@lists.sourceforge.net
Subject: [Axiom-mail] [ANN] Axiom Workshop 2007 - second announcement
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 02 May 2007 06:52:46 -0000

This is the second announcement of the 


                         AXIOM WORKSHOP 2007

                         Symmetric Functions

               Thursday, June 14 to Saturday, June 16.

     http://www.risc.uni-linz.ac.at/about/conferences/summer2007

----------------------------------------------------------------------

Axiom is a Computer Algebra System with a long tradition.  It recently
became free software, see http://www.axiom-developer.org

The workshop aims at a cooperation of Axiom developers with developers
of packages written for other Computer Algebra Systems, and
mathematicians that would like to use a computer algebra system to
perform experiments.

One goal of the workshop is to learn about the mathematical theory,
the design of packages written for other CAS and to make their
functionality available in Axiom.

If you would like to attend the workshop, please send mail as soon as
possible to <risc2007@axiom-developer.org>.  There will be no
conference fee, but it is expected that participants pay accommodation
and meals themselves.  There is a limited number of rooms available in
Hagenberg for approximately 28 EUR/night including breakfast.

----------------------------------------------------------------------

We will enjoy the following talks:

  Michael Schlosser        An introduction to symmetric functions and 
                           plethystic notation

  ....................................................................

  Francois Descouens       Symmetric functions and Hopf algebras
                           Usage and design in MuPAD-Combinat

  Bertfried Fauser         Calculations in character Hopf algebras 
                           using SCHUR and Maple

  Harald Fripertinger      Combinatorics under finite group actions in 
                           SYMMETRICA.

  Axel Kohnert             Symmetric functions in MAGMA

----------------------------------------------------------------------

Organisers: Ralf Hemmecke
            Martin Rubey


Email:                  risc2007@axiom-developer.org
URL:                    http://wiki.axiom-developer.org/WorkshopRISC2007
High resolution poster: http://www.mat.univie.ac.at/~rubey/Workshop2007.jpg




From MAILER-DAEMON Sun May 06 23:07:54 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HktZp-0000aF-O2
	for mharc-axiom-mail@gnu.org; Sun, 06 May 2007 23:07:53 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HktZp-0000Zy-0l
	for axiom-mail@nongnu.org; Sun, 06 May 2007 23:07:53 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HktZo-0000Zm-Er
	for axiom-mail@nongnu.org; Sun, 06 May 2007 23:07:52 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HktZo-0000Zf-BT
	for axiom-mail@nongnu.org; Sun, 06 May 2007 23:07:52 -0400
Received: from postal.cs.tamu.edu ([128.194.138.100])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1HktSs-0007aq-DO
	for axiom-mail@nongnu.org; Sun, 06 May 2007 23:00:42 -0400
Received: from soliton.cs.tamu.edu (vpn-15.cs.tamu.edu [128.194.150.15])
	by postal.cs.tamu.edu (Postfix) with ESMTP id 8EE5A46DE0C
	for <axiom-mail@nongnu.org>; Sun,  6 May 2007 22:00:41 -0500 (CDT)
Received: by soliton.cs.tamu.edu (Postfix, from userid 1000)
	id 436891AAEB; Sun,  6 May 2007 22:00:32 -0500 (CDT)
Sender: gdr@cs.tamu.edu
To: axiom-mail@nongnu.org
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
Organization: Texas A&M University, Department of Computer Science
Date: 06 May 2007 22:00:32 -0500
Message-ID: <87ejltjq27.fsf@soliton.cs.tamu.edu>
Lines: 83
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Solaris 8 (1)
Subject: [Axiom-mail] Spad and inductive types
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 07 May 2007 03:07:53 -0000


Hi,

  While writing a tutotial on programming with Spad, I realize that
I don't have a good way to present inductive types in Spad.  I know
what they would like in my ideal Spad, but we don't have that ideal
Spad yet.  So, I'm asking here how you would write inductive types
in today Spad.

  For concretness, here is a very classic example of inductive type
along with a function working on expression of such type, written in
both Haskell and New Boot.  How would you best write that in Spad?


------8<----- Begin Haskell code ------8<-----
data Expr = MkInt Int
          | MkAdd Expr Expr
	  | MkMul Expr Expr

eval::Expr -> Int
eval (MkInt i) = i
eval (MkAdd x y) = (eval x) + (eval y)
eval (MkMul x y) = (eval x) * (eval y)
------8<----- End Haskell code ------8<-------


Here is the same thing written in New Boot

------8<----- Begin Boot code ------8<-----
structure Expr == 
   MkInt(Integer)
   MkAdd(Expr, Expr)
   MkMul(Expr, Expr)

eval e ==
  case e of
     MkInt(i) => i
     MkAdd(x, y) => eval(x) + eval(y)
     MkMul(x, y) => eval(x) * eval(y)
     otherwise => error "should not happen"
------8<----- End Boot code ------8<-------


For the curious, the above New Boot code is translated as
shown below.

How would you write that in Spad.  Please, keep the discussion
on axiom-mail.

Thanks!

-- Gaby
 
; structure Expr == 
;    MkInt(Integer)
;    MkAdd(Expr, Expr)
;    MkMul(Expr, Expr)
 
(DEFUN |MkInt| #0=(|bfVar#1|) (CONS '|MkInt| (LIST . #0#)))
(DEFUN |MkAdd| #0=(|bfVar#2| |bfVar#3|) (CONS '|MkAdd| (LIST . #0#)))
(DEFUN |MkMul| #0=(|bfVar#4| |bfVar#5|) (CONS '|MkMul| (LIST . #0#)))
 
; eval e ==
;   case e of
;      MkInt(i) => i
;      MkAdd(x, y) => eval(x) + eval(y)
;      MkMul(x, y) => eval(x) * eval(y)
;      otherwise => error "should not happen"
 
(DEFUN |eval| (|e|)
  (PROG (|bfVar#7| |bfVar#6|)
    (RETURN
      (PROGN
        (SETQ |bfVar#6| |e|)
        (SETQ |bfVar#7| (CDR |bfVar#6|))
        (CASE (CAR |bfVar#6|)
          (|MkInt| (LET ((|i| (CAR |bfVar#7|))) |i|))
          (|MkAdd| (LET ((|x| (CAR |bfVar#7|)) (|y| (CADR |bfVar#7|)))
                     (+ (|eval| |x|) (|eval| |y|))))
          (|MkMul| (LET ((|x| (CAR |bfVar#7|)) (|y| (CADR |bfVar#7|)))
                     (* (|eval| |x|) (|eval| |y|))))
          (T (|error| '|should not happen|)))))))




From MAILER-DAEMON Mon May 07 02:35:11 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HkwoR-00056y-6g
	for mharc-axiom-mail@gnu.org; Mon, 07 May 2007 02:35:11 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HkwoQ-00054X-26
	for axiom-mail@nongnu.org; Mon, 07 May 2007 02:35:10 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HkwoO-00051W-Ii
	for axiom-mail@nongnu.org; Mon, 07 May 2007 02:35:09 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HkwoO-00051T-EL
	for axiom-mail@nongnu.org; Mon, 07 May 2007 02:35:08 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1HkwhQ-0007RR-Lx
	for axiom-mail@nongnu.org; Mon, 07 May 2007 02:27:57 -0400
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HkwhK-0003HZ-3b; Mon, 07 May 2007 08:27:50 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HkwhK-0003Cq-1h; Mon, 07 May 2007 08:27:50 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: Re: [Axiom-mail] Spad and inductive types
References: <87ejltjq27.fsf@soliton.cs.tamu.edu>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 07 May 2007 08:27:49 +0200
In-Reply-To: <87ejltjq27.fsf@soliton.cs.tamu.edu>
Message-ID: <9q7irlm9lm.fsf@aquin.mat.univie.ac.at>
Lines: 93
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 07 May 2007 06:35:10 -0000

Dear Gaby,

Gabriel Dos Reis <gdr@cs.tamu.edu> writes:

>   For concretness, here is a very classic example of inductive type
> along with a function working on expression of such type, written in
> both Haskell and New Boot.  How would you best write that in Spad?

I'm very sorry, but I do not understand the code below.  Could you describe
what it is supposed to do?  I guess: Expr is the name of the type (= domain?)
you want to create, and it exports a single operation called "eval", which
returns an integer.  But what is MkInt, MkAdd and MkMul?  Perhaps you want to
say that an element in Expr can be of three forms, namely MkInt, MkAdd or
MkMul?

Martin

 
> ------8<----- Begin Haskell code ------8<-----
> data Expr = MkInt Int
>           | MkAdd Expr Expr
> 	  | MkMul Expr Expr
> 
> eval::Expr -> Int
> eval (MkInt i) = i
> eval (MkAdd x y) = (eval x) + (eval y)
> eval (MkMul x y) = (eval x) * (eval y)
> ------8<----- End Haskell code ------8<-------
> 
> 
> Here is the same thing written in New Boot
> 
> ------8<----- Begin Boot code ------8<-----
> structure Expr == 
>    MkInt(Integer)
>    MkAdd(Expr, Expr)
>    MkMul(Expr, Expr)
> 
> eval e ==
>   case e of
>      MkInt(i) => i
>      MkAdd(x, y) => eval(x) + eval(y)
>      MkMul(x, y) => eval(x) * eval(y)
>      otherwise => error "should not happen"
> ------8<----- End Boot code ------8<-------
> 
> 
> For the curious, the above New Boot code is translated as
> shown below.
> 
> How would you write that in Spad.  Please, keep the discussion
> on axiom-mail.
> 
> Thanks!
> 
> -- Gaby
>  
> ; structure Expr == 
> ;    MkInt(Integer)
> ;    MkAdd(Expr, Expr)
> ;    MkMul(Expr, Expr)
>  
> (DEFUN |MkInt| #0=(|bfVar#1|) (CONS '|MkInt| (LIST . #0#)))
> (DEFUN |MkAdd| #0=(|bfVar#2| |bfVar#3|) (CONS '|MkAdd| (LIST . #0#)))
> (DEFUN |MkMul| #0=(|bfVar#4| |bfVar#5|) (CONS '|MkMul| (LIST . #0#)))
>  
> ; eval e ==
> ;   case e of
> ;      MkInt(i) => i
> ;      MkAdd(x, y) => eval(x) + eval(y)
> ;      MkMul(x, y) => eval(x) * eval(y)
> ;      otherwise => error "should not happen"
>  
> (DEFUN |eval| (|e|)
>   (PROG (|bfVar#7| |bfVar#6|)
>     (RETURN
>       (PROGN
>         (SETQ |bfVar#6| |e|)
>         (SETQ |bfVar#7| (CDR |bfVar#6|))
>         (CASE (CAR |bfVar#6|)
>           (|MkInt| (LET ((|i| (CAR |bfVar#7|))) |i|))
>           (|MkAdd| (LET ((|x| (CAR |bfVar#7|)) (|y| (CADR |bfVar#7|)))
>                      (+ (|eval| |x|) (|eval| |y|))))
>           (|MkMul| (LET ((|x| (CAR |bfVar#7|)) (|y| (CADR |bfVar#7|)))
>                      (* (|eval| |x|) (|eval| |y|))))
>           (T (|error| '|should not happen|)))))))
> 
> 
> 
> _______________________________________________
> Axiom-mail mailing list
> Axiom-mail@nongnu.org
> http://lists.nongnu.org/mailman/listinfo/axiom-mail




From MAILER-DAEMON Mon May 07 03:40:41 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hkxpp-0001Qw-FC
	for mharc-axiom-mail@gnu.org; Mon, 07 May 2007 03:40:41 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hkxpn-0001Qi-92
	for axiom-mail@nongnu.org; Mon, 07 May 2007 03:40:39 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hkxpl-0001QW-RA
	for axiom-mail@nongnu.org; Mon, 07 May 2007 03:40:39 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hkxpl-0001QT-Ov
	for axiom-mail@nongnu.org; Mon, 07 May 2007 03:40:37 -0400
Received: from mail16c2.megamailservers.com ([216.251.41.136])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <bill.page1@synthesis.anikast.ca>) id 1Hkxio-0006z7-G5
	for axiom-mail@nongnu.org; Mon, 07 May 2007 03:33:26 -0400
X-POP-User: bill.page1.synthesis.anikast.ca
Received: from asus ([207.35.46.72])
	by mail16c2.megamailservers.com (8.13.6.20060614/8.13.1) with ESMTP id
	l477X7wh006881; Mon, 7 May 2007 03:33:17 -0400
From: "Bill Page" <bill.page1@synthesis.anikast.ca>
To: "'Martin Rubey'" <martin.rubey@univie.ac.at>,
	"'Gabriel Dos Reis'" <gdr@cs.tamu.edu>
Subject: RE: [Axiom-mail] Spad and inductive types
Date: Mon, 7 May 2007 03:32:59 -0400
Message-ID: <054701c79079$f39cca90$6900a8c0@asus>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook, Build 10.0.6822
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3028
Importance: Normal
Thread-Index: AceQcN4UqbwoADwvTxy1+H9nwjEILQAB6yLA
In-Reply-To: <9q7irlm9lm.fsf@aquin.mat.univie.ac.at>
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 07 May 2007 07:40:39 -0000

On May 7, 2007 2:28 AM Martin Rubey writes:
> 
> Gabriel Dos Reis writes:
> 
> > For concretness, here is a very classic example of inductive
> > type along with a function working on expression of such type,
> > written in both Haskell and New Boot.  How would you best write
> > that in Spad?
> 
> I'm very sorry, but I do not understand the code below.  
> Could you describe what it is supposed to do?  I guess: Expr
> is the name of the type (= domain?) you want to create, and
> it exports a single operation called "eval", which returns an
> integer.  But what is MkInt, MkAdd and MkMul?  
> Perhaps you want to say that an element in Expr can be of three
> forms, namely MkInt, MkAdd or MkMul?
> 
...
> > ------8<----- Begin Haskell code ------8<-----
> > data Expr = MkInt Int
> >           | MkAdd Expr Expr
> > 	  | MkMul Expr Expr
> 
> > eval::Expr -> Int
> > eval (MkInt i) = i
> > eval (MkAdd x y) = (eval x) + (eval y)
> > eval (MkMul x y) = (eval x) * (eval y)
> > ------8<----- End Haskell code ------8<-------

Yes, I think what Gaby wants might be written something like this
in SPAD:

)abbrev domain EX Expr
Expr:with
    eval: % -> Integer
    coerce: Integer -> %
    _+: (%,%) -> %
    _-: (%,%) -> %
  == add
    MkInt ==> Integer
    MkAdd ==> Record(lAdd:%,rAdd:%)
    MkMul ==> Record(lMul:%,rMul:%)
    Rep ==> Union(MkInt,MkAdd,MkMul)
    eval(x:%) ==
      i := x pretend Rep
      i case MkInt => i
      i case MkAdd => eval(i.lAdd) + eval(i.rAdd)
      i case MkMul => eval(i.lMul) * eval(i.rMul)
    -- coerce(n) == autoCoerce(n)$Rep pretend %
    -- x + y == autoCoerce([x,y]$MkAdd)$Rep pretend %
    -- x * y == autoCoerce([x,y]$MkMul)$Rep pretend %

--------

This compiles eval, but I have a problem. Obviously one would
like to create members of this domain. But I can not seem to
persuade SPAD to compile my defintions of coerce, + and *. SPAD
tells me: Cannot pretend ...

I don't understand that. Perhaps you can see a way around it?

Regards,
Bill Page.





From MAILER-DAEMON Mon May 07 04:21:37 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HkyTR-0001jb-82
	for mharc-axiom-mail@gnu.org; Mon, 07 May 2007 04:21:37 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HkyTP-0001jS-V4
	for axiom-mail@nongnu.org; Mon, 07 May 2007 04:21:35 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HkyTO-0001it-48
	for axiom-mail@nongnu.org; Mon, 07 May 2007 04:21:35 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HkyTN-0001im-PE
	for axiom-mail@nongnu.org; Mon, 07 May 2007 04:21:33 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1HkyMQ-0003jv-3K
	for axiom-mail@nongnu.org; Mon, 07 May 2007 04:14:22 -0400
Received: from joan.univie.ac.at ([131.130.3.110] helo=joan.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HkyMO-0004Rg-2F; Mon, 07 May 2007 10:14:20 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by joan.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HkyMN-0007ei-Up; Mon, 07 May 2007 10:14:19 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: "Bill Page" <bill.page1@synthesis.anikast.ca>
Subject: Re: [Axiom-mail] Spad and inductive types
References: <054701c79079$f39cca90$6900a8c0@asus>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 07 May 2007 10:14:19 +0200
In-Reply-To: <054701c79079$f39cca90$6900a8c0@asus>
Message-ID: <9qwszlrqxw.fsf@aquin.mat.univie.ac.at>
Lines: 46
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org,
	'Gabriel Dos Reis' <gdr@cs.tamu.edu>
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 07 May 2007 08:21:36 -0000

Here you go.  But I doubt somehow that Gaby had this in mind, since this is
quite usual stuff in Axiom (grep "Rep.*Union")

Martin

)abbrev domain EX Expr
Expr(): with
    eval: % -> Integer
    coerce: Integer -> %
    coerce: % -> OutputForm
    _+: (%,%) -> %
    _*: (%,%) -> %
  == add
    MkInt ==> Integer
    MkAdd ==> Record(lAdd:%,rAdd:%)
    MkMul ==> Record(lMul:%,rMul:%)
-- Rep shouldn't be a macro, I think
    Rep := Union(MkInt, MkAdd, MkMul)

    eval(x:%): Integer ==
-- in SPAD, conversion from Rep to Union(MkInt, ...) is implicit
      x case MkInt => x
-- without package calling + the compiler picks + from %...
      x case MkAdd => (eval(x.lAdd) + eval(x.rAdd))$Integer
      x case MkMul => (eval(x.lMul) * eval(x.rMul))$Integer

    coerce(n: Integer) == n::Rep

    x + y == [x,y]$MkAdd :: Rep

    x * y == [x,y]$MkMul :: Rep

    coerce(x: %): OutputForm ==
      x case MkInt => outputForm x
      x case MkAdd => hconcat [message "(",          _
                               (x.lAdd)::OutputForm, _
                               message "+",          _
                               (x.rAdd)::OutputForm, _
                               message ")"] 
      x case MkMul => hconcat [message "(",          _
                               (x.lMul)::OutputForm, _
                               message "*",          _
                               (x.rMul)::OutputForm, _
                               message ")"]






From MAILER-DAEMON Mon May 07 04:47:30 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HkysU-0000Cj-AZ
	for mharc-axiom-mail@gnu.org; Mon, 07 May 2007 04:47:30 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HkysS-00009s-SJ
	for axiom-mail@nongnu.org; Mon, 07 May 2007 04:47:28 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HkysR-0008WP-9x
	for axiom-mail@nongnu.org; Mon, 07 May 2007 04:47:28 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HkysR-0008Vm-1z
	for axiom-mail@nongnu.org; Mon, 07 May 2007 04:47:27 -0400
Received: from mail59c2.megamailservers.com ([216.251.41.179])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <bill.page1@synthesis.anikast.ca>) id 1HkylT-0007FO-Ic
	for axiom-mail@nongnu.org; Mon, 07 May 2007 04:40:15 -0400
X-POP-User: bill.page1.synthesis.anikast.ca
Received: from asus ([207.35.46.72])
	by mail59c2.megamailservers.com (8.13.6.20060614/8.13.1) with ESMTP id
	l478dxLd012164; Mon, 7 May 2007 04:40:08 -0400
From: "Bill Page" <bill.page1@synthesis.anikast.ca>
To: "'Martin Rubey'" <martin.rubey@univie.ac.at>
Subject: RE: [Axiom-mail] Spad and inductive types
Date: Mon, 7 May 2007 04:39:50 -0400
Message-ID: <054e01c79083$4a61fe00$6900a8c0@asus>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook, Build 10.0.6822
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3028
Importance: Normal
Thread-Index: AceQf7eqtju5k6VsRhqh3AFAc7bGvAAAOP9A
In-Reply-To: <9qwszlrqxw.fsf@aquin.mat.univie.ac.at>
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org, 'Gabriel Dos Reis' <gdr@cs.tamu.edu>
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 07 May 2007 08:47:29 -0000

Martin,

On May 7, 2007 4:14 AM you wrote:
> 
> Here you go.  But I doubt somehow that Gaby had this in mind, 
> since this is quite usual stuff in Axiom (grep "Rep.*Union")
> 
> ...

Fantastic! Thankyou. See it again here:

http://wiki.axiom-developer.org/SandBoxInductiveType

I believe that is exactly what Gaby wanted. Yes, grep shows
some examples but not of the specific type of induction that
Gaby had in mind.

It seems that one key differences between what I wrote and
your version was:

...
Rep := Union(MkInt, MkAdd, MkMul)
...

The grep command actually shows one case where ==> is used, but
I have noticed before that Spad seems to treat this differently
than what I always expect but you seem to write it naturally. :-)

Now I can retire to sleep in peace.

Cheers,
Bill Page





From MAILER-DAEMON Mon May 07 09:18:46 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hl370-00014x-PR
	for mharc-axiom-mail@gnu.org; Mon, 07 May 2007 09:18:46 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hl36z-00014F-5J
	for axiom-mail@nongnu.org; Mon, 07 May 2007 09:18:45 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hl36w-00012k-OQ
	for axiom-mail@nongnu.org; Mon, 07 May 2007 09:18:44 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hl36w-00012T-Kr
	for axiom-mail@nongnu.org; Mon, 07 May 2007 09:18:42 -0400
Received: from postal.cs.tamu.edu ([128.194.138.100])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Hl2zx-0003b4-OD
	for axiom-mail@nongnu.org; Mon, 07 May 2007 09:11:29 -0400
Received: from soliton.cs.tamu.edu (vpn-25.cs.tamu.edu [128.194.150.25])
	by postal.cs.tamu.edu (Postfix) with ESMTP id 5A64346DE0C;
	Mon,  7 May 2007 08:11:29 -0500 (CDT)
Received: by soliton.cs.tamu.edu (Postfix, from userid 1000)
	id A3A1A1AAEB; Mon,  7 May 2007 08:11:21 -0500 (CDT)
Sender: gdr@cs.tamu.edu
To: Martin Rubey <martin.rubey@univie.ac.at>
Subject: Re: [Axiom-mail] Spad and inductive types
References: <87ejltjq27.fsf@soliton.cs.tamu.edu>
	<9q7irlm9lm.fsf@aquin.mat.univie.ac.at>
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
In-Reply-To: <9q7irlm9lm.fsf@aquin.mat.univie.ac.at>
Organization: Texas A&M University, Department of Computer Science
Date: 07 May 2007 08:11:21 -0500
Message-ID: <877irk7p8m.fsf@soliton.cs.tamu.edu>
Lines: 45
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Solaris 8 (1)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 07 May 2007 13:18:45 -0000

Martin Rubey <martin.rubey@univie.ac.at> writes:

| Dear Gaby,
| 
| Gabriel Dos Reis <gdr@cs.tamu.edu> writes:
| 
| >   For concretness, here is a very classic example of inductive type
| > along with a function working on expression of such type, written in
| > both Haskell and New Boot.  How would you best write that in Spad?
| 
| I'm very sorry, but I do not understand the code below.

Sorry.  An inductive type is a kind of union whose members are
inductively defined (like the kind of combinatorial thing you're
doing with Ralf).  Here I took a very simplistic datatype, that of
an arithemtic expression over integers:

    An arithmetic expression over integer is:
      * an integer, or 
      * addition of two expressions over integer, or
      * multiplication of two expressions over integer.


|  Could you describe
| what it is supposed to do?  I guess: Expr is the name of the type (= domain?)
| you want to create, and it exports a single operation called "eval", which
| returns an integer.  But what is MkInt, MkAdd and MkMul?  Perhaps you want to
| say that an element in Expr can be of three forms, namely MkInt, MkAdd or
| MkMul?

MkInt, MkAdd and MkMull (in both Boot and Haskell) are data
cnstructors.  Given an integer, MkInt turn it into an Expr.
Simirlarlt, MkAdd and MkMul combines two expressions into an Expr.
So, they have types:

    MkInt :: Int -> Expr
    MkAdd :: Expr -> Expr -> Expr
    MkMul :: Expr -> Expr -> Expr

Furthermore, they can also serves as "tags" to indicate how
expressions of  Expr are constructed.  That is useful in pattern
matching.  In pattern matching, the data constructor serves as tag,
and the operands are variables that are bound to the operands.

-- Gaby



From MAILER-DAEMON Mon May 07 09:39:31 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hl3R5-0004Us-HG
	for mharc-axiom-mail@gnu.org; Mon, 07 May 2007 09:39:31 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hl3R3-0004OE-8m
	for axiom-mail@nongnu.org; Mon, 07 May 2007 09:39:29 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hl3R1-0004Jq-JT
	for axiom-mail@nongnu.org; Mon, 07 May 2007 09:39:28 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hl3R1-0004JE-8D
	for axiom-mail@nongnu.org; Mon, 07 May 2007 09:39:27 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1Hl3K2-0007bq-58
	for axiom-mail@nongnu.org; Mon, 07 May 2007 09:32:14 -0400
Received: from [193.170.38.119] (hemmecke@woodpecker.risc.uni-linz.ac.at
	[193.170.38.119]) (authenticated bits=0)
	by athena.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with ESMTP id
	l47DW7fu026992
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Mon, 7 May 2007 15:32:08 +0200
Message-ID: <463F2A53.3040006@hemmecke.de>
Date: Mon, 07 May 2007 15:32:03 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.0 (X11/20070326)
MIME-Version: 1.0
To: Bill Page <bill.page1@synthesis.anikast.ca>
Subject: Re: [Axiom-mail] Spad and inductive types
References: <054e01c79083$4a61fe00$6900a8c0@asus>
In-Reply-To: <054e01c79083$4a61fe00$6900a8c0@asus>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: Linux 2.4-2.6
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org,
	'Gabriel Dos Reis' <gdr@cs.tamu.edu>
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 07 May 2007 13:39:29 -0000

> http://wiki.axiom-developer.org/SandBoxInductiveType

I've added an Aldor version.

Ralf



From MAILER-DAEMON Mon May 07 10:38:16 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hl4Lv-0006DC-V0
	for mharc-axiom-mail@gnu.org; Mon, 07 May 2007 10:38:15 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hl4Lt-0006CX-UR
	for axiom-mail@nongnu.org; Mon, 07 May 2007 10:38:13 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hl4Ls-0006B4-8O
	for axiom-mail@nongnu.org; Mon, 07 May 2007 10:38:13 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hl4Lr-0006AP-Vw
	for axiom-mail@nongnu.org; Mon, 07 May 2007 10:38:12 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1Hl4Eq-0000Sf-10
	for axiom-mail@nongnu.org; Mon, 07 May 2007 10:30:58 -0400
Received: from [192.168.138.17] (funklan.cybnes.com [194.187.177.88])
	(authenticated bits=0)
	by athena.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with ESMTP id
	l47EUffu027901
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Mon, 7 May 2007 16:30:42 +0200
Message-ID: <463F3810.5070909@hemmecke.de>
Date: Mon, 07 May 2007 16:30:40 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.0 (X11/20070326)
MIME-Version: 1.0
To: Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: Re: [Axiom-mail] Spad and inductive types
References: <87ejltjq27.fsf@soliton.cs.tamu.edu>	<9q7irlm9lm.fsf@aquin.mat.univie.ac.at>
	<877irk7p8m.fsf@soliton.cs.tamu.edu>
In-Reply-To: <877irk7p8m.fsf@soliton.cs.tamu.edu>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: Linux 2.4-2.6
Cc: Martin Rubey <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 07 May 2007 14:38:14 -0000

> An inductive type is a kind of union whose members are
> inductively defined (like the kind of combinatorial thing you're
> doing with Ralf).  Here I took a very simplistic datatype, that of
> an arithemtic expression over integers:

>     An arithmetic expression over integer is:
>       * an integer, or 
>       * addition of two expressions over integer, or
>       * multiplication of two expressions over integer.

I somehow fear that none of the code on

http://wiki.axiom-developer.org/SandBoxInductiveType

makes you happy. Or does it?

The equation

 > data Expr = MkInt Int
 >           | MkAdd Expr Expr
 >           | MkMul Expr Expr

actually is just a way to form the data structure without any 
functionality. Just the inclusion functions

Expr: with {
   MkInt: Integer -> %;
   MkAdd: % -> % -> %;
   MkMul: % -> % -> %;
} == add {
   Rep == ...
}

It is not so obvious that the Rep should become a Union, or is it? That 
depends a bit on the fact whether one wants to see this in a lazy or 
non-lazy fashion. You probably want the lazy way. But Aldor is not lazy, 
so one must simulate it.

Going the Aldor-Combinat way, there would be need to define general 
constructors. Our Plus

http://www.risc.uni-linz.ac.at/people/hemmecke/AldorCombinat/combinatsu23.html#x37-550008.10

is something like the top-level constructor on the right hand side. (It 
does, however, only take 2 arguments not 3 that are separated by |.)

In Aldor it is not possible to replace something like that "Plus", by 
the built-in Union constructor, since Union does not export very much.
In Aldor the nearest thing you get would look like

Expr: with {...} == Union(z: Integer, a: %, m: %) add {...}

i.e. with the need of "add". However, of course z, a, m, are just tags 
and not constructors of Expr. It's a bit hard to translate the Haskell 
code literally into Aldor.

Note that in Aldor-Combinat, the "Plus" constructor is *not* inherent to 
the language. Furthermore, it is not flexible in general. For us it is 
enough that it returns something of type CombinatorialSpecies(L). But 
that is not a general-purpose-type.

Are you intending to add such kind of inductive type definition to SPAD?
What actually bothers me most is the resulting type. I can imagine that 
something like

 > data Expr = MkInt Int
 >           | MkAdd Expr Expr
 >           | MkMul Expr Expr

could be added to Expr, but then an "extend Expr" is vital, since not 
everything can be put into the above equation. In fact, the definition 
of "eval" would already live in an extension. No? Otherwise, I fear the 
definition wouldn't look so nice like in the Haskell example.

Ralf



From MAILER-DAEMON Mon May 07 10:42:53 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hl4QP-0000SL-6r
	for mharc-axiom-mail@gnu.org; Mon, 07 May 2007 10:42:53 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hl4QN-0000S6-TX
	for axiom-mail@nongnu.org; Mon, 07 May 2007 10:42:51 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hl4QJ-0000Qz-Qv
	for axiom-mail@nongnu.org; Mon, 07 May 2007 10:42:50 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hl4QJ-0000Qv-JF
	for axiom-mail@nongnu.org; Mon, 07 May 2007 10:42:47 -0400
Received: from smtp.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Hl4JJ-0001Jr-2R
	for axiom-mail@nongnu.org; Mon, 07 May 2007 10:35:33 -0400
Received: from soliton.cs.tamu.edu (vpn-25.cs.tamu.edu [128.194.150.25])
	by postal.cs.tamu.edu (Postfix) with ESMTP id EF0B746DE0C;
	Mon,  7 May 2007 09:35:23 -0500 (CDT)
Received: by soliton.cs.tamu.edu (Postfix, from userid 1000)
	id 7C6DF1AAEB; Mon,  7 May 2007 09:35:16 -0500 (CDT)
Sender: gdr@cs.tamu.edu
To: "Bill Page" <bill.page1@synthesis.anikast.ca>
Subject: Re: [Axiom-mail] Spad and inductive types
References: <054701c79079$f39cca90$6900a8c0@asus>
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
In-Reply-To: <054701c79079$f39cca90$6900a8c0@asus>
Organization: Texas A&M University, Department of Computer Science
Date: 07 May 2007 09:35:16 -0500
Message-ID: <871whs7lcr.fsf@soliton.cs.tamu.edu>
Lines: 75
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Solaris 8 (1)
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 07 May 2007 14:42:52 -0000

"Bill Page" <bill.page1@synthesis.anikast.ca> writes:

| On May 7, 2007 2:28 AM Martin Rubey writes:
| > 
| > Gabriel Dos Reis writes:
| > 
| > > For concretness, here is a very classic example of inductive
| > > type along with a function working on expression of such type,
| > > written in both Haskell and New Boot.  How would you best write
| > > that in Spad?
| > 
| > I'm very sorry, but I do not understand the code below.  
| > Could you describe what it is supposed to do?  I guess: Expr
| > is the name of the type (= domain?) you want to create, and
| > it exports a single operation called "eval", which returns an
| > integer.  But what is MkInt, MkAdd and MkMul?  
| > Perhaps you want to say that an element in Expr can be of three
| > forms, namely MkInt, MkAdd or MkMul?
| > 
| ...
| > > ------8<----- Begin Haskell code ------8<-----
| > > data Expr = MkInt Int
| > >           | MkAdd Expr Expr
| > > 	  | MkMul Expr Expr
| > 
| > > eval::Expr -> Int
| > > eval (MkInt i) = i
| > > eval (MkAdd x y) = (eval x) + (eval y)
| > > eval (MkMul x y) = (eval x) * (eval y)
| > > ------8<----- End Haskell code ------8<-------
| 
| Yes, I think what Gaby wants might be written something like this
| in SPAD:
| 
| )abbrev domain EX Expr
| Expr:with
|     eval: % -> Integer
|     coerce: Integer -> %
|     _+: (%,%) -> %
|     _-: (%,%) -> %
|   == add
|     MkInt ==> Integer
|     MkAdd ==> Record(lAdd:%,rAdd:%)
|     MkMul ==> Record(lMul:%,rMul:%)
|     Rep ==> Union(MkInt,MkAdd,MkMul)

This is probably one of the places where I was not happy with what I
came up with:  The representations of the multiplication and addition
need to have different field labels.  I was unhappy with that because
that just does not *look* right.  I have more obsrvations that I'll
send later.

|     eval(x:%) ==
|       i := x pretend Rep
|       i case MkInt => i
|       i case MkAdd => eval(i.lAdd) + eval(i.rAdd)
|       i case MkMul => eval(i.lMul) * eval(i.rMul)
|     -- coerce(n) == autoCoerce(n)$Rep pretend %
|     -- x + y == autoCoerce([x,y]$MkAdd)$Rep pretend %
|     -- x * y == autoCoerce([x,y]$MkMul)$Rep pretend %
| 
| --------
| 
| This compiles eval, but I have a problem. Obviously one would
| like to create members of this domain. But I can not seem to
| persuade SPAD to compile my defintions of coerce, + and *. SPAD
| tells me: Cannot pretend ...

Yes.

| I don't understand that. Perhaps you can see a way around it?

Rep needs to be defined to something, not just a macro.

-- Gaby



From MAILER-DAEMON Mon May 07 10:48:54 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hl4WE-00032Q-IR
	for mharc-axiom-mail@gnu.org; Mon, 07 May 2007 10:48:54 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hl4WE-00032E-1I
	for axiom-mail@nongnu.org; Mon, 07 May 2007 10:48:54 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hl4WC-00031u-Ir
	for axiom-mail@nongnu.org; Mon, 07 May 2007 10:48:53 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hl4WC-00031r-Cf
	for axiom-mail@nongnu.org; Mon, 07 May 2007 10:48:52 -0400
Received: from mailhost.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Hl4PB-0002Of-Vn
	for axiom-mail@nongnu.org; Mon, 07 May 2007 10:41:38 -0400
Received: from soliton.cs.tamu.edu (vpn-25.cs.tamu.edu [128.194.150.25])
	by postal.cs.tamu.edu (Postfix) with ESMTP id 7249D46DE0C;
	Mon,  7 May 2007 09:41:29 -0500 (CDT)
Received: by soliton.cs.tamu.edu (Postfix, from userid 1000)
	id DEA9B1AAEB; Mon,  7 May 2007 09:41:21 -0500 (CDT)
Sender: gdr@cs.tamu.edu
To: Martin Rubey <martin.rubey@univie.ac.at>
Subject: Re: [Axiom-mail] Spad and inductive types
References: <054701c79079$f39cca90$6900a8c0@asus>
	<9qwszlrqxw.fsf@aquin.mat.univie.ac.at>
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
In-Reply-To: <9qwszlrqxw.fsf@aquin.mat.univie.ac.at>
Organization: Texas A&M University, Department of Computer Science
Date: 07 May 2007 09:41:21 -0500
Message-ID: <87vef466i6.fsf@soliton.cs.tamu.edu>
Lines: 23
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Solaris 8 (1)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 07 May 2007 14:48:54 -0000

Martin Rubey <martin.rubey@univie.ac.at> writes:

| Here you go.  But I doubt somehow that Gaby had this in mind, since this is
| quite usual stuff in Axiom (grep "Rep.*Union")


Thanks, Martin.

I did not say I did not know how to write it.  I said "I don't have a
good way" :-).  Everything I've tried to come up (including proposed
solutions here)  with looked a hack to me.  Part of the reasons is

  --     MkAdd ==> Record(lAdd:%,rAdd:%)
  --     MkMul ==> Record(lMul:%,rMul:%)

if union are used whose fields are directly records, then the fields
of the record must themselves have different name.  In the Boot or
Haskell case, only the data constructor name need to be different.
I fully understand Spad is not Haskell, neither Boot, but I'm looking
for a solution where only the toplevel data constructors needs to be
different.  I have more to say later.

-- Gaby



From MAILER-DAEMON Mon May 07 11:10:35 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hl4rD-0003LW-Il
	for mharc-axiom-mail@gnu.org; Mon, 07 May 2007 11:10:35 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hl4rB-0003Km-FB
	for axiom-mail@nongnu.org; Mon, 07 May 2007 11:10:33 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hl4rA-0003KZ-3p
	for axiom-mail@nongnu.org; Mon, 07 May 2007 11:10:32 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hl4r9-0003KW-U0
	for axiom-mail@nongnu.org; Mon, 07 May 2007 11:10:31 -0400
Received: from postal.cs.tamu.edu ([128.194.138.100])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Hl4kA-0006HH-Df
	for axiom-mail@nongnu.org; Mon, 07 May 2007 11:03:18 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id C61FC46DE0C;
	Mon,  7 May 2007 10:03:17 -0500 (CDT)
Date: Mon, 7 May 2007 10:04:39 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: Ralf Hemmecke <ralf@hemmecke.de>
Subject: Re: [Axiom-mail] Spad and inductive types
In-Reply-To: <463F3810.5070909@hemmecke.de>
Message-ID: <Pine.LNX.4.64.0705070953520.21987@gauss.cs.tamu.edu>
References: <87ejltjq27.fsf@soliton.cs.tamu.edu>
	<9q7irlm9lm.fsf@aquin.mat.univie.ac.at>
	<877irk7p8m.fsf@soliton.cs.tamu.edu> <463F3810.5070909@hemmecke.de>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: Solaris 8 (1)
Cc: Martin Rubey <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 07 May 2007 15:10:33 -0000

On Mon, 7 May 2007, Ralf Hemmecke wrote:

| > An inductive type is a kind of union whose members are
| > inductively defined (like the kind of combinatorial thing you're
| > doing with Ralf).  Here I took a very simplistic datatype, that of
| > an arithemtic expression over integers:
| 
| >     An arithmetic expression over integer is:
| >       * an integer, or * addition of two expressions over integer, or
| >       * multiplication of two expressions over integer.
| 
| I somehow fear that none of the code on
| 
| http://wiki.axiom-developer.org/SandBoxInductiveType
| 
| makes you happy. Or does it?

Ralf --

  You captured so accurately many of the aspects of this issue that
I have almost nothing to add to your analysis.


| The equation
| 
| > data Expr = MkInt Int
| > | MkAdd Expr Expr
| > | MkMul Expr Expr
| 
| actually is just a way to form the data structure without any functionality.

Yes.


[...]

| In Aldor it is not possible to replace something like that "Plus", by the
| built-in Union constructor, since Union does not export very much.
| In Aldor the nearest thing you get would look like
| 
| Expr: with {...} == Union(z: Integer, a: %, m: %) add {...}
| 
| i.e. with the need of "add". However, of course z, a, m, are just tags and not
| constructors of Expr. It's a bit hard to translate the Haskell code literally
| into Aldor.

OK; many thanks.  I was wondering whether there was a better, but apparently
that is all I can get.

| Note that in Aldor-Combinat, the "Plus" constructor is *not* inherent to the
| language. Furthermore, it is not flexible in general. For us it is enough that
| it returns something of type CombinatorialSpecies(L). But that is not a
| general-purpose-type.
| 
| Are you intending to add such kind of inductive type definition to SPAD?

Well, it is something I would like to have in Spad.  I was just wondering how
I can approximate it in today Spad.  I came to this from different angles.
The most recent is my typed ast representation of Spad programs, as a domain.

| What actually bothers me most is the resulting type. I can imagine that
| something like
| 
| > data Expr = MkInt Int
| > | MkAdd Expr Expr
| > | MkMul Expr Expr
| 
| could be added to Expr, but then an "extend Expr" is vital, since not
| everything can be put into the above equation. In fact, the definition of
| "eval" would already live in an extension. No? 

Yes, I agree with your analysis.

| Otherwise, I fear the
| definition wouldn't look so nice like in the Haskell example.

-- Gaby



From MAILER-DAEMON Tue May 08 01:14:08 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HlI1X-00035S-VW
	for mharc-axiom-mail@gnu.org; Tue, 08 May 2007 01:14:08 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HlI1W-0002xV-4U
	for axiom-mail@nongnu.org; Tue, 08 May 2007 01:14:06 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HlI1T-0002nZ-HG
	for axiom-mail@nongnu.org; Tue, 08 May 2007 01:14:05 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HlI1T-0002mf-2k
	for axiom-mail@nongnu.org; Tue, 08 May 2007 01:14:03 -0400
Received: from mail14c2.megamailservers.com ([216.251.41.134])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <bill.page1@synthesis.anikast.ca>) id 1HlHuP-0008Cv-Hf
	for axiom-mail@nongnu.org; Tue, 08 May 2007 01:06:45 -0400
X-POP-User: bill.page1.synthesis.anikast.ca
Received: from asus ([207.35.46.72])
	by mail14c2.megamailservers.com (8.13.6.20060614/8.13.1) with ESMTP id
	l4856MVS009232; Tue, 8 May 2007 01:06:34 -0400
From: "Bill Page" <bill.page1@synthesis.anikast.ca>
To: <gdr@cs.tamu.edu>
Subject: RE: [Axiom-mail] Spad and inductive types
Date: Tue, 8 May 2007 01:06:12 -0400
Message-ID: <05e801c7912e$9d50a660$6900a8c0@asus>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook, Build 10.0.6822
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3028
Importance: Normal
Thread-Index: AceQtcyiN6HEqVOISrWcfzmRS+kj7wAAQtOw
In-Reply-To: <87vef466i6.fsf@soliton.cs.tamu.edu>
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 08 May 2007 05:14:06 -0000

On May 7, 2007 10:41 AM Gaby wrote:
> 
> Martin Rubey writes:
> 
> | Here you go.  But I doubt somehow that Gaby had this in 
> | mind, since this is quite usual stuff in Axiom
> (grep "Rep.*Union")
> 
> Thanks, Martin.
> 
> I did not say I did not know how to write it.  I said "I don't
> have a good way" :-).  Everything I've tried to come up
> (including proposed solutions here) with looked a hack to me.

I think it would have been very useful if you had included what
you came up with in your original email. :-( Anyway, I think
your question is very useful as it stands as an example of
the difference between Spad and Boot.

> Part of the reasons is
> 
>   --     MkAdd ==> Record(lAdd:%,rAdd:%)
>   --     MkMul ==> Record(lMul:%,rMul:%)
> 
> if union are used whose fields are directly records, then
> the fields of the record must themselves have different name.
> In the Boot or Haskell case, only the data constructor name
> need to be different.

That is not an essential feature of how this must be written
in Spad. For example see my recent additional example at:

http://wiki.axiom-developer.org/SandBoxInductiveType

But I think you are right to point out a limitation of the
design of the 'Union' domain constructor in Spad (and in
Aldor).

I think there is no good reason that 'Union' is implemented
in Spad using polymorphism of coerce to create elements. For
example the following provides no method to create objects
with a specific tag, x or y (by default only objects tagged
x are created).

(1) -> )sh Union(x:Integer,y:Integer)

 Union(x: Integer,y: Integer) is a domain constructor.
--------------------------- Operations --------------------

 ?=? : (%,%) -> Boolean           ?case? : (%,x) -> Boolean
 ?case? : (%,y) -> Boolean        coerce : % -> OutputForm
 construct : Integer -> %         construct : Integer -> %
 ?.? : (%,x) -> Integer           ?.? : (%,y) -> Integer

In spite of this it appears that the internal representation of
'Union' does implement a proper disjunction as required by the
expected semantics.

I would prefer that Union have methods something like this:

 construct : (Integer,x) -> %     construct : (Integer,y) -> %

but this would also require some changes in the Axiom interpreter
to work smoothly.

> I fully understand Spad is not Haskell, neither Boot, but I'm
> looking for a solution where only the toplevel data constructors
> needs to be different.

I think my example 'Expr2' at

http://wiki.axiom-developer.org/SandBoxInductiveType

satisfies your requirement, although on initial look it probably
seems more complicated than what you might like. Some of this
complication is merely interface for the Axiom interpreter. The
essential definition of the inductive type is merely given by:

    Rep := Union(MkInt(Integer), MkAdd(%,%), MkMul(%,%))

The definitions of MkAdd and MkMul as named types (domains) is
sufficient to avoid the problem that this form of 'Union' is not
disjunctive.

> I have more to say later.

We're listening. :-)

Regards,
Bill Page.





From MAILER-DAEMON Tue May 08 03:04:14 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HlJk6-0006yV-AE
	for mharc-axiom-mail@gnu.org; Tue, 08 May 2007 03:04:14 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HlJk4-0006vg-Ft
	for axiom-mail@nongnu.org; Tue, 08 May 2007 03:04:12 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HlJk2-0006qt-St
	for axiom-mail@nongnu.org; Tue, 08 May 2007 03:04:12 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HlJk2-0006qP-PZ
	for axiom-mail@nongnu.org; Tue, 08 May 2007 03:04:10 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1HlJcy-00046C-LY
	for axiom-mail@nongnu.org; Tue, 08 May 2007 02:56:52 -0400
Received: from [192.168.138.17] (funklan.cybnes.com [194.187.177.88])
	(authenticated bits=0)
	by athena.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with ESMTP id
	l486ukfu008365
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Tue, 8 May 2007 08:56:47 +0200
Message-ID: <46401F2E.9040905@hemmecke.de>
Date: Tue, 08 May 2007 08:56:46 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.0 (X11/20070326)
MIME-Version: 1.0
To: Bill Page <bill.page1@synthesis.anikast.ca>
Subject: Re: [Axiom-mail] Spad and inductive types
References: <05e801c7912e$9d50a660$6900a8c0@asus>
In-Reply-To: <05e801c7912e$9d50a660$6900a8c0@asus>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: Linux 2.4-2.6
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org,
	gdr@cs.tamu.edu
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 08 May 2007 07:04:12 -0000

> I think my example 'Expr2' at
> 
> http://wiki.axiom-developer.org/SandBoxInductiveType
> 
> satisfies your requirement, although on initial look it probably
> seems more complicated than what you might like. Some of this
> complication is merely interface for the Axiom interpreter. The
> essential definition of the inductive type is merely given by:
> 
>     Rep := Union(MkInt(Integer), MkAdd(%,%), MkMul(%,%))

> The definitions of MkAdd and MkMul as named types (domains) is
> sufficient to avoid the problem that this form of 'Union' is not
> disjunctive.

Bill, I like your way of approaching this inductive type thing. I only 
fear, in Aldor you have to add a few code snippets.
Your

       x case MkInt(Integer) => eval(x)$MkInt(Integer)

probably does not work in Aldor. (I haven't actually tested what the 
compiler does.) Probably in Aldor you would have to write

     Rep == Union(z: MkInt(Integer), a: MkAdd(%,%), m: MkMul(%,%))

and say

    x case z => ...

To me it looks like your approach is very much in line with what we do 
in Aldor-Combinat. The only difference is that basically you have

Expr2: ExprCat == Union(
     z: MkInt(Integer),
     a: MkAdd(Expr2, Expr2),
     m: MkMul(Expr2, Expr2)
) add {
     eval(x: %): Integer == ...
}

If I rewrite that code in along the lines of what we have in 
Aldor-Combinat, it would look like

Expr2: ExprCat == Plus(
                        MkInt Integer,
                        Plus(MkAdd(Expr2, Expr2), MkMul(Expr2, Expr2))
                   ) add;

and there would not be need to write anything behind "add", because the 
"Plus" construction knows about ExprCat. So in some way our "Plus" 
(which corresponds to a special form of "Union") is quite restricted.

And in general one cannot even generalize it to "Plus(ExprCat)(A,B)" to 
take the category into account since there is no generic way to 
implement all the functions. In fact that would require to ask for in 
implement functions at runtime. Note the type of Plus(ExprCat) would be

   (ExprCat, ExprCat) -> ExprCat

I don't see a way to implement that generically in Aldor.

So your way is the best one can get. What I like is, that it seems to 
show the desparate need for the "extend" operation.

Ralf



From MAILER-DAEMON Tue May 08 11:28:03 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HlRbe-0006SJ-SN
	for mharc-axiom-mail@gnu.org; Tue, 08 May 2007 11:28:02 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HlRbd-0006NY-Kt
	for axiom-mail@nongnu.org; Tue, 08 May 2007 11:28:01 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HlRbb-0006HX-QU
	for axiom-mail@nongnu.org; Tue, 08 May 2007 11:28:00 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HlRbb-0006HJ-NS
	for axiom-mail@nongnu.org; Tue, 08 May 2007 11:27:59 -0400
Received: from mailhost.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1HlRUV-0000KU-8S
	for axiom-mail@nongnu.org; Tue, 08 May 2007 11:20:39 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id DDE2546DE10;
	Tue,  8 May 2007 10:20:38 -0500 (CDT)
Date: Tue, 8 May 2007 10:21:59 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: Bill Page <bill.page1@synthesis.anikast.ca>
Subject: RE: [Axiom-mail] Spad and inductive types
In-Reply-To: <05e801c7912e$9d50a660$6900a8c0@asus>
Message-ID: <Pine.LNX.4.64.0705081018380.25758@gauss.cs.tamu.edu>
References: <05e801c7912e$9d50a660$6900a8c0@asus>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: Solaris 8 (1)
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 08 May 2007 15:28:01 -0000

On Tue, 8 May 2007, Bill Page wrote:

| > I have more to say later.
| 
| We're listening. :-)

One of the issues I have with many of the various alternatives is
that they make definition of new functions operating on Expr
also impossible (by a third person) without intimate knowledge
of the representation of Expr, or modifying the Expr domain.

In contrast, in Haskell or Boot codes, once I give that data type
definition, people are free to add more operations without knowing
more of the internal representations.  

That is not quibbling.

-- Gaby



From MAILER-DAEMON Tue May 08 13:23:24 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HlTPI-0005V2-0O
	for mharc-axiom-mail@gnu.org; Tue, 08 May 2007 13:23:24 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HlTPF-0005UX-Qa
	for axiom-mail@nongnu.org; Tue, 08 May 2007 13:23:21 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HlTPC-0005Su-Ad
	for axiom-mail@nongnu.org; Tue, 08 May 2007 13:23:20 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HlTPC-0005Si-7x
	for axiom-mail@nongnu.org; Tue, 08 May 2007 13:23:18 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1HlTI4-0004Z6-Uh
	for axiom-mail@nongnu.org; Tue, 08 May 2007 13:15:57 -0400
Received: from [192.168.138.17] (funklan.cybnes.com [194.187.177.88])
	(authenticated bits=0)
	by athena.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with ESMTP id
	l48HFofu022205
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Tue, 8 May 2007 19:15:51 +0200
Message-ID: <4640B046.4050907@hemmecke.de>
Date: Tue, 08 May 2007 19:15:50 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.0 (X11/20070326)
MIME-Version: 1.0
To: Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: Re: [Axiom-mail] Spad and inductive types
References: <05e801c7912e$9d50a660$6900a8c0@asus>
	<Pine.LNX.4.64.0705081018380.25758@gauss.cs.tamu.edu>
In-Reply-To: <Pine.LNX.4.64.0705081018380.25758@gauss.cs.tamu.edu>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: Linux 2.4-2.6
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 08 May 2007 17:23:22 -0000

On 05/08/2007 05:21 PM, Gabriel Dos Reis wrote:
 > One of the issues I have with many of the various alternatives is
 > that they make definition of new functions operating on Expr
 > also impossible (by a third person) without intimate knowledge
 > of the representation of Expr, or modifying the Expr domain.

 > In contrast, in Haskell or Boot codes, once I give that data type
 > definition, people are free to add more operations without knowing
 > more of the internal representations.

Hi Gaby,

I am not at all good at Haskell, but what I have found now looks a bit 
closer to the Haskell definition. Of course, the function names (MkInt, 
MkAdd, MkMul) have nothing to do with the tags (Mkint, Mkadd, Mkmul) of 
the union, but the can be called with identical name, i.e. add the macros

Mkint ==> MkInt;
Mkadd ==> MkAdd;
Mkmul ==> MkMul;

to the code.

Of course one can add "case" function and "apply" functions similar to 
those exported by Union. Unfortunately the exports of Union does not 
carry over to Expr, because the type of Expr is given by ET.

Unfortunately, I don't see a way in Aldor to carry over the exports of 
the Union on the right hand side to Expr.

Note in particular that the there is something like Union(a:X, b:X).

Ralf

-> aldor -fx -laldor -mno-abbrev -mno-mactext aaa.as
-> aaa
e1 = 1
e2 = 2
e3 = 3
a1 = (1+2)
m1 = ((1+2)*3)



---BEGIN aaa.as
#include "aldor"
#include "aldorio"

--Haskell:
--data Expr = MkInt Int
--          | MkAdd Expr Expr
--          | MkMul Expr Expr

--eval::Expr -> Int
--eval (MkInt i) = i
--eval (MkAdd x y) = (eval x) + (eval y)
--eval (MkMul x y) = (eval x) * (eval y)

define ET: Category == OutputType; -- ExpressionType

Expr: ET with {
	MkInt: Integer -> %;
	MkAdd: (%, %) -> %;
	MkMul: (%, %) -> %;
} == add {
	Rep == Union(
	    Mkint: Integer,
	    Mkadd: Record(left: Expr, right: Expr),
	    Mkmul: Record(left: Expr, right: Expr)
	);
	import from Rep;
	MkInt(i: Integer): % == per union i;
	MkAdd(x: %, y: %): % == per [Mkadd == [x, y]];
	MkMul(x: %, y: %): % == per [Mkmul == [x, y]];
-- The following two lines work but I haven't found them documented.
-- For the above version see AUG.pdf p. 145.
--	MkAdd(x: %, y: %): % == per union([x, y], Mkadd);
--	MkMul(x: %, y: %): % == per union([x, y], Mkmul);
	(tw: TextWriter) << (x: %): TextWriter == {
		select rep x in {
			Mkint => tw << rep(x).Mkint;
			Mkadd => {
				(a, b) := explode rep(x).Mkadd;
				tw << "(" << a << "+" << b << ")";
			}
			Mkmul => {
				(a, b) := explode rep(x).Mkmul;
				tw << "(" << a << "*" << b << ")";
			}
			never;
		}
	}
}

main(): () == {
	import from Integer;
	e1: Expr := MkInt 1;       stdout << "e1 = " << e1 << newline;
	e2: Expr := MkInt 2;       stdout << "e2 = " << e2 << newline;
	e3: Expr := MkInt 3;       stdout << "e3 = " << e3 << newline;
	a1: Expr := MkAdd(e1, e2); stdout << "a1 = " << a1 << newline;
	m1: Expr := MkMul(a1, e3); stdout << "m1 = " << m1 << newline;
}
main();
---END aaa.as



From MAILER-DAEMON Tue May 08 13:59:17 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HlTy1-0001Zd-5C
	for mharc-axiom-mail@gnu.org; Tue, 08 May 2007 13:59:17 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HlTy0-0001ZQ-3Q
	for axiom-mail@nongnu.org; Tue, 08 May 2007 13:59:16 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HlTxv-0001Yv-FR
	for axiom-mail@nongnu.org; Tue, 08 May 2007 13:59:15 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HlTxv-0001Yr-9e
	for axiom-mail@nongnu.org; Tue, 08 May 2007 13:59:11 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1HlTqn-0000N4-S6
	for axiom-mail@nongnu.org; Tue, 08 May 2007 13:51:50 -0400
Received: from [192.168.138.17] (funklan.cybnes.com [194.187.177.88])
	(authenticated bits=0)
	by athena.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with ESMTP id
	l48Hpifu023098
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Tue, 8 May 2007 19:51:44 +0200
Message-ID: <4640B8AF.2040709@hemmecke.de>
Date: Tue, 08 May 2007 19:51:43 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.0 (X11/20070326)
MIME-Version: 1.0
To: Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: Re: [Axiom-mail] Spad and inductive types
References: <05e801c7912e$9d50a660$6900a8c0@asus>	<Pine.LNX.4.64.0705081018380.25758@gauss.cs.tamu.edu>
	<4640B046.4050907@hemmecke.de>
In-Reply-To: <4640B046.4050907@hemmecke.de>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: Linux 2.4-2.6
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 08 May 2007 17:59:16 -0000

Gaby,

because you wanted a contruction of the data structure without any 
functionality, I think the following is the best (at the moment) I can 
think of.

I know the definitions in aaa.as look quite lengthy, but it probably 
shows how one could generically generate appropriate Aldor code from a 
more concise Syntax. All the exports that appear are basically the 
exports of the Union (OK, Union still has a few more.)

I couln't compile the code if it was in just one file. But that seems to 
be clear for Aldor. Or haven't I read the AUG clearly enough?

Ralf

---BEGIN aaa.as
#include "aldor"
#include "aldorio"

define ET: Category == with; -- ExpressionType
Expr: ET with {
	MkInt: Integer -> %;
	MkAdd: (%, %) -> %;
	MkMul: (%, %) -> %;
	apply: (%, 'MkInt') -> Integer;
	apply: (%, 'MkAdd') -> (%, %);
	apply: (%, 'MkMul') -> (%, %);
	case: (%, 'MkInt') -> Boolean;
	case: (%, 'MkAdd') -> Boolean;
	case: (%, 'MkMul') -> Boolean;
} == add {
	Rep == Union(
	    Mkint: Integer,
	    Mkadd: Record(left: %, right: %),
	    Mkmul: Record(left: %, right: %)
	);
	import from Rep;
	MkInt(i: Integer): % == per union i;
	MkAdd(x: %, y: %): % == per [Mkadd == [x, y]];
	MkMul(x: %, y: %): % == per [Mkmul == [x, y]];
	
	apply(x: %, t:'MkInt'): Integer == rep(x).Mkint;
	apply(x: %, t:'MkAdd'): (%, %) == explode rep(x).Mkadd;
	apply(x: %, t:'MkMul'): (%, %) == explode rep(x).Mkmul;

	(x: %) case (t:'MkInt'): Boolean == rep(x) case Mkint;
	(x: %) case (t:'MkAdd'): Boolean == rep(x) case Mkadd;
	(x: %) case (t:'MkMul'): Boolean == rep(x) case Mkmul;
}
---END aaa.as
--------------------------------------------------------------------
---BEGIN bbb.as
#include "aldor"
#include "aldorio"

#library EXPR "aaa.ao"
import from EXPR;

extend Expr: OutputType == add {
	import from 'MkInt', 'MkAdd', 'MkMul';
	import from Integer;
	(tw: TextWriter) << (x: %): TextWriter == {
		x case MkInt => tw << x.MkInt;
		x case MkAdd => {
			(a, b) := x.MkAdd;
			tw << "(" << a << "+" << b << ")";
		}
		x case MkMul => {
			(a, b) := x.MkMul;
			tw << "(" << a << "*" << b << ")";
		}
		tw;
	}
}

main(): () == {
	import from Integer;
	e1: Expr := MkInt 1;       stdout << "e1 = " << e1 << newline;
	e2: Expr := MkInt 2;       stdout << "e2 = " << e2 << newline;
	e3: Expr := MkInt 3;       stdout << "e3 = " << e3 << newline;
	a1: Expr := MkAdd(e1, e2); stdout << "a1 = " << a1 << newline;
	m1: Expr := MkMul(a1, e3); stdout << "m1 = " << m1 << newline;
}
main();
---END bbb.as



From MAILER-DAEMON Tue May 08 15:42:33 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HlVZx-0007HF-Bi
	for mharc-axiom-mail@gnu.org; Tue, 08 May 2007 15:42:33 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HlVZw-0007Gs-Cv
	for axiom-mail@nongnu.org; Tue, 08 May 2007 15:42:32 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HlVZu-0007Gb-54
	for axiom-mail@nongnu.org; Tue, 08 May 2007 15:42:31 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HlVZu-0007GY-2l
	for axiom-mail@nongnu.org; Tue, 08 May 2007 15:42:30 -0400
Received: from pmail23c2.megamailservers.com ([69.49.111.213])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <bill.page1@synthesis.anikast.ca>) id 1HlVSm-0005lT-Cw
	for axiom-mail@nongnu.org; Tue, 08 May 2007 15:35:08 -0400
Received: from pmail23c2.megamailservers.com (localhost [127.0.0.1])
	by pmail23c2.megamailservers.com (8.13.6.20060614/8.13.1) with ESMTP id
	l48JZ2F5017796
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO);
	Tue, 8 May 2007 15:35:03 -0400
Received: (from webmail@localhost)
	by pmail23c2.megamailservers.com (8.13.6.20060614/8.12.2/Submit) id
	l48JZ1RF017795; Tue, 8 May 2007 15:35:01 -0400
Received: from dummy.drenet.dnd.ca (dummy.drenet.dnd.ca [131.136.1.178]) by
	webmail.anikast.ca (Webmail 2.0) with HTTP for
	<bill.page1.synthesis.anikast.ca@webmail.anikast.ca>; Tue, 08 May 2007
	15:35:01 -0400
Message-ID: <20070508153501.om5k7sdeoy3os04g@webmail.anikast.ca>
Date: Tue, 08 May 2007 15:35:01 -0400
From: "Bill Page" <bill.page1@synthesis.anikast.ca>
To: Ralf Hemmecke <ralf@hemmecke.de>
Subject: Re: [Axiom-mail] Spad and inductive types
MIME-Version: 1.0
Content-Type: text/plain;
	charset=UTF-8;
	format="flowed"
Content-Disposition: inline
Content-Transfer-Encoding: 7bit
User-Agent: Webmail 4.0
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org,
	Gabriel Dos Reis <gdr@cs.tamu.edu>
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 08 May 2007 19:42:32 -0000

Quoting Ralf Hemmecke:

> ... 
> I know the definitions in aaa.as look quite lengthy, but it probably
> shows how one could generically generate appropriate Aldor code
> from a more concise Syntax. 

Since Aldor is already intended to be pretty concise, I don't think
it is a good idea in general to try to invent a new language and then
generate Aldor from it

  All the exports that appear are basically the
> exports of the Union (OK, Union still has a few more.)
>
> ---BEGIN aaa.as
> #include "aldor"
> #include "aldorio"
>
> define ET: Category == with; -- ExpressionType
> Expr: ET with {
> 	MkInt: Integer -> %;

It doesn't look right to me that the MkInt constructor takes
a specific integer as a parameter while MkAdd and MkMul
take a type. 

> 	MkAdd: (%, %) -> %;
> 	MkMul: (%, %) -> %;
> 	apply: (%, 'MkInt') -> Integer;
> 	apply: (%, 'MkAdd') -> (%, %);
> 	apply: (%, 'MkMul') -> (%, %);
> 	case: (%, 'MkInt') -> Boolean;
> 	case: (%, 'MkAdd') -> Boolean;
> 	case: (%, 'MkMul') -> Boolean;

I think having 'apply' and 'case' appear as exports of Expr is
very undesirable. 

> } == add {
> 	Rep == Union(
> 	    Mkint: Integer,
> 	    Mkadd: Record(left: %, right: %),
> 	    Mkmul: Record(left: %, right: %)
> 	);

Why not write a Union of the constructors, instead of their
representation? I.e. something like:

  	Rep == Union(
  	    Mkint: MkInt,
  	    Mkadd: MkAdd(%,%),
  	    Mkmul: MkMul(%,%)
  	);


> 	import from Rep;
> 	MkInt(i: Integer): % == per union i;
> 	MkAdd(x: %, y: %): % == per [Mkadd == [x, y]];
> 	MkMul(x: %, y: %): % == per [Mkmul == [x, y]];
>
> 	apply(x: %, t:'MkInt'): Integer == rep(x).Mkint;
> 	apply(x: %, t:'MkAdd'): (%, %) == explode rep(x).Mkadd;
> 	apply(x: %, t:'MkMul'): (%, %) == explode rep(x).Mkmul;
>
> 	(x: %) case (t:'MkInt'): Boolean == rep(x) case Mkint;
> 	(x: %) case (t:'MkAdd'): Boolean == rep(x) case Mkadd;
> 	(x: %) case (t:'MkMul'): Boolean == rep(x) case Mkmul;

Why does this construction look so different from the
definition of Expr2 in

http://wiki.axiom-developer.org/SandBoxInductiveType ?

> }
> ---END aaa.as
> --------------------------------------------------------------------
> ---BEGIN bbb.as
> #include "aldor"
> #include "aldorio"
>
> #library EXPR "aaa.ao"
> import from EXPR;
>
> extend Expr: OutputType == add {
> 	import from 'MkInt', 'MkAdd', 'MkMul';
> 	import from Integer;
> 	(tw: TextWriter) << (x: %): TextWriter == {
> 		x case MkInt => tw << x.MkInt;
> 		x case MkAdd => {
> 			(a, b) := x.MkAdd;
> 			tw << "(" << a << "+" << b << ")";
> 		}
> 		x case MkMul => {
> 			(a, b) := x.MkMul;
> 			tw << "(" << a << "*" << b << ")";
> 		}
> 		tw;
> 	}
> }
>

The use of case above seems very unnatural to me. Is it
possible to extend each constructor (e.g. MkInt, MkMul, etc.)
separately. 

> main(): () == {
> 	import from Integer;
> 	e1: Expr := MkInt 1;       stdout << "e1 = " << e1 << newline;
> 	e2: Expr := MkInt 2;       stdout << "e2 = " << e2 << newline;
> 	e3: Expr := MkInt 3;       stdout << "e3 = " << e3 << newline;
> 	a1: Expr := MkAdd(e1, e2); stdout << "a1 = " << a1 << newline;
> 	m1: Expr := MkMul(a1, e3); stdout << "m1 = " << m1 << newline;
> }
> main();
> ---END bbb.as
>

Ralf, these are just general comments about your approach and
aren't intended to be particularly critical. I think it is important to
try to understand how to write this efficiently in Aldor and your
work contributes greatly to this. 

Regards,
Bill Page. 



From MAILER-DAEMON Tue May 08 16:11:03 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HlW1X-0003iV-75
	for mharc-axiom-mail@gnu.org; Tue, 08 May 2007 16:11:03 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HlW1W-0003iQ-5m
	for axiom-mail@nongnu.org; Tue, 08 May 2007 16:11:02 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HlW1V-0003gu-59
	for axiom-mail@nongnu.org; Tue, 08 May 2007 16:11:01 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HlW1V-0003gr-22
	for axiom-mail@nongnu.org; Tue, 08 May 2007 16:11:01 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1HlVuN-0001FY-2n
	for axiom-mail@nongnu.org; Tue, 08 May 2007 16:03:39 -0400
Received: from [192.168.138.17] (funklan.cybnes.com [194.187.177.88])
	(authenticated bits=0)
	by athena.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with ESMTP id
	l48K3Xfu027450
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Tue, 8 May 2007 22:03:33 +0200
Message-ID: <4640D794.5080203@hemmecke.de>
Date: Tue, 08 May 2007 22:03:32 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.0 (X11/20070326)
MIME-Version: 1.0
To: Bill Page <bill.page1@synthesis.anikast.ca>
Subject: Re: [Axiom-mail] Spad and inductive types
References: <20070508153501.om5k7sdeoy3os04g@webmail.anikast.ca>
In-Reply-To: <20070508153501.om5k7sdeoy3os04g@webmail.anikast.ca>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: Linux 2.4-2.6
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org,
	Gabriel Dos Reis <gdr@cs.tamu.edu>
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 08 May 2007 20:11:02 -0000

>> ... I know the definitions in aaa.as look quite lengthy, but it probably
>> shows how one could generically generate appropriate Aldor code
>> from a more concise Syntax. 

> Since Aldor is already intended to be pretty concise, I don't think
> it is a good idea in general to try to invent a new language and then
> generate Aldor from it

You may be right. But if there is a consistent way to add some better 
functional style to Aldor, why should that be bad?

>  All the exports that appear are basically the
>> exports of the Union (OK, Union still has a few more.)

>> ---BEGIN aaa.as
>> #include "aldor"
>> #include "aldorio"
>>
>> define ET: Category == with; -- ExpressionType
>> Expr: ET with {
>>     MkInt: Integer -> %;
> 
> It doesn't look right to me that the MkInt constructor takes
> a specific integer as a parameter while MkAdd and MkMul
> take a type.

Huh? The MkAdd also take specific elements of Expr. That is not 
different from an element of Integer. It's at the same level.

>>     MkAdd: (%, %) -> %;
>>     MkMul: (%, %) -> %;
>>     apply: (%, 'MkInt') -> Integer;
>>     apply: (%, 'MkAdd') -> (%, %);
>>     apply: (%, 'MkMul') -> (%, %);
>>     case: (%, 'MkInt') -> Boolean;
>>     case: (%, 'MkAdd') -> Boolean;
>>     case: (%, 'MkMul') -> Boolean;
> 
> I think having 'apply' and 'case' appear as exports of Expr is
> very undesirable.

Well. What do you do with a data structure that has no accessor functions?

>> } == add {
>>     Rep == Union(
>>         Mkint: Integer,
>>         Mkadd: Record(left: %, right: %),
>>         Mkmul: Record(left: %, right: %)
>>     );

> Why not write a Union of the constructors, instead of their
> representation? I.e. something like:

>      Rep == Union(
>          Mkint: MkInt,
>          Mkadd: MkAdd(%,%),
>          Mkmul: MkMul(%,%)
>      );

Could probably be done, but how is MkInt different from Integer?
What do you gain by introducing the domains MkAdd and MkMul?
If that is needed, it can be done as you showed at 
http://wiki.axiom-developer.org/SandBoxInductiveType .
But I thought that the Haskell

data Expr = MkInt Int
           | MkAdd Expr Expr
           | MkMul Expr Expr

is more like

Union(Cross(Tag, Int),
       Cross(Tag, Expr, Expr),
       Cross(Tag, Exrp, Expr)).

In Aldor the tags appear in front of : so the Cross would have one 
argument less (and I have replaced Cross by Record (which is probably 
not necessary).

>>     import from Rep;
>>     MkInt(i: Integer): % == per union i;
>>     MkAdd(x: %, y: %): % == per [Mkadd == [x, y]];
>>     MkMul(x: %, y: %): % == per [Mkmul == [x, y]];
>>
>>     apply(x: %, t:'MkInt'): Integer == rep(x).Mkint;
>>     apply(x: %, t:'MkAdd'): (%, %) == explode rep(x).Mkadd;
>>     apply(x: %, t:'MkMul'): (%, %) == explode rep(x).Mkmul;
>>
>>     (x: %) case (t:'MkInt'): Boolean == rep(x) case Mkint;
>>     (x: %) case (t:'MkAdd'): Boolean == rep(x) case Mkadd;
>>     (x: %) case (t:'MkMul'): Boolean == rep(x) case Mkmul;
> 
> Why does this construction look so different from the
> definition of Expr2 in
> 
> http://wiki.axiom-developer.org/SandBoxInductiveType ?
> 
>> }

I don't actually understand whether this is meant in a positive or 
negative sense. I would rather call my code a variation of yours.

The biggest difference probably is that you cannot produce that what was 
in file bbb.as, because in an "extend Expr" you would have no way to 
access the internal structure of Expr.

As I understood Gaby, he wanted to define just the data structure 
without any additional features like eval or coercion to OutputForm.

To such a data structure one could add features (= functions) later 
without changing or knowing the actual representation. That is a step to 
avoid a lot of (if not all) mutual recursion in the construction of the 
Axiom library.

Ralf



From MAILER-DAEMON Tue May 08 16:23:54 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HlWDy-0005nz-NF
	for mharc-axiom-mail@gnu.org; Tue, 08 May 2007 16:23:54 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HlWDx-0005nW-JJ
	for axiom-mail@nongnu.org; Tue, 08 May 2007 16:23:53 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HlWDw-0005mj-0L
	for axiom-mail@nongnu.org; Tue, 08 May 2007 16:23:53 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HlWDv-0005me-NK
	for axiom-mail@nongnu.org; Tue, 08 May 2007 16:23:51 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1HlW6n-0002d5-Dy
	for axiom-mail@nongnu.org; Tue, 08 May 2007 16:16:29 -0400
Received: from [192.168.138.17] (funklan.cybnes.com [194.187.177.88])
	(authenticated bits=0)
	by athena.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with ESMTP id
	l48KGOfu027685
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Tue, 8 May 2007 22:16:24 +0200
Message-ID: <4640DA97.9070508@hemmecke.de>
Date: Tue, 08 May 2007 22:16:23 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.0 (X11/20070326)
MIME-Version: 1.0
To: Bill Page <bill.page1@synthesis.anikast.ca>
Subject: Re: [Axiom-mail] Spad and inductive types
References: <20070508153501.om5k7sdeoy3os04g@webmail.anikast.ca>
In-Reply-To: <20070508153501.om5k7sdeoy3os04g@webmail.anikast.ca>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: Linux 2.4-2.6
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org,
	Gabriel Dos Reis <gdr@cs.tamu.edu>
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 08 May 2007 20:23:53 -0000

Ooops, I overlooked something.

>> ---BEGIN bbb.as
>> #include "aldor"
>> #include "aldorio"
>>
>> #library EXPR "aaa.ao"
>> import from EXPR;
>>
>> extend Expr: OutputType == add {
>>     import from 'MkInt', 'MkAdd', 'MkMul';
>>     import from Integer;
>>     (tw: TextWriter) << (x: %): TextWriter == {
>>         x case MkInt => tw << x.MkInt;
>>         x case MkAdd => {
>>             (a, b) := x.MkAdd;
>>             tw << "(" << a << "+" << b << ")";
>>         }
>>         x case MkMul => {
>>             (a, b) := x.MkMul;
>>             tw << "(" << a << "*" << b << ")";
>>         }
>>         tw;
>>     }
>> }

> The use of case above seems very unnatural to me. Is it
> possible to extend each constructor (e.g. MkInt, MkMul, etc.)
> separately.

I don't understand. In my case Mk??? are not domain constructors, so I 
have no way to "extend" anyway.

On the other hand, why is that case business so unnatural? Expr is a 
Union, so in order to be type safe, I have to figure out in which part 
of the union the element actually lives. You do the same thing in your 
implementation of eval on 
http://wiki.axiom-developer.org/SandBoxInductiveType .

>> main(): () == {
>>     import from Integer;
>>     e1: Expr := MkInt 1;       stdout << "e1 = " << e1 << newline;
>>     e2: Expr := MkInt 2;       stdout << "e2 = " << e2 << newline;
>>     e3: Expr := MkInt 3;       stdout << "e3 = " << e3 << newline;
>>     a1: Expr := MkAdd(e1, e2); stdout << "a1 = " << a1 << newline;
>>     m1: Expr := MkMul(a1, e3); stdout << "m1 = " << m1 << newline;
>> }
>> main();
>> ---END bbb.as

> Ralf, these are just general comments about your approach and
> aren't intended to be particularly critical.

Although I felt that it was the most critical reaction on one of my 
mails that I have ever experienced from you, I know that you do that to 
contribute to understanding the situation. I don't feel offended.

By the way. Today I have learned how to include an integer into the 
"left" or "right" part of Union(left: Integer, right: Integer). There 
appears only an example in the AUG, but not a formal description.

Ralf



From MAILER-DAEMON Tue May 08 16:24:46 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HlWEo-000670-IW
	for mharc-axiom-mail@gnu.org; Tue, 08 May 2007 16:24:46 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HlWEm-00066g-Po
	for axiom-mail@nongnu.org; Tue, 08 May 2007 16:24:44 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HlWEm-00066K-8j
	for axiom-mail@nongnu.org; Tue, 08 May 2007 16:24:44 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HlWEm-00066H-1Q
	for axiom-mail@nongnu.org; Tue, 08 May 2007 16:24:44 -0400
Received: from smtp.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1HlW7e-0002lD-6s
	for axiom-mail@nongnu.org; Tue, 08 May 2007 16:17:22 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id 0A99746DE10;
	Tue,  8 May 2007 15:17:19 -0500 (CDT)
Date: Tue, 8 May 2007 15:18:39 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: Ralf Hemmecke <ralf@hemmecke.de>
Subject: Re: [Axiom-mail] Spad and inductive types
In-Reply-To: <4640D794.5080203@hemmecke.de>
Message-ID: <Pine.LNX.4.64.0705081515060.22793@gauss.cs.tamu.edu>
References: <20070508153501.om5k7sdeoy3os04g@webmail.anikast.ca>
	<4640D794.5080203@hemmecke.de>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: Solaris 8 (1)
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 08 May 2007 20:24:45 -0000

On Tue, 8 May 2007, Ralf Hemmecke wrote:

| But I thought that the Haskell
| 
| data Expr = MkInt Int
|           | MkAdd Expr Expr
|           | MkMul Expr Expr
| 
| is more like
| 
| Union(Cross(Tag, Int),
|       Cross(Tag, Expr, Expr),
|       Cross(Tag, Exrp, Expr)).


yes, conceptually, that is the case.

[...]

| As I understood Gaby, he wanted to define just the data structure without any
| additional features like eval or coercion to OutputForm.

You understood right.

The data constructors

   MkInt: Integer -> Expr
   MkAdd: Expr -> Expr -> Expr
   MkMul: Expr -> Expr -> Expr

are essentially the only thing people need to know about the
Expr data type in order to write more operations on it. 
That realization has been taken furthermore to the notion of
"Generalized Algebraic Data Type" (or GADT for short).

Many thanks for your answers.

-- Gaby



From MAILER-DAEMON Tue May 08 17:32:10 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HlXI2-00049V-BV
	for mharc-axiom-mail@gnu.org; Tue, 08 May 2007 17:32:10 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HlXHz-00048r-Bb
	for axiom-mail@nongnu.org; Tue, 08 May 2007 17:32:07 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HlXHy-00048T-LO
	for axiom-mail@nongnu.org; Tue, 08 May 2007 17:32:07 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HlXHy-00048Q-FR
	for axiom-mail@nongnu.org; Tue, 08 May 2007 17:32:06 -0400
Received: from pmail17c2.megamailservers.com ([69.49.111.207])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <bill.page1@synthesis.anikast.ca>) id 1HlXAq-00027v-8N
	for axiom-mail@nongnu.org; Tue, 08 May 2007 17:24:44 -0400
Received: from pmail17c2.megamailservers.com (localhost [127.0.0.1])
	by pmail17c2.megamailservers.com (8.13.6.20060614/8.13.1) with ESMTP id
	l48LOcBh007775
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO);
	Tue, 8 May 2007 17:24:39 -0400
Received: (from webmail@localhost)
	by pmail17c2.megamailservers.com (8.13.6.20060614/8.12.2/Submit) id
	l48LOcnj007769; Tue, 8 May 2007 17:24:38 -0400
Received: from dummy.drenet.dnd.ca (dummy.drenet.dnd.ca [131.136.1.178]) by
	webmail.anikast.ca (Webmail 2.0) with HTTP for
	<bill.page1.synthesis.anikast.ca@webmail.anikast.ca>; Tue, 08 May 2007
	17:24:37 -0400
Message-ID: <20070508172437.7n30q12b3hss08g4@webmail.anikast.ca>
Date: Tue, 08 May 2007 17:24:37 -0400
From: "Bill Page" <bill.page1@synthesis.anikast.ca>
To: Ralf Hemmecke <ralf@hemmecke.de>
Subject: Re: [Axiom-mail] Spad and inductive types
References: <20070508153501.om5k7sdeoy3os04g@webmail.anikast.ca>
	<4640DA97.9070508@hemmecke.de>
In-Reply-To: <4640DA97.9070508@hemmecke.de>
MIME-Version: 1.0
Content-Type: text/plain;
	charset=UTF-8;
	format="flowed"
Content-Disposition: inline
Content-Transfer-Encoding: 7bit
User-Agent: Webmail 4.0
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org,
	Gabriel Dos Reis <gdr@cs.tamu.edu>
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 08 May 2007 21:32:07 -0000

Quoting Ralf Hemmecke <ralf@hemmecke.de>:

> ... 
> Bill Page wrote:
>> Ralf, these are just general comments about your approach and
>> aren't intended to be particularly critical. 
>
> Although I felt that it was the most critical reaction on one of my
> mails that I have ever experienced from you, I know that you do that
> to contribute to understanding the situation. I don't feel offended. 
>

Good. :-) I am learning a lot from your examples. 

Please take a look at:

http://wiki.axiom-developer.org/SandBoxAldorInductiveTypes

Here I have "simply" re-wrote my Expr2 Spad code into Aldor. 
I really *love* the Aldor compiler. Everything important is
explicit and it showed me some very significant things that
were hidden in my Spad code - even though they work the
same. Spad does some remarkable things but some of the
most important ones too often seem hidden. 

.. Now I will have to go back and re-write my Spad code
so that it looks as nice as the Aldor result. 

> By the way. Today I have learned how to include an integer
> into the "left" or "right" part of Union(left: Integer, right: Integer). 
> There appears only an example in the AUG, but not a formal
> description. 
>

Please tell. I missing the example. I think this is quite important. 

Regards,
Bill Page. 



From MAILER-DAEMON Tue May 08 17:46:21 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HlXVl-00053o-Kg
	for mharc-axiom-mail@gnu.org; Tue, 08 May 2007 17:46:21 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HlXVj-00053a-2K
	for axiom-mail@nongnu.org; Tue, 08 May 2007 17:46:19 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HlXVh-00053O-K6
	for axiom-mail@nongnu.org; Tue, 08 May 2007 17:46:18 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HlXVh-00053L-EB
	for axiom-mail@nongnu.org; Tue, 08 May 2007 17:46:17 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1HlXOY-0003Vt-WA
	for axiom-mail@nongnu.org; Tue, 08 May 2007 17:38:55 -0400
Received: from [192.168.138.17] (funklan.cybnes.com [194.187.177.88])
	(authenticated bits=0)
	by athena.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with ESMTP id
	l48LcYfu029073
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Tue, 8 May 2007 23:38:34 +0200
Message-ID: <4640EDD9.7000509@hemmecke.de>
Date: Tue, 08 May 2007 23:38:33 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.0 (X11/20070326)
MIME-Version: 1.0
To: Bill Page <bill.page1@synthesis.anikast.ca>
Subject: Re: [Axiom-mail] Spad and inductive types
References: <20070508153501.om5k7sdeoy3os04g@webmail.anikast.ca>	<4640DA97.9070508@hemmecke.de>
	<20070508172437.7n30q12b3hss08g4@webmail.anikast.ca>
In-Reply-To: <20070508172437.7n30q12b3hss08g4@webmail.anikast.ca>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: Linux 2.4-2.6
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, aldor-l <aldor-l@aldor.org>,
	axiom-mail@nongnu.org, Gabriel Dos Reis <gdr@cs.tamu.edu>
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 08 May 2007 21:46:19 -0000

>> By the way. Today I have learned how to include an integer
>> into the "left" or "right" part of Union(left: Integer, right: 
>> Integer). There appears only an example in the AUG, but not a formal
>> description.
> 
> Please tell. I missing the example. I think this is quite important.

That should have been an exercise to read my mails carefully. ;-)

http://lists.nongnu.org/archive/html/axiom-mail/2007-05/msg00015.html

My first attempt of the file aaa.as (without extend) contained the lines

     MkAdd(x: %, y: %): % == per [Mkadd == [x, y]];
     MkMul(x: %, y: %): % == per [Mkmul == [x, y]];
-- The following two lines work but I haven't found them documented.
-- For the above version see AUG.pdf p. 145.
--    MkAdd(x: %, y: %): % == per union([x, y], Mkadd);
--    MkMul(x: %, y: %): % == per union([x, y], Mkmul);

I found out about the commented version from a compiler message. The 
compiler complained about having two "union" functions available and 
both took two arguments. So I simply tried that out.

That way is, however, not documented in the AUG. (Which means I was 
unable to find it.)

Ralf



From MAILER-DAEMON Tue May 08 18:31:28 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HlYDQ-0004Co-ND
	for mharc-axiom-mail@gnu.org; Tue, 08 May 2007 18:31:28 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HlYDP-0004CQ-F6
	for axiom-mail@nongnu.org; Tue, 08 May 2007 18:31:27 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HlYDO-0004BX-Ha
	for axiom-mail@nongnu.org; Tue, 08 May 2007 18:31:27 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HlYDO-0004B0-7S
	for axiom-mail@nongnu.org; Tue, 08 May 2007 18:31:26 -0400
Received: from smtp.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1HlY6F-0008M7-0B
	for axiom-mail@nongnu.org; Tue, 08 May 2007 18:24:03 -0400
Received: from soliton.cs.tamu.edu (vpn-43.cs.tamu.edu [128.194.150.43])
	by postal.cs.tamu.edu (Postfix) with ESMTP id 5C22546DE10;
	Tue,  8 May 2007 17:23:54 -0500 (CDT)
Received: by soliton.cs.tamu.edu (Postfix, from userid 1000)
	id A87B41AAEB; Tue,  8 May 2007 17:23:51 -0500 (CDT)
Sender: gdr@cs.tamu.edu
To: Ralf Hemmecke <ralf@hemmecke.de>
Subject: Re: [Axiom-mail] Spad and inductive types
References: <05e801c7912e$9d50a660$6900a8c0@asus>
	<Pine.LNX.4.64.0705081018380.25758@gauss.cs.tamu.edu>
	<4640B046.4050907@hemmecke.de> <4640B8AF.2040709@hemmecke.de>
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
In-Reply-To: <4640B8AF.2040709@hemmecke.de>
Organization: Texas A&M University, Department of Computer Science
Date: 08 May 2007 17:23:51 -0500
Message-ID: <876473gdjc.fsf@soliton.cs.tamu.edu>
Lines: 27
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Solaris 8 (1)
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 08 May 2007 22:31:27 -0000

Ralf Hemmecke <ralf@hemmecke.de> writes:

| Gaby,
| 
| because you wanted a contruction of the data structure without any
| functionality, I think the following is the best (at the moment) I can
| think of.

Ralf --

  Many thanks for the various alternatives you suggested, and sharing
your insight into some of Aldor corners I did not explore before.

| I know the definitions in aaa.as look quite lengthy, but it probably
| shows how one could generically generate appropriate Aldor code from a
| more concise Syntax. All the exports that appear are basically the
| exports of the Union (OK, Union still has a few more.)

Yes, I'm a bit concerned about the length -- but I appreciate the
generality you're hinting at.

It looks to me as if, adding (G)ADT to Spad (or Aldor) would be quite
useful.

Many thanks,

-- Gaby



From MAILER-DAEMON Wed May 09 04:10:33 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HlhFp-0000oS-9Z
	for mharc-axiom-mail@gnu.org; Wed, 09 May 2007 04:10:33 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HlhFo-0000k8-B5
	for axiom-mail@nongnu.org; Wed, 09 May 2007 04:10:32 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HlhFl-0000UE-E1
	for axiom-mail@nongnu.org; Wed, 09 May 2007 04:10:31 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HlhFl-0000Te-2Y
	for axiom-mail@nongnu.org; Wed, 09 May 2007 04:10:29 -0400
Received: from pmail22c2.megamailservers.com ([69.49.111.212])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <bill.page1@synthesis.anikast.ca>) id 1Hlh8Z-00070q-Ec
	for axiom-mail@nongnu.org; Wed, 09 May 2007 04:03:03 -0400
Received: from pmail22c2.megamailservers.com (localhost [127.0.0.1])
	by pmail22c2.megamailservers.com (8.13.6.20060614/8.13.1) with ESMTP id
	l4982ucn005875
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO);
	Wed, 9 May 2007 04:02:57 -0400
Received: (from webmail@localhost)
	by pmail22c2.megamailservers.com (8.13.6.20060614/8.12.2/Submit) id
	l4982t7H005874; Wed, 9 May 2007 04:02:55 -0400
Received: from dummy.drenet.dnd.ca (dummy.drenet.dnd.ca [131.136.1.178]) by
	webmail.anikast.ca (Webmail 2.0) with HTTP for
	<bill.page1.synthesis.anikast.ca@webmail.anikast.ca>; Wed, 09 May 2007
	04:02:55 -0400
Message-ID: <20070509040255.7ovsp8lnra8kgcsg@webmail.anikast.ca>
Date: Wed, 09 May 2007 04:02:55 -0400
From: "Bill Page" <bill.page1@synthesis.anikast.ca>
To: Ralf Hemmecke <ralf@hemmecke.de>
Subject: Re: [Axiom-mail] Spad and inductive types
MIME-Version: 1.0
Content-Type: text/plain;
	charset=UTF-8;
	format="flowed"
Content-Disposition: inline
Content-Transfer-Encoding: 7bit
User-Agent: Webmail 4.0
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org,
	Gabriel Dos Reis <gdr@cs.tamu.edu>
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 09 May 2007 08:10:32 -0000

Quoting Ralf Hemmecke <ralf@hemmecke.de>:

>
>>  All the exports that appear are basically the
>>> exports of the Union (OK, Union still has a few more.)
>
>>> ---BEGIN aaa.as
>>> #include "aldor"
>>> #include "aldorio"
>>>
>>> define ET: Category == with; -- ExpressionType
>>> Expr: ET with {
>>>     MkInt: Integer -> %;
>>
>> It doesn't look right to me that the MkInt constructor
>> takes a specific integer as a parameter while MkAdd and
>> MkMul take a type. 
>
> Huh? The MkAdd also take specific elements of Expr. That
> is not different from an element of Integer. It's at the
> same level. 
>

No, I think there is a serious misunderstanding here. What
Gaby is talking about are "algebraic data types". See for
example:

http://en.wikipedia.org/wiki/Algebraic_data_type

In Gaby's example Haskell code:

   data Expr = MkInt Int
           | MkAdd Expr Expr
           | MkMul Expr Expr

MkInt is *not* a function which when given an Integer
returns something of type Expr. It is type *constructor*,
that is, when given 'Int' MkInt returns a subtype of Expr. 
The difference might seem a little subtle at first but we
can clearly distinguish such things in languages like
Spad and Aldor. 

In Spad and Aldor a type constructor is a function that
returns a Type. For example 'Complex' is such a
constructor, so 'Complex Integer' is the domain of
Gaussian Integers. 

Similarly in Haskel 'MkInt' is a type constructor and
'MkInt Int' is an algebraic type, in exactly the same way
that  'Complex Integer' is a domain in Axiom. One should
not be tempted to write: 'Complex 1'. Similarly 'MkInt 1'
would not make sense. 

>>>     MkAdd: (%, %) -> %;
>>>     MkMul: (%, %) -> %;

Here you have not defined algebraic type constructors. We
need 'MkAdd(MkInt Int,MkInt Int)' to be a *type*, like
'Cross(Integer,Integer)' is a type in Aldor. One would not
write: 'Cross(1,1)'. In fact, 'MkAdd(MkInt Int, MkInt Int)'
is another subtype of Expr. Even more generally
'MkAdd(Expr,Expr)' is a subtype of Expr which requires
of course that Expr be at least countably infinite. 

>>>     apply: (%, 'MkInt') -> Integer;
>>>     apply: (%, 'MkAdd') -> (%, %);
>>>     apply: (%, 'MkMul') -> (%, %);
>>>     case: (%, 'MkInt') -> Boolean;
>>>     case: (%, 'MkAdd') -> Boolean;
>>>     case: (%, 'MkMul') -> Boolean;
>>
>> I think having 'apply' and 'case' appear as exports of
>> Expr is very undesirable. 
>
> Well. What do you do with a data structure that has no
> accessor functions?

One is supposed to define functions over an algebraic data
type by recursion. So what in Gaby wrote:

   eval::Expr -> Int
   eval (MkInt i) = i
   eval (MkAdd x y) = (eval x) + (eval y)
   eval (MkMul x y) = (eval x) * (eval y)


in Haskell, by a kind of convenient abuse of notation
(or polymorphism if you wish) 'MkInt' also denotes a
function

   MkInt: Int -> MkInt Int

that creates an object of type 'MkInt Int' from an object
in 'Int'. I think this is a potential source of confusion. 
In Axiom we would usually call this a coercion. 

Similarly 'MkAdd' denotes both a type constructor in
'MkInt Expr Expr' and a binary function

   MkAdd: (Expr,Expr) -> MkAdd Expr Expr

>
>>> } == add {
>>>     Rep == Union(
>>>         Mkint: Integer,
>>>         Mkadd: Record(left: %, right: %),
>>>         Mkmul: Record(left: %, right: %)
>>>     );
>
>> Why not write a Union of the constructors, instead of their
>> representation? I.e. something like:
>
>>      Rep == Union(
>>          Mkint: MkInt,
>>          Mkadd: MkAdd(%,%),
>>          Mkmul: MkMul(%,%)
>>      );
>
> Could probably be done, but how is MkInt different from
> Integer?

'MkInt Integer' is a type distinct from but isomorphic to
Integer so it is "natural" to take Integer as the
representation of the type 'MkInt Integer' and rep as the
coercion. In your case 'MkInt' is the coercion function. 

> What do you gain by introducing the domains MkAdd and
> MkMul?

Well, it allows me to write

Expr: ExprCat
   == add
     Rep == Union(Mkint:MkInt(Integer),
                  Mkadd:MkAdd(%,%),
                  Mkmul:MkMul(%,%))

where Rep is a union of types in ExprCat. Then

   rep: % -> Rep

automatically classifies members of Expr (implements the
pattern matching) and

   per: Rep -> %

injects these subtypes into Expr. 

> If that is needed, it can be done as you showed at
> http://wiki.axiom-developer.org/SandBoxInductiveType . 
> But I thought that the Haskell
>
> data Expr = MkInt Int
>            | MkAdd Expr Expr
>            | MkMul Expr Expr
>
> is more like
>
> Union(Cross(Tag, Int),
>        Cross(Tag, Expr, Expr),
>        Cross(Tag, Expr, Expr)). 
>
> In Aldor the tags appear in front of : so the Cross
> would have one argument less (and I have replaced Cross
> by Record (which is probably not necessary). 

Well yes as a tagged union we might write:

Expr:Type == Union(MkInt:Integer,
                    MkAdd:Cross(Expr, Expr),
                    MkMul:Cross(Expr, Expr));

Aldor even appears to solve this recursion, but it does
not seem to export anything usable by Axiom. See:

http://wiki.axiom-developer.org/SandBoxAldorInductiveTypes

I do agree that as types 'MkAdd Expr Expr' is isomorphic
to 'Cross(Expr,Expr)'. That is why I say MkAdd is a type
constructor. 

>
>>>     import from Rep;
>>>     MkInt(i: Integer): % == per union i;
>>>     MkAdd(x: %, y: %): % == per [Mkadd == [x, y]];
>>>     MkMul(x: %, y: %): % == per [Mkmul == [x, y]];
>>>
>>>     apply(x: %, t:'MkInt'): Integer == rep(x).Mkint;
>>>     apply(x: %, t:'MkAdd'): (%, %) == explode rep(x).Mkadd;
>>>     apply(x: %, t:'MkMul'): (%, %) == explode rep(x).Mkmul;
>>>
>>>     (x: %) case (t:'MkInt'): Boolean == rep(x) case Mkint;
>>>     (x: %) case (t:'MkAdd'): Boolean == rep(x) case Mkadd;
>>>     (x: %) case (t:'MkMul'): Boolean == rep(x) case Mkmul;
>>
>> Why does this construction look so different from the
>> definition of Expr2 in
>>
>> http://wiki.axiom-developer.org/SandBoxInductiveType ?
>>
>>> }
>
> I don't actually understand whether this is meant in a
> positive or negative sense. I would rather call my code
> a variation of yours. 

As explained above, I see major differences. 

>
> The biggest difference probably is that you cannot produce
> that what was in file bbb.as, because in an "extend Expr"
> you would have no way to access the internal structure of
> Expr. 

In

http://wiki.axiom-developer.org/SandBoxAldorInductiveTypes

I show how to use extend. 

>
> As I understood Gaby, he wanted to define just the data
> structure without any additional features like eval or
> coercion to OutputForm. 

I tried to eliminate eval and coercion to OutputForm from
my example in SandBoxAldorInductiveTypes, but I ran into
problems because of the recursion and the fact that I
would have to extend the category ExprCat. Apparently
Aldor does not allow me to do this (yet, see chapter of
AUG on extend). 

>
> To such a data structure one could add features
> (= functions) later without changing or knowing the
> actual representation. 

In my example I do seem to require some knowledge of the
representation (i.e. define Rep == ...). Maybe this could
be avoided if I invented some other interface. 

> That is a step to avoid a lot of (if not all) mutual
> recursion in the construction of the Axiom library. 
>

I still think that is wishful thinking. :-(

Regards,
Bill Page. 




From MAILER-DAEMON Wed May 09 04:59:40 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hli1M-0003RF-BF
	for mharc-axiom-mail@gnu.org; Wed, 09 May 2007 04:59:40 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hli1H-0003Qt-AF
	for axiom-mail@nongnu.org; Wed, 09 May 2007 04:59:36 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hli1F-0003QQ-H6
	for axiom-mail@nongnu.org; Wed, 09 May 2007 04:59:34 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hli1E-0003QF-Rx
	for axiom-mail@nongnu.org; Wed, 09 May 2007 04:59:32 -0400
Received: from smtp.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Hlhu3-0004i8-98
	for axiom-mail@nongnu.org; Wed, 09 May 2007 04:52:07 -0400
Received: from soliton.cs.tamu.edu (vpn-13.cs.tamu.edu [128.194.150.13])
	by postal.cs.tamu.edu (Postfix) with ESMTP id 998C646DE0A;
	Wed,  9 May 2007 03:52:04 -0500 (CDT)
Received: by soliton.cs.tamu.edu (Postfix, from userid 1000)
	id 7D2881AAEB; Wed,  9 May 2007 03:52:03 -0500 (CDT)
Sender: gdr@cs.tamu.edu
To: "Bill Page" <bill.page1@synthesis.anikast.ca>
Subject: Re: [Axiom-mail] Spad and inductive types
References: <20070509040255.7ovsp8lnra8kgcsg@webmail.anikast.ca>
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
In-Reply-To: <20070509040255.7ovsp8lnra8kgcsg@webmail.anikast.ca>
Organization: Texas A&M University, Department of Computer Science
Date: 09 May 2007 03:52:03 -0500
Message-ID: <87lkfyfkgc.fsf@soliton.cs.tamu.edu>
Lines: 57
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Solaris 8 (1)
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 09 May 2007 08:59:37 -0000

"Bill Page" <bill.page1@synthesis.anikast.ca> writes:

| Quoting Ralf Hemmecke <ralf@hemmecke.de>:
| 
| >
| >>  All the exports that appear are basically the
| >>> exports of the Union (OK, Union still has a few more.)
| >
| >>> ---BEGIN aaa.as
| >>> #include "aldor"
| >>> #include "aldorio"
| >>>
| >>> define ET: Category == with; -- ExpressionType
| >>> Expr: ET with {
| >>>     MkInt: Integer -> %;
| >>
| >> It doesn't look right to me that the MkInt constructor
| >> takes a specific integer as a parameter while MkAdd and
| >> MkMul take a type.
| >
| > Huh? The MkAdd also take specific elements of Expr. That
| > is not different from an element of Integer. It's at the
| > same level.
| 
| No, I think there is a serious misunderstanding here. What
| Gaby is talking about are "algebraic data types". See for
| example:
| 
| http://en.wikipedia.org/wiki/Algebraic_data_type
| 
| In Gaby's example Haskell code:
| 
|    data Expr = MkInt Int
|            | MkAdd Expr Expr
|            | MkMul Expr Expr
| 
| MkInt is *not* a function which when given an Integer
| returns something of type Expr.

I disagree: MkInt *IS* such a function.  

| It is type *constructor*,
      ^^^^^^^^^^^^^^^^^^^^

No, that is incorrect.

| that is, when given 'Int' MkInt returns a subtype of Expr. The
| difference might seem a little subtle at first but we
| can clearly distinguish such things in languages like
| Spad and Aldor.

I believe you're confused.  MkInt, MkAdd, and MkMul are *data*
constructors -- I believe I've said that many times.

A type constructor is a different thing.

-- Gaby



From MAILER-DAEMON Wed May 09 05:06:38 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hli86-0006pE-2r
	for mharc-axiom-mail@gnu.org; Wed, 09 May 2007 05:06:38 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hli84-0006oX-8e
	for axiom-mail@nongnu.org; Wed, 09 May 2007 05:06:36 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hli82-0006o1-Sd
	for axiom-mail@nongnu.org; Wed, 09 May 2007 05:06:35 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hli82-0006nK-M1
	for axiom-mail@nongnu.org; Wed, 09 May 2007 05:06:34 -0400
Received: from mailhost.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Hli0r-0005al-5i
	for axiom-mail@nongnu.org; Wed, 09 May 2007 04:59:09 -0400
Received: from soliton.cs.tamu.edu (vpn-13.cs.tamu.edu [128.194.150.13])
	by postal.cs.tamu.edu (Postfix) with ESMTP id 908D346DE0A;
	Wed,  9 May 2007 03:59:08 -0500 (CDT)
Received: by soliton.cs.tamu.edu (Postfix, from userid 1000)
	id 7D3091AAEB; Wed,  9 May 2007 03:59:07 -0500 (CDT)
Sender: gdr@cs.tamu.edu
To: "Bill Page" <bill.page1@synthesis.anikast.ca>
Subject: Re: [Axiom-mail] Spad and inductive types
References: <20070509040255.7ovsp8lnra8kgcsg@webmail.anikast.ca>
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
In-Reply-To: <20070509040255.7ovsp8lnra8kgcsg@webmail.anikast.ca>
Organization: Texas A&M University, Department of Computer Science
Date: 09 May 2007 03:59:07 -0500
Message-ID: <87fy66fk4k.fsf@soliton.cs.tamu.edu>
Lines: 20
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Solaris 8 (1)
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 09 May 2007 09:06:36 -0000

"Bill Page" <bill.page1@synthesis.anikast.ca> writes:

[...]

| in Haskell, by a kind of convenient abuse of notation
| (or polymorphism if you wish) 'MkInt' also denotes a
| function
| 
|    MkInt: Int -> MkInt Int

Bill -- 

  you're highly confused. 

      http://haskell.org/onlinereport/decls.html#user-defined-datatypes


and most of your related comments don't make much sense.

-- Gaby



From MAILER-DAEMON Wed May 09 05:34:47 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HliZK-0007mo-JR
	for mharc-axiom-mail@gnu.org; Wed, 09 May 2007 05:34:46 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HliZH-0007ma-Dx
	for axiom-mail@nongnu.org; Wed, 09 May 2007 05:34:43 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HliZF-0007mG-5b
	for axiom-mail@nongnu.org; Wed, 09 May 2007 05:34:41 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HliZD-0007mA-RM
	for axiom-mail@nongnu.org; Wed, 09 May 2007 05:34:40 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1HliS1-0008CO-R4
	for axiom-mail@nongnu.org; Wed, 09 May 2007 05:27:14 -0400
Received: from [193.170.38.119] (hemmecke@woodpecker.risc.uni-linz.ac.at
	[193.170.38.119]) (authenticated bits=0)
	by athena.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with ESMTP id
	l499R4fu018302
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Wed, 9 May 2007 11:27:04 +0200
Message-ID: <464193E7.1090506@hemmecke.de>
Date: Wed, 09 May 2007 11:27:03 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.0 (X11/20070326)
MIME-Version: 1.0
To: Bill Page <bill.page1@synthesis.anikast.ca>
Subject: Re: [Axiom-mail] Spad and inductive types
References: <20070509040255.7ovsp8lnra8kgcsg@webmail.anikast.ca>
In-Reply-To: <20070509040255.7ovsp8lnra8kgcsg@webmail.anikast.ca>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: Linux 2.4-2.6
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org,
	Gabriel Dos Reis <gdr@cs.tamu.edu>
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 09 May 2007 09:34:43 -0000

On 05/09/2007 10:02 AM, Bill Page wrote:
 > No, I think there is a serious misunderstanding here. What
 > Gaby is talking about are "algebraic data types". See for
 > example:
 >
 > http://en.wikipedia.org/wiki/Algebraic_data_type
 >
 > In Gaby's example Haskell code:
 >
 >   data Expr = MkInt Int
 >           | MkAdd Expr Expr
 >           | MkMul Expr Expr
 >
 > MkInt is *not* a function which when given an Integer
 > returns something of type Expr. It is type *constructor*,
 > that is, when given 'Int' MkInt returns a subtype of Expr.

Before you criticize... I don't claim that I am right. What comes is 
just my current understanding.

Let me quote from
http://en.wikipedia.org/wiki/Algebraic_data_type

   Here, Empty, Leaf and Node are the constructors. Somewhat similar
   to a function, a constructor is applied to arguments of an
   appropriate type, then yielding an instance of the data type
   to which the constructor belongs.

 > The
 > difference might seem a little subtle at first but we
 > can clearly distinguish such things in languages like
 > Spad and Aldor.
 > In Spad and Aldor a type constructor is a function that
 > returns a Type.

I agree on the latter, but as you said, it is a "type constructor".
In the wikipedia article "constructor" sounds to me more like a 
constructor in object oriented languages like Java. One creates an 
instance of the type. So as in
http://lists.nongnu.org/archive/html/axiom-mail/2007-05/msg00001.html
one says

eval (MkInt i) = i

i.e. the argument is an integer and not the type Integer. And since

eval::Expr -> Int

the input to eval should be an actual element of type Expr, not the type 
Expr itself.

 > For example 'Complex' is such a
 > constructor, so 'Complex Integer' is the domain of
 > Gaussian Integers.
 > Similarly in Haskel 'MkInt' is a type constructor and
 > 'MkInt Int' is an algebraic type, in exactly the same way
 > that  'Complex Integer' is a domain in Axiom. One should
 > not be tempted to write: 'Complex 1'. Similarly 'MkInt 1'
 > would not make sense.

Ah, is begin to understand. Have you seen my note on the use of the maros

Mkint ==> MkInt;
Mkadd ==> MkAdd;
Mkmul ==> MkMul;

? MkInt is the constructor (in the oo sense) and Mkint is just a tag.

The tag Mkint corresponds to the MkInt in the above Haskell code. And a 
tag (together with the (aldor) functions MkInt, etc. is enough to 
simulate the Haskell code. In the Haskell code Mkint and MkInt is 
denoted by the same identifier.

I still don't say that one cannot simulate Haskell's MkInt by a Aldor 
domain constructor. You have shown that it works on
http://wiki.axiom-developer.org/SandBoxAldorInductiveTypes .
But it seems to be unnecessary overhead to me.

And I cannot say whether MkInt is a type constructor in Haskell, since I 
don't know the language very well. An argument against it would be that
there is no code of the form

data MkInt a = ...

But I better should be quiet, I simply don't know enough of Haskell.


 >> Well. What do you do with a data structure that has no
 >> accessor functions?
 >
 > One is supposed to define functions over an algebraic data
 > type by recursion. So what in Gaby wrote:
 >
 >   eval::Expr -> Int
 >   eval (MkInt i) = i
 >   eval (MkAdd x y) = (eval x) + (eval y)
 >   eval (MkMul x y) = (eval x) * (eval y)
 >
 >
 > in Haskell, by a kind of convenient abuse of notation
 > (or polymorphism if you wish) 'MkInt' also denotes a
 > function
 >
 >   MkInt: Int -> MkInt Int
 >
 > that creates an object of type 'MkInt Int' from an object
 > in 'Int'. I think this is a potential source of confusion.

I agree that it's a source of confusion. But I must admit that I would 
have written

   MkInt: Int -> Expr

instead. Otherwise there would be a type mismatch in

   eval (MkInt i) = i

since MkInt(Int) is not equal to Expr. Don't you agree?

 >> What do you gain by introducing the domains MkAdd and
 >> MkMul?
 >
 > Well, it allows me to write
 >
 > Expr: ExprCat
 >   == add
 >     Rep == Union(Mkint:MkInt(Integer),
 >                  Mkadd:MkAdd(%,%),
 >                  Mkmul:MkMul(%,%))
 >
 > where Rep is a union of types in ExprCat. Then
 >
 >   rep: % -> Rep
 >
 > automatically classifies members of Expr (implements the
 > pattern matching) and
 >
 >   per: Rep -> %
 >
 > injects these subtypes into Expr.

Unfortunately, in Aldor rep and per are macros and actually only do some 
"pretend". What you need is an actual functions "union" to map an 
element of type MkInt(Integer) into Rep.


 >> That is a step to avoid a lot of (if not all) mutual
 >> recursion in the construction of the Axiom library.

 > I still think that is wishful thinking. :-(

It is probably not so wishful if you have looked a bit at the 
bootstrapping of LibAldor and LibAlgebra. For example, Integer is not a 
Ring in LibAldor, because Ring is only introduced in LibAlgebra. Still 
one can do lots of things already with LibAldor. I must say, I don't see 
a big bootstrapping problem at all in LibAldor.

Ralf



From MAILER-DAEMON Wed May 09 07:16:49 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HlkA4-0004fS-RU
	for mharc-axiom-mail@gnu.org; Wed, 09 May 2007 07:16:48 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HlkA3-0004ev-85
	for axiom-mail@nongnu.org; Wed, 09 May 2007 07:16:47 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HlkA2-0004eQ-B9
	for axiom-mail@nongnu.org; Wed, 09 May 2007 07:16:46 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HlkA2-0004eL-5R
	for axiom-mail@nongnu.org; Wed, 09 May 2007 07:16:46 -0400
Received: from pmail26c2.megamailservers.com ([69.49.111.216])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <bill.page1@synthesis.anikast.ca>) id 1Hlk2p-00038f-R3
	for axiom-mail@nongnu.org; Wed, 09 May 2007 07:09:20 -0400
Received: from pmail26c2.megamailservers.com (localhost [127.0.0.1])
	by pmail26c2.megamailservers.com (8.13.6.20060614/8.13.1) with ESMTP id
	l49B9Ea1004623
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO);
	Wed, 9 May 2007 07:09:15 -0400
Received: (from webmail@localhost)
	by pmail26c2.megamailservers.com (8.13.6.20060614/8.12.2/Submit) id
	l49B9Dg2004622; Wed, 9 May 2007 07:09:13 -0400
Received: from dummy.drenet.dnd.ca (dummy.drenet.dnd.ca [131.136.1.178]) by
	webmail.anikast.ca (Webmail 2.0) with HTTP for
	<bill.page1.synthesis.anikast.ca@webmail.anikast.ca>; Wed, 09 May 2007
	07:09:13 -0400
Message-ID: <20070509070913.i7ql0dcf514w84c8@webmail.anikast.ca>
Date: Wed, 09 May 2007 07:09:13 -0400
From: "Bill Page" <bill.page1@synthesis.anikast.ca>
To: Ralf Hemmecke <ralf@hemmecke.de>
Subject: Re: [Axiom-mail] Spad and inductive types
MIME-Version: 1.0
Content-Type: text/plain;
	charset=UTF-8;
	format="flowed"
Content-Disposition: inline
Content-Transfer-Encoding: 7bit
User-Agent: Webmail 4.0
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org,
	Gabriel Dos Reis <gdr@cs.tamu.edu>
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 09 May 2007 11:16:47 -0000

Quoting Ralf Hemmecke <ralf@hemmecke.de>:

> On 05/09/2007 10:02 AM, Bill Page wrote:
>  > ... 
>  > MkInt is *not* a function which when given an Integer
>  > returns something of type Expr. It is type *constructor*,
>  > that is, when given 'Int' MkInt returns a subtype of Expr. 
>
> Before you criticize... I don't claim that I am right. What
> comes is just my current understanding. 
>

Sorry, I do not mean to criticize. I am also only writing about my
current (provisional) understanding. 

> Let me quote from
> http://en.wikipedia.org/wiki/Algebraic_data_type
>
>    Here, Empty, Leaf and Node are the constructors. Somewhat
>    similar  to a function, a constructor is applied to arguments of
>    an appropriate type, then yielding an instance of the data type
>    to which the constructor belongs. 
>

I would emphasize *Somewhat similar to a function*. Yes the
Haskell definition does define the application of data constructors
to "arguments of an appropriate type". 

> ... 
>  > In Spad and Aldor a type constructor is a function that
>  > returns a Type. 
>
> I agree on the latter, but as you said, it is a "type constructor". 
> In the wikipedia article "constructor" sounds to me more like a
> constructor in object oriented languages like Java. One creates
> an instance of the type. 

Both categories and domains are types in Aldor. A constructor
can return a domain as an instance of a category. Any way you
write it

   data Expr = MkInt Integer | ... 

defines Expr as a type with members 'MkInt 1', 'MkInt 2', ... etc. 

> So as in
> http://lists.nongnu.org/archive/html/axiom-mail/2007-05/msg00001.html
> one says
>
> eval (MkInt i) = i
>
> i.e. the argument is an integer and not the type Integer. 

The argument of eval above is 'MkInt i'. It is not an integer. 
It is a member of the type 'MkInt Integer', which is a subtype
of Expr. 

> And since
>
> eval::Expr -> Int
>
> the input to eval should be an actual element of type Expr, not
> the type Expr itself. 

I agree. 

> ... 
> Ah, is begin to understand. Have you seen my note on the use of the
> macros
>
> Mkint ==> MkInt;
> Mkadd ==> MkAdd;
> Mkmul ==> MkMul;
>
> ? MkInt is the constructor (in the oo sense) and Mkint is just a tag. 
>

Yes. 

> The tag Mkint corresponds to the MkInt in the above Haskell code. 
> And a tag (together with the (aldor) functions MkInt, etc. is enough to
> simulate the Haskell code. In the Haskell code Mkint and MkInt is
> denoted by the same identifier. 

I agree. 

>
> I still don't say that one cannot simulate Haskell's MkInt by a
> Aldor domain constructor. You have shown that it works on
> http://wiki.axiom-developer.org/SandBoxAldorInductiveTypes . 
> But it seems to be unnecessary overhead to me. 
>

Maybe that is true. I have not looked at the actual generated
Lisp code. I very much doubt that it is anything as economical
as the Lisp output of Shoe (New Boot) that Gaby showed in the
email that started this thread. But I would expect that: Spad is
not Boot. 

>  > ... 
>  > in Haskell, by a kind of convenient abuse of notation
>  > (or polymorphism if you wish) 'MkInt' also denotes a
>  > function
>  >
>  >   MkInt: Int -> MkInt Int
>  >
>  > that creates an object of type 'MkInt Int' from an object
>  > in 'Int'. I think this is a potential source of confusion. 

Probably I should have avoided the wording above that might
(incorrectly) be interpreted as a slur against Haskell. That is
certainly not my intent and perhaps it would have help to avoid
Gaby's reaction to my email. Really I am only talking about
how I think this concept should be written in Spad and Aldor. 

>
> I agree that it's a source of confusion. But I must admit that
> I would have written
>
>    MkInt: Int -> Expr
>
> instead. Otherwise there would be a type mismatch in
>
>    eval (MkInt i) = i
>
> since MkInt(Int) is not equal to Expr. Don't you agree?

'MkInt i' is a member of the type 'MkInt Integer' which is
a subtype of Expr. The expression

     eval (MkInt i) = i

only defines eval over this subtype of Expr. The complete
definition of 'eval' also requires two other definitions for
'MkAdd Expr Expr' and 'MkMul Expr Expr', respectively. 

> ... 
> >. Then
>  >
>  >   rep: % -> Rep
>  >
>  > automatically classifies members of Expr (implements the
>  > pattern matching) and
>  >
>  >   per: Rep -> %
>  >
>  > injects these subtypes into Expr. 
>
> Unfortunately, in Aldor rep and per are macros and actually only do
> some "pretend". 

You are right however they also involve @. The reason is that they
must be "type-safe". Assuming however that they are type-safe,
then they can be written as functions as I show above. (In fact this
is used in several places in the Axiom library.)

> What you need is an actual functions "union" to map an element
> of type MkInt(Integer) into Rep. 
>

Yes, "union" is needed in the implementation, but my point is that

   rep: % -> Rep

maps elements of Expr directly into the Union. 'case' can then be
used to classify them as 'MkInt ...', 'MkAdd ...' or 'MkMul ...'. 

> ... 

Regards,
Bill Page. 




From MAILER-DAEMON Wed May 09 07:43:39 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hlka3-0006YM-M1
	for mharc-axiom-mail@gnu.org; Wed, 09 May 2007 07:43:39 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hlka1-0006UA-Gy
	for axiom-mail@nongnu.org; Wed, 09 May 2007 07:43:37 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HlkZz-0006Oq-Rc
	for axiom-mail@nongnu.org; Wed, 09 May 2007 07:43:37 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HlkZz-0006Oe-K1
	for axiom-mail@nongnu.org; Wed, 09 May 2007 07:43:35 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1HlkSn-0005yL-5Q
	for axiom-mail@nongnu.org; Wed, 09 May 2007 07:36:09 -0400
Received: from [193.170.38.119] (hemmecke@woodpecker.risc.uni-linz.ac.at
	[193.170.38.119]) (authenticated bits=0)
	by athena.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with ESMTP id
	l49Ba3fu020463
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Wed, 9 May 2007 13:36:04 +0200
Message-ID: <4641B222.2000101@hemmecke.de>
Date: Wed, 09 May 2007 13:36:02 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.0 (X11/20070326)
MIME-Version: 1.0
To: Bill Page <bill.page1@synthesis.anikast.ca>
Subject: Re: [Axiom-mail] Spad and inductive types
References: <20070509070913.i7ql0dcf514w84c8@webmail.anikast.ca>
In-Reply-To: <20070509070913.i7ql0dcf514w84c8@webmail.anikast.ca>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: Linux 2.4-2.6
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org,
	Gabriel Dos Reis <gdr@cs.tamu.edu>
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 09 May 2007 11:43:38 -0000

Dear Bill,

I only have a comment on the following.

>> I agree that it's a source of confusion. But I must admit that
>> I would have written
>>
>>    MkInt: Int -> Expr
>>
>> instead. Otherwise there would be a type mismatch in
>>
>>    eval (MkInt i) = i
>>
>> since MkInt(Int) is not equal to Expr. Don't you agree?
> 
> 'MkInt i' is a member of the type 'MkInt Integer' which is
> a subtype of Expr. The expression
> 
>     eval (MkInt i) = i
> 
> only defines eval over this subtype of Expr. The complete
> definition of 'eval' also requires two other definitions for
> 'MkAdd Expr Expr' and 'MkMul Expr Expr', respectively.

The "subtype" is the thing that bothers me. Not in Haskell, but in your 
Aldor code on
http://wiki.axiom-developer.org/SandBoxAldorInductiveTypes

You define a domain

   MkInt(Z:IntegerNumberSystem): ExprCat == add ...

and then you use it in

Expr: ExprCat == add {
     Rep == Union(Mkint:MkInt(Integer), ...);
     ...
}

I don't think that construction qualifies MkInt to count as a subtype of 
Expr. Note that the representations of MkInt and Expr are different.

http://aldor.org/docs/HTML/chap7.html#5
(Although I find that section not very illuminating w.r.t. domains.)


Ralf



From MAILER-DAEMON Wed May 09 09:46:31 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HlmUx-0004Qy-7w
	for mharc-axiom-mail@gnu.org; Wed, 09 May 2007 09:46:31 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HlmUv-0004Qp-Ng
	for axiom-mail@nongnu.org; Wed, 09 May 2007 09:46:29 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HlmUt-0004QZ-Rb
	for axiom-mail@nongnu.org; Wed, 09 May 2007 09:46:29 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HlmUt-0004QW-N7
	for axiom-mail@nongnu.org; Wed, 09 May 2007 09:46:27 -0400
Received: from smtp.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1HlmNg-00047S-PZ
	for axiom-mail@nongnu.org; Wed, 09 May 2007 09:39:00 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id 6276C46DE0A;
	Wed,  9 May 2007 08:38:58 -0500 (CDT)
Date: Wed, 9 May 2007 08:40:18 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: Ralf Hemmecke <ralf@hemmecke.de>
Subject: Re: [Axiom-mail] Spad and inductive types
In-Reply-To: <464193E7.1090506@hemmecke.de>
Message-ID: <Pine.LNX.4.64.0705090838160.10998@gauss.cs.tamu.edu>
References: <20070509040255.7ovsp8lnra8kgcsg@webmail.anikast.ca>
	<464193E7.1090506@hemmecke.de>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: Solaris 8 (1)
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 09 May 2007 13:46:29 -0000

On Wed, 9 May 2007, Ralf Hemmecke wrote:

| And I cannot say whether MkInt is a type constructor in Haskell, since I don't
| know the language very well. 

MkInt is NOT a type constructor in Haskell; Bill was very confused.
MkInt is a *data* constructor, and your understanding is correct.

-- Gaby



From MAILER-DAEMON Wed May 09 09:58:49 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hlmgr-00069n-D2
	for mharc-axiom-mail@gnu.org; Wed, 09 May 2007 09:58:49 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hlmgq-00069Y-MS
	for axiom-mail@nongnu.org; Wed, 09 May 2007 09:58:48 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hlmgq-00069A-5C
	for axiom-mail@nongnu.org; Wed, 09 May 2007 09:58:48 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hlmgp-000695-Q3
	for axiom-mail@nongnu.org; Wed, 09 May 2007 09:58:47 -0400
Received: from mailhost.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1HlmZc-0005bw-S9
	for axiom-mail@nongnu.org; Wed, 09 May 2007 09:51:21 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id 34F4246DE0A;
	Wed,  9 May 2007 08:51:20 -0500 (CDT)
Date: Wed, 9 May 2007 08:52:40 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: Bill Page <bill.page1@synthesis.anikast.ca>
Subject: Re: [Axiom-mail] Spad and inductive types
In-Reply-To: <20070509070913.i7ql0dcf514w84c8@webmail.anikast.ca>
Message-ID: <Pine.LNX.4.64.0705090845050.10998@gauss.cs.tamu.edu>
References: <20070509070913.i7ql0dcf514w84c8@webmail.anikast.ca>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: Solaris 8 (1)
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 09 May 2007 13:58:48 -0000

On Wed, 9 May 2007, Bill Page wrote:

[...]

| > > ... in Haskell, by a kind of convenient abuse of notation
| > > (or polymorphism if you wish) 'MkInt' also denotes a
| > > function
| > >
| > >   MkInt: Int -> MkInt Int
| > >
| > > that creates an object of type 'MkInt Int' from an object
| > > in 'Int'. I think this is a potential source of confusion. 
| 
| Probably I should have avoided the wording above that might
| (incorrectly) be interpreted as a slur against Haskell.

Well, I did not interepret it as a slur against Haskell.  However, it did
appear to me to be fundamentally incorrect to miss the core ideas of
algebraic data typea and how they lead to GADT:  

    data Expr where
      MkInt:: Integer -> Expr
      MkAdd:: Expr -> Expr -> Expr
      MkMul:: Expr -> Expr -> Expr

That is all that is needed to define more operations on values of
type Expr.


[...]

| Yes, "union" is needed in the implementation, but my point is that
| 
|   rep: % ->Rep
| 
| maps elements of Expr directly into the Union. 'case' can then be
| used to classify them as 'MkInt ...', 'MkAdd ...' or 'MkMul ...'. 

Indeed.

-- Gaby



From MAILER-DAEMON Wed May 09 10:07:49 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HlmpY-0003RC-Vk
	for mharc-axiom-mail@gnu.org; Wed, 09 May 2007 10:07:49 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HlmpY-0003Qf-4V
	for axiom-mail@nongnu.org; Wed, 09 May 2007 10:07:48 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HlmpV-0003JH-Id
	for axiom-mail@nongnu.org; Wed, 09 May 2007 10:07:47 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HlmpV-0003Iz-A3
	for axiom-mail@nongnu.org; Wed, 09 May 2007 10:07:45 -0400
Received: from pmail22c2.megamailservers.com ([69.49.111.212])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <bill.page1@synthesis.anikast.ca>) id 1HlmiI-0006cw-6b
	for axiom-mail@nongnu.org; Wed, 09 May 2007 10:00:18 -0400
Received: from pmail22c2.megamailservers.com (localhost [127.0.0.1])
	by pmail22c2.megamailservers.com (8.13.6.20060614/8.13.1) with ESMTP id
	l49E0Dc7029510
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO);
	Wed, 9 May 2007 10:00:14 -0400
Received: (from webmail@localhost)
	by pmail22c2.megamailservers.com (8.13.6.20060614/8.12.2/Submit) id
	l49E0DpC029506; Wed, 9 May 2007 10:00:13 -0400
Received: from dummy.drenet.dnd.ca (dummy.drenet.dnd.ca [131.136.1.178]) by
	webmail.anikast.ca (Webmail 2.0) with HTTP for
	<bill.page1.synthesis.anikast.ca@webmail.anikast.ca>; Wed, 09 May 2007
	10:00:12 -0400
Message-ID: <20070509100012.6uswc6hbz6yskwwg@webmail.anikast.ca>
Date: Wed, 09 May 2007 10:00:12 -0400
From: "Bill Page" <bill.page1@synthesis.anikast.ca>
To: Ralf Hemmecke <ralf@hemmecke.de>
Subject: Re: [Axiom-mail] Spad and inductive types
MIME-Version: 1.0
Content-Type: text/plain;
	charset=UTF-8;
	format="flowed"
Content-Disposition: inline
Content-Transfer-Encoding: 7bit
User-Agent: Webmail 4.0
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org,
	Gabriel Dos Reis <gdr@cs.tamu.edu>
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 09 May 2007 14:07:48 -0000

Quoting Ralf Hemmecke <ralf@hemmecke.de>:

> Dear Bill,
>
> I only have a comment on the following. 
>
>>> I agree that it's a source of confusion. But I must admit that
>>> I would have written
>>>
>>>    MkInt: Int -> Expr
>>>
>>> instead. Otherwise there would be a type mismatch in
>>>
>>>    eval (MkInt i) = i
>>>
>>> since MkInt(Int) is not equal to Expr. Don't you agree?
>>
>> 'MkInt i' is a member of the type 'MkInt Integer' which is
>> a subtype of Expr. The expression
>>
>>     eval (MkInt i) = i
>>
>> only defines eval over this subtype of Expr. The complete
>> definition of 'eval' also requires two other definitions for
>> 'MkAdd Expr Expr' and 'MkMul Expr Expr', respectively. 
>
> The "subtype" is the thing that bothers me. Not in Haskell,
> but in your Aldor code on
> http://wiki.axiom-developer.org/SandBoxAldorInductiveTypes
>
> You define a domain
>
>    MkInt(Z:IntegerNumberSystem): ExprCat == add ... 
>
> and then you use it in
>
> Expr: ExprCat == add {
>      Rep == Union(Mkint:MkInt(Integer), ...);
>      ... 
> }
>
> I don't think that construction qualifies MkInt to count as a subtype
> of Expr. Note that the representations of MkInt and Expr are different. 
>
> http://aldor.org/docs/HTML/chap7.html#5
> (Although I find that section not very illuminating w.r.t. domains.)
>

I understand your point. For me it is still a little mysterious that
representation is involved here at all since the usual recursive
definition doesn't seem to need it. But you would agree of course
that both Expr and MkInt(Integer) are in ExprCat. The specific
representation of Expr is such that MkInt(Integer) is a subset of
that  Rep (as implemented by 'Union') and 'per' is a natural
isomorhism (Expr can be assigned the property 'canonical' as
defined in Axiom) because the Union is disjoint. So maybe I
should have said that it is a sub-type "up to an isomorphism". 

Another way of saying this is that objects in Expr are such that
their representation is a Union of sub-types of Expr, recursively,
down to MkInt(Integer) which is just represented by Integer. Really
it is not so peculiar to say that an expression should be represented
in terms of it's sub-expressions. Right?

(You see, I am really just trying to convince myself by convincing
you... :-) Thank you for persisting in this discussion. 

Regards,
Bill Page. 



From MAILER-DAEMON Wed May 09 10:32:34 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HlnDW-0005aX-9i
	for mharc-axiom-mail@gnu.org; Wed, 09 May 2007 10:32:34 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HlnDU-0005Tp-8u
	for axiom-mail@nongnu.org; Wed, 09 May 2007 10:32:32 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HlnDR-0005JB-MW
	for axiom-mail@nongnu.org; Wed, 09 May 2007 10:32:31 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HlnDR-0005IY-Gi
	for axiom-mail@nongnu.org; Wed, 09 May 2007 10:32:29 -0400
Received: from pmail26c2.megamailservers.com ([69.49.111.216])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <bill.page1@synthesis.anikast.ca>) id 1Hln6E-0000oA-9g
	for axiom-mail@nongnu.org; Wed, 09 May 2007 10:25:02 -0400
Received: from pmail26c2.megamailservers.com (localhost [127.0.0.1])
	by pmail26c2.megamailservers.com (8.13.6.20060614/8.13.1) with ESMTP id
	l49EOulJ017826
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO);
	Wed, 9 May 2007 10:24:57 -0400
Received: (from webmail@localhost)
	by pmail26c2.megamailservers.com (8.13.6.20060614/8.12.2/Submit) id
	l49EOuTE017825; Wed, 9 May 2007 10:24:56 -0400
Received: from dummy.drenet.dnd.ca (dummy.drenet.dnd.ca [131.136.1.178]) by
	webmail.anikast.ca (Webmail 2.0) with HTTP for
	<bill.page1.synthesis.anikast.ca@webmail.anikast.ca>; Wed, 09 May 2007
	10:24:56 -0400
Message-ID: <20070509102456.mlg1mjil6jdwsss8@webmail.anikast.ca>
Date: Wed, 09 May 2007 10:24:56 -0400
From: "Bill Page" <bill.page1@synthesis.anikast.ca>
To: Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: Re: [Axiom-mail] Spad and inductive types
References: <20070509070913.i7ql0dcf514w84c8@webmail.anikast.ca>
	<Pine.LNX.4.64.0705090845050.10998@gauss.cs.tamu.edu>
In-Reply-To: <Pine.LNX.4.64.0705090845050.10998@gauss.cs.tamu.edu>
MIME-Version: 1.0
Content-Type: text/plain;
	charset=UTF-8;
	format="flowed"
Content-Disposition: inline
Content-Transfer-Encoding: 7bit
User-Agent: Webmail 4.0
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 09 May 2007 14:32:32 -0000

Quoting Gabriel Dos Reis <gdr@cs.tamu.edu>:

> On Wed, 9 May 2007, Bill Page wrote:
>
> [...]
>
> | > > ... in Haskell, by a kind of convenient abuse of notation
> | > > (or polymorphism if you wish) 'MkInt' also denotes a
> | > > function
> | > >
> | > >   MkInt: Int -> MkInt Int
> | > >
> | > > that creates an object of type 'MkInt Int' from an object
> | > > in 'Int'. I think this is a potential source of confusion. 
> |
> | Probably I should have avoided the wording above that might
> | (incorrectly) be interpreted as a slur against Haskell. 
>
> Well, I did not interepret it as a slur against Haskell.  However, it did
> appear to me to be fundamentally incorrect to miss the core ideas of
> algebraic data typea and how they lead to GADT:
>
>     data Expr where
>       MkInt:: Integer -> Expr
>       MkAdd:: Expr -> Expr -> Expr
>       MkMul:: Expr -> Expr -> Expr
>
> That is all that is needed to define more operations on values of
> type Expr. 
>

I agree that GADT is important in the context of Haskell which has
(in principle) a complete and formal semantics. But I do not think it
is so interesting in Spad and Aldor which already has the full
machinery of abstract data types. If we want to add more operations
on a given type, we have 'add inheritance', e.g. 

   NewExpr: ExprCat with ... = Expr add ... 

and even post-facto extension of domains in Aldor. 

I can see however why this is interesting from the point of view of
Boot. If Boot could be given a formal semantics like Haskell, then
one might be much more confident of it's use to implement Spad
and therefore ultimately confidence in the semantics of Spad. 

Am I wrong in presuming this underlying motivation? But if you still
think I am just confused, please don't feel obliged to say more than
that you think so... 

Regards,
Bill Page. 



From MAILER-DAEMON Wed May 09 11:03:38 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hlnha-0000X4-3u
	for mharc-axiom-mail@gnu.org; Wed, 09 May 2007 11:03:38 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HlnhY-0000WK-EH
	for axiom-mail@nongnu.org; Wed, 09 May 2007 11:03:36 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HlnhW-0000VG-QP
	for axiom-mail@nongnu.org; Wed, 09 May 2007 11:03:36 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HlnhW-0000V6-FJ
	for axiom-mail@nongnu.org; Wed, 09 May 2007 11:03:34 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1HlnaJ-0003sg-1N
	for axiom-mail@nongnu.org; Wed, 09 May 2007 10:56:07 -0400
Received: from [193.170.38.119] (hemmecke@woodpecker.risc.uni-linz.ac.at
	[193.170.38.119]) (authenticated bits=0)
	by athena.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with ESMTP id
	l49Etxfu024089
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Wed, 9 May 2007 16:56:00 +0200
Message-ID: <4641E0FE.4000905@hemmecke.de>
Date: Wed, 09 May 2007 16:55:58 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.0 (X11/20070326)
MIME-Version: 1.0
To: Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: Re: [Axiom-mail] Spad and inductive types
References: <20070509070913.i7ql0dcf514w84c8@webmail.anikast.ca>
	<Pine.LNX.4.64.0705090845050.10998@gauss.cs.tamu.edu>
In-Reply-To: <Pine.LNX.4.64.0705090845050.10998@gauss.cs.tamu.edu>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: Linux 2.4-2.6
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 09 May 2007 15:03:36 -0000

> Well, I did not interepret it as a slur against Haskell.  However, it did
> appear to me to be fundamentally incorrect to miss the core ideas of
> algebraic data typea and how they lead to GADT:  
> 
>     data Expr where
>       MkInt:: Integer -> Expr
>       MkAdd:: Expr -> Expr -> Expr
>       MkMul:: Expr -> Expr -> Expr
> 
> That is all that is needed to define more operations on values of
> type Expr.

Gaby, I think I must disagree with your last sentence. It might probably 
be correct for Haskell, because there is the pattern matching thing, but 
in general one would need also functions like

apply: (%, 'MkInt') -> Integer;
apply: (%, 'MkAdd') -> %

case: (%, 'MkInt') -> Boolean;
etc.

Accessor functions seem to be somewhat hidden in Haskell, but in Aldor 
they would have to be explicit.

Anyway, that GADT example above looks already surprisingly like Aldor 
(although it probably means something else --- what exactly?).

Ralf



From MAILER-DAEMON Wed May 09 11:30:24 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hlo7U-00052v-PE
	for mharc-axiom-mail@gnu.org; Wed, 09 May 2007 11:30:24 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hlo7T-00052j-5f
	for axiom-mail@nongnu.org; Wed, 09 May 2007 11:30:23 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hlo7R-000527-Io
	for axiom-mail@nongnu.org; Wed, 09 May 2007 11:30:21 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hlo7R-000524-GE
	for axiom-mail@nongnu.org; Wed, 09 May 2007 11:30:21 -0400
Received: from smtp.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Hlo0E-0006ny-0R
	for axiom-mail@nongnu.org; Wed, 09 May 2007 11:22:54 -0400
Received: from soliton.cs.tamu.edu (vpn-33.cs.tamu.edu [128.194.150.33])
	by postal.cs.tamu.edu (Postfix) with ESMTP id BB3D846DE21;
	Wed,  9 May 2007 10:22:52 -0500 (CDT)
Received: by soliton.cs.tamu.edu (Postfix, from userid 1000)
	id CBF111AAEB; Wed,  9 May 2007 09:53:31 -0500 (CDT)
Sender: gdr@cs.tamu.edu
To: "Bill Page" <bill.page1@synthesis.anikast.ca>
Subject: Re: [Axiom-mail] Spad and inductive types
References: <20070509070913.i7ql0dcf514w84c8@webmail.anikast.ca>
	<Pine.LNX.4.64.0705090845050.10998@gauss.cs.tamu.edu>
	<20070509102456.mlg1mjil6jdwsss8@webmail.anikast.ca>
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
In-Reply-To: <20070509102456.mlg1mjil6jdwsss8@webmail.anikast.ca>
Organization: Texas A&M University, Department of Computer Science
Date: 09 May 2007 09:53:31 -0500
Message-ID: <87abwef3pw.fsf@soliton.cs.tamu.edu>
Lines: 63
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Solaris 8 (1)
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 09 May 2007 15:30:23 -0000

"Bill Page" <bill.page1@synthesis.anikast.ca> writes:

| Quoting Gabriel Dos Reis <gdr@cs.tamu.edu>:
| 
| > On Wed, 9 May 2007, Bill Page wrote:
| >
| > [...]
| >
| > | > > ... in Haskell, by a kind of convenient abuse of notation
| > | > > (or polymorphism if you wish) 'MkInt' also denotes a
| > | > > function
| > | > >
| > | > >   MkInt: Int -> MkInt Int
| > | > >
| > | > > that creates an object of type 'MkInt Int' from an object
| > | > > in 'Int'. I think this is a potential source of confusion. |
| > | Probably I should have avoided the wording above that might
| > | (incorrectly) be interpreted as a slur against Haskell. Well, I
| > did not interepret it as a slur against Haskell.  However, it did
| > appear to me to be fundamentally incorrect to miss the core ideas of
| > algebraic data typea and how they lead to GADT:
| >
| >     data Expr where
| >       MkInt:: Integer -> Expr
| >       MkAdd:: Expr -> Expr -> Expr
| >       MkMul:: Expr -> Expr -> Expr
| >
| > That is all that is needed to define more operations on values of
| > type Expr.
| 
| I agree that GADT is important in the context of Haskell which has
| (in principle) a complete and formal semantics. But I do not think it
| is so interesting in Spad and Aldor which already has the full
| machinery of abstract data types.

I beg to disagree; and furthermore, I do believe you are wrong about
the core ideas here.

| If we want to add more operations
| on a given type, we have 'add inheritance', e.g.  NewExpr: ExprCat
| with ... = Expr add ... 

Except that now you have a distinct domain from Expr; that may be what
is desired in some situations.  But it most situations, and the one I'm
particularly concerned about, that is NOT what is desired.

| and even post-facto extension of domains in Aldor.

Please, notice that the situation is radially different in Aldor than
in Spad, and please also remember that my question has to do with
Spad, not Aldor.

| I can see however why this is interesting from the point of
| view of
| Boot. If Boot could be given a formal semantics like Haskell, then
| one might be much more confident of it's use to implement Spad
| and therefore ultimately confidence in the semantics of Spad. 

That is one aspect of it; another is simply that what is so simple in
Boot must remain in Spad; and yet another one is from practical
introduction to proramming with Spad point of view.  

-- Gaby



From MAILER-DAEMON Wed May 09 11:36:30 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HloDO-0001j2-Ie
	for mharc-axiom-mail@gnu.org; Wed, 09 May 2007 11:36:30 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HloDN-0001eJ-6N
	for axiom-mail@nongnu.org; Wed, 09 May 2007 11:36:29 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HloDL-0001YW-Ih
	for axiom-mail@nongnu.org; Wed, 09 May 2007 11:36:28 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HloDL-0001XR-9t
	for axiom-mail@nongnu.org; Wed, 09 May 2007 11:36:27 -0400
Received: from mailhost.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Hlo67-0007aP-SP
	for axiom-mail@nongnu.org; Wed, 09 May 2007 11:29:00 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id 7EDD846DE21;
	Wed,  9 May 2007 10:28:59 -0500 (CDT)
Date: Wed, 9 May 2007 10:30:19 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: Ralf Hemmecke <ralf@hemmecke.de>
Subject: Re: [Axiom-mail] Spad and inductive types
In-Reply-To: <4641E0FE.4000905@hemmecke.de>
Message-ID: <Pine.LNX.4.64.0705091027350.13286@gauss.cs.tamu.edu>
References: <20070509070913.i7ql0dcf514w84c8@webmail.anikast.ca>
	<Pine.LNX.4.64.0705090845050.10998@gauss.cs.tamu.edu>
	<4641E0FE.4000905@hemmecke.de>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: Solaris 8 (1)
Cc: 'Martin Rubey' <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 09 May 2007 15:36:29 -0000

On Wed, 9 May 2007, Ralf Hemmecke wrote:

| > Well, I did not interepret it as a slur against Haskell.  However, it did
| > appear to me to be fundamentally incorrect to miss the core ideas of
| > algebraic data typea and how they lead to GADT:  
| >     data Expr where
| >       MkInt:: Integer -> Expr
| >       MkAdd:: Expr -> Expr -> Expr
| >       MkMul:: Expr -> Expr -> Expr
| > 
| > That is all that is needed to define more operations on values of
| > type Expr.
| 
| Gaby, I think I must disagree with your last sentence. It might probably be
| correct for Haskell, because there is the pattern matching thing, but in
| general one would need also functions like
| 
| apply: (%, 'MkInt') -> Integer;
| apply: (%, 'MkAdd') -> %
| 
| case: (%, 'MkInt') -> Boolean;
| etc.
| 
| Accessor functions seem to be somewhat hidden in Haskell, but in Aldor they
| would have to be explicit.

Yes, you are right --  I implicitly assumed accessors (in terms of
pattern matching) or case expression in case of Spad or Aldor.

You're right that I should have spelled it out explicitly.

| Anyway, that GADT example above looks already surprisingly like Aldor
| (although it probably means something else --- what exactly?).

It means that Expr is a datatype with the data constructors listed
in the where clause, and only those.

I believe the core ideas are present in Boot and Aldor, but they have
not been made as explicit and concise as it could be.

-- Gaby



From MAILER-DAEMON Mon May 14 09:53:28 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HnazP-0000Mo-Ve
	for mharc-axiom-mail@gnu.org; Mon, 14 May 2007 09:53:28 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HmPVg-0006QH-KP
	for axiom-mail@nongnu.org; Fri, 11 May 2007 03:25:52 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HmPVg-0006Pb-31
	for axiom-mail@nongnu.org; Fri, 11 May 2007 03:25:52 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HmPVf-0006PP-Tq
	for axiom-mail@nongnu.org; Fri, 11 May 2007 03:25:51 -0400
Received: from smtp108.sbc.mail.mud.yahoo.com ([68.142.198.207])
	by monty-python.gnu.org with smtp (Exim 4.60)
	(envelope-from <sac85672@saclink.csus.edu>) id 1HmPOG-0000Uo-Qr
	for axiom-mail@nongnu.org; Fri, 11 May 2007 03:18:12 -0400
Received: (qmail 54084 invoked from network); 11 May 2007 07:17:01 -0000
Received: from unknown (HELO ?192.168.1.69?)
	(horsting1563@sbcglobal.net@71.142.200.0 with login)
	by smtp108.sbc.mail.mud.yahoo.com with SMTP; 11 May 2007 07:17:00 -0000
X-YMail-OSG: mjQu.dEVM1mbS1LlvDf6h0dBlM3FoRq0NvV3gRTSc5LGVxG6BcwUrdom_doNB7Z1LLnC2Eqy3Q--
From: Chris Horsting <sac85672@saclink.csus.edu>
To: axiom-mail@nongnu.org
Content-Type: text/plain
Organization: CSUS
Date: Fri, 11 May 2007 00:16:58 -0700
Message-Id: <1178867818.10969.2.camel@chris-desktop>
Mime-Version: 1.0
X-Mailer: Evolution 2.6.1 
Content-Transfer-Encoding: 7bit
X-detected-kernel: Genre and OS details not recognized.
X-Mailman-Approved-At: Mon, 14 May 2007 09:53:26 -0400
Subject: [Axiom-mail] calling Axiom form other programming Languages
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: horsting@csus.edu
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Fri, 11 May 2007 07:25:52 -0000

Hi,

I want to know if is possible to call axiom from other programs. My
school uses Webmathematica, which is runs on an Apache Tomcat and is
called using jsp tags.

Thanks
Chris




From MAILER-DAEMON Mon May 14 13:59:31 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HnepW-0004QJ-VQ
	for mharc-axiom-mail@gnu.org; Mon, 14 May 2007 13:59:30 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HnepV-0004Pk-7X
	for axiom-mail@nongnu.org; Mon, 14 May 2007 13:59:29 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HnepT-0004Or-8D
	for axiom-mail@nongnu.org; Mon, 14 May 2007 13:59:28 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HnepS-0004On-Np
	for axiom-mail@nongnu.org; Mon, 14 May 2007 13:59:26 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1Hnehf-0003lx-Jq
	for axiom-mail@nongnu.org; Mon, 14 May 2007 13:51:23 -0400
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1Hnehd-000091-NW; Mon, 14 May 2007 19:51:21 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1Hnehd-0002sK-L9; Mon, 14 May 2007 19:51:21 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: horsting@csus.edu, Kai Oliver Kaminski <kai.kaminski@gmx.de>
Subject: Re: [Axiom-mail] calling Axiom form other programming Languages
References: <1178867818.10969.2.camel@chris-desktop>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 14 May 2007 19:51:21 +0200
In-Reply-To: <1178867818.10969.2.camel@chris-desktop>
Message-ID: <9qk5vb8fae.fsf@aquin.mat.univie.ac.at>
Lines: 15
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 14 May 2007 17:59:29 -0000

Dear Chris,

Chris Horsting <sac85672@saclink.csus.edu> writes:

> I want to know if is possible to call axiom from other programs. My school
> uses Webmathematica, which is runs on an Apache Tomcat and is called using
> jsp tags.

Although I do not know personally how to do it, I'm quite sure that it is
possible.  Maybe Kai can help.  Very likely it also depends on the other
language, and how efficient communication needs to be.

What are you trying to achieve?

Martin




From MAILER-DAEMON Wed May 23 09:35:33 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hqr01-00018p-SH
	for mharc-axiom-mail@gnu.org; Wed, 23 May 2007 09:35:33 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hqr01-00018d-51
	for axiom-mail@nongnu.org; Wed, 23 May 2007 09:35:33 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hqqzz-00018R-JZ
	for axiom-mail@nongnu.org; Wed, 23 May 2007 09:35:31 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43)
	id 1Hqqzz-00018O-Cb; Wed, 23 May 2007 09:35:31 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1Hqqzx-0000zc-TR; Wed, 23 May 2007 09:35:31 -0400
Received: from joan.univie.ac.at ([131.130.3.110] helo=joan.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1Hqqzv-00013Y-BW; Wed, 23 May 2007 15:35:27 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by joan.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1Hqqzv-00050u-46; Wed, 23 May 2007 15:35:27 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: axiom-dev <axiom-developer@nongnu.org>, axiom-mail <axiom-mail@nongnu.org>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 23 May 2007 15:35:26 +0200
Message-ID: <9qabvv8xy9.fsf@aquin.mat.univie.ac.at>
Lines: 144
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="=-=-="
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: Cliff Yapp <smustudent1@yahoo.com>, Alasdair.McAndrew@vu.edu.au
Subject: [Axiom-mail] [ANN] new version of axiom mode for emacs.
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 23 May 2007 13:35:33 -0000

--=-=-=

Dear all,

after a day of hacking and with some help from Cliff and Jay (many thanks!) I
have a new version of axiom.el, which you find attached.  I'd be extremely
grateful for feedback!  Alasdair, is this usable for you?

To use it, put it into a directory where emacs can find it, gunzip it, say

  document axiom.el.pamphlet

to obtain documentation and source or

  notangle axiom.el.pamphlet > axiom.el

to obtain source only.  Then start (gnu) emacs and type

  M-x load-file

press return and type 
  
  axiom.el

possibly including the complete path.  To start a fresh axiom session type

  M-x axiom

Most things should come natural, here is a very short description of it's
functionality:

-------------------------------------------------------------------------------
M-x axiom 
  starts an axiom session or returns to an already started one.  We really
  should provide functionality to have several sessions in parallel, but I
  don't know how to do this.

M-up, M-down 
  moves the cursor to the previous or next input.

C-up/M-p, C-down/M-n 
  fetches the previous or next input.

M-k 
  copies the current input-output combination into the kill-ring.

S-up, S-down, S-left, S-right
  turns the cursor into a paint-brush.

M-x axiom-paint-face 
  changes the face of the paint-brush.

return 
  evaluates input.  If point is on a previous input, it overwrites old output
  ``nicely''.
-------------------------------------------------------------------------------

Changes:

  * I modified some keybindings and instead of axiom-mode one calls axiom now.

  * I provided support for painting.

  * by default, HyperDoc is started now.

  * I fixed bugs that positioned point incorrectly and screwed up overwriting
    old output.  Cliff: you said you fixed that already once.  Could you see
    whether you had a different axiom.el.pamphlet than provided on MathAction?

-------------------------------------------------------------------------------
ToDo:

* Testing: does it work with xemacs? does it work under MSwindows?

* the way we deal with system commands like )quit is unsatisfactory for two
  reasons:

  - we do not allow user interaction: )quit will quit without asking, but
    worse, )di op 1 will make emacs appear to hang. C-g get's everything back
    to normal.  Reason: )di op 1 will make axiom ask whether we really want a
    long list of operations.

  - (1+x)q will be parsed as )quit.  We do not check yet whether the first
    non-white space character is the open parenthesis.

* the underscore character does not work.  It should...

* the way we wait for output looks extremely dangerous to me:

(defun axiom-wait-for-output ()
  "Wait for output from the Axiom process.  Point is set at the end of the
  line."
  (while (and 
          axiom-waiting-for-output
          (not (search-backward ") -> " (- (point) 5) t)))
    (accept-process-output axiom-process))
  (sit-for 0 axiom-after-output-wait)
  (end-of-line))

  what if output contains ") -> " and we are unlucky?  Not sure whether this is
  a problem though.  In all other places, instead of ") -> " the regular
  expression axiom-prompt is used.  Shouldn't we do this here, too?  Isn't
  there a simpler way to look for output?

  In fact, it might make sense to keep the current output number in a variable
  -- that way we could also detect errors.

* It would be nice to give the output a different face, as in mmm-mode, but I'm
  a bit lazy.  Maybe today evening.

* S-return should overwrite old output while return should copy the input line
  at point and evaluate it at the bottom of the buffer.

* it would be important to have the possibility of deleting part or all of the
  buffer.  (Personally, I often have a buffer with a 100000 lines, which is a
  burden for emacs, it seems). By contrast, it is not necessary to provide
  functionality as stated in the section "Restarting and Re-evaluating - Kill
  and Restart Axiom without Erasing the Document" since such functionality is
  provided by axiom itself.

* it would be extremely nice to have command tab-completion, as when starting
  axiom in a shell.  (The polymake team would like to have this, for example.)
  Anybody knows how to go about this?

* undo should have sane behaviour, whatever that is.  Possibly, it should be
  restricted to the current input, but that might be too restrictive. (For
  example, if one has overwritten some important output by accident.)

* sending definitions from input files is still not possible.

* cleanup is certainly necessary.  I don't know elisp well enough.  I have no
  idea, for example, why   

   (end-of-line))

  in axiom-wait-for-output is necessary.  Really, every function should state
  in the docstring where point is supposed to be before and after execution.

  It is extremely important that this mode works reliably, and as it is
  currently, I wouldn't be surprised if it would screw up in weird
  circumstances.

Martin


--=-=-=
Content-Type: application/octet-stream
Content-Disposition: attachment; filename=axiom.el.pamphlet.gz
Content-Transfer-Encoding: base64

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
lIEXzdnFAAA=
--=-=-=--




From MAILER-DAEMON Thu May 24 03:07:18 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hr7Pq-0002ZX-0K
	for mharc-axiom-mail@gnu.org; Thu, 24 May 2007 03:07:18 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hr7Po-0002ZI-Ab
	for axiom-mail@nongnu.org; Thu, 24 May 2007 03:07:16 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hr7Pk-0002Z6-SX
	for axiom-mail@nongnu.org; Thu, 24 May 2007 03:07:15 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hr7Pk-0002Z3-Mx
	for axiom-mail@nongnu.org; Thu, 24 May 2007 03:07:12 -0400
Received: from ug-out-1314.google.com ([66.249.92.169])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <amca01@gmail.com>) id 1Hr7Pi-0004oB-G9
	for axiom-mail@nongnu.org; Thu, 24 May 2007 03:07:12 -0400
Received: by ug-out-1314.google.com with SMTP id j40so702209ugd
	for <axiom-mail@nongnu.org>; Thu, 24 May 2007 00:07:01 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed; d=gmail.com; s=beta;
	h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=nl4JC8YU/ZvufT8zEEqbsODz6VckdJLKDqDDjowPxKqTlxSm68hpLXBAitX9lVej7Wy16SrGdafDbXDgRjp8e2kfvEMsVwzTRlUVzuz1MFTXI5wd6EXv/7N91CW0XUoHb4ZPVkhMEGvBpWCpl0xL5Y2guHCUvZg1SY1I5t8Uw+g=
DomainKey-Signature: a=rsa-sha1; c=nofws; d=gmail.com; s=beta;
	h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=YQ9t/zyyB0ckWF8kFG354WcZ1+w17kzEqO63UwkpBDHm0qtv3aOKPkdpPkwugO8ywQLWxH7vmqjLp6jJqkgM+MeOUxxbnhQWzvq202PcfKVd4mCtlvemTyUgWnbn1PoeliZvyBe75fyU19Ti8V6SNTRUPzq2ajjcfPOKo8f0vHc=
Received: by 10.67.19.17 with SMTP id w17mr1961201ugi.1179990421482;
	Thu, 24 May 2007 00:07:01 -0700 (PDT)
Received: by 10.66.254.17 with HTTP; Thu, 24 May 2007 00:07:01 -0700 (PDT)
Message-ID: <1d67a53c0705240007x6b31c8echb086a0f3f4d1a0b1@mail.gmail.com>
Date: Thu, 24 May 2007 17:07:01 +1000
From: "Alasdair McAndrew" <amca01@gmail.com>
To: "Martin Rubey" <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
In-Reply-To: <9qhcq38ww2.fsf@aquin.mat.univie.ac.at>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_9722_23901117.1179990421448"
References: <1d67a53c0705230650td47288bv2362a7d4bd0b0868@mail.gmail.com>
	<9qhcq38ww2.fsf@aquin.mat.univie.ac.at>
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Cc: 
Subject: [Axiom-mail] Re: [Axiom-developer] Changing a variable type?
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 24 May 2007 07:07:16 -0000

------=_Part_9722_23901117.1179990421448
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Here's my attempts at the Chor-Rivest cryptosystem (an exercise in the use
of finite fields):

p:=7   -- these are the values used in the example in "Handbook of Applied
Cryptography" by Menezes at al
h:=4
f:POLY(PF p):=x^h+reduce(+,[(random(p-1)+1)*x^(i-1) for i in 0..p-1]) --
create a random monic polynomial of degree h
irreducible?(f)  -- test and repeat last two lines until "true"
F:=FFP(PF p,f)
x:=generator()$F
g:=random()$F;primitive?(g) -- repeat until "true"
d:=random(size()$F-2)
a:=[discreteLog(g,x+i) for i in 0..p-1]
c:=[(a.i+d)::ZMOD(size()$F-1) for i in 1..p] -- this is the public key
message:=[1,0,1,1,0,0,1]  -- each message block is of length p and must
contain h zeros
ct:=reduce(+,[message.i*c.i for i in 1..p])::ZMOD(size()$F-1)  -- this
number is the ciphertext
r:=ct-d*(dimension()$F::NNI)::ZMOD(ord)
u:=g^convert(r)

And now, this is the problem: to complete the decryption we have to solve
u+f over PF(p) - this can be done by simply evaluating u+f for all values of
PF(p).  But u and f are two different types...  where do I go from here?

Thanks,
Alasdair

On 23 May 2007 15:58:21 +0200, Martin Rubey <martin.rubey@univie.ac.at>
wrote:
>
> Dear Alasdair,
>
> (redirecting to axiom-math, where usage questions belong)
>
> "Alasdair McAndrew" <amca01@gmail.com> writes:
>
> > In experimenting with the Chor-Rivest knapsack cryptosystem, I have the
> > problem of adding two polynomials: one is the defining polynomial of the
> > field, and the other is a field element.
> >
> > But the command
> >
> > definingPolynomial()$F+u
>
> could you just send me the definition of F? (i.e., code)
>
> Martin
>
>

------=_Part_9722_23901117.1179990421448
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Here&#39;s my attempts at the Chor-Rivest cryptosystem (an exercise in the use of finite fields):<br><br><span style="font-family: courier new,monospace;">p:=7&nbsp;&nbsp; -- these are the values used in the example in &quot;Handbook of Applied Cryptography&quot; by Menezes at al
</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">h:=4</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">f:POLY(PF p):=x^h+reduce(+,[(random(p-1)+1)*x^(i-1) for i in 0..p-1]) -- create a random monic polynomial of degree h
</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">irreducible?(f)&nbsp; -- test and repeat last two lines until &quot;true&quot;</span><br style="font-family: courier new,monospace;">
<span style="font-family: courier new,monospace;">F:=FFP(PF p,f)</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">x:=generator()$F</span><br style="font-family: courier new,monospace;">
<span style="font-family: courier new,monospace;">g:=random()$F;primitive?(g) -- repeat until &quot;true&quot;</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">d:=random(size()$F-2)
</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">a:=[discreteLog(g,x+i) for i in 0..p-1]</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">
c:=[(a.i+d)::ZMOD(size()$F-1) for i in 1..p] -- this is the public key</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">message:=[1,0,1,1,0,0,1]&nbsp; -- each message block is of length p and must contain h zeros
</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">ct:=reduce(+,[message.i*c.i for i in 1..p])::ZMOD(size()$F-1)&nbsp; -- this number is the ciphertext</span><br style="font-family: courier new,monospace;">
<span style="font-family: courier new,monospace;">r:=ct-d*(dimension()$F::NNI)::ZMOD(ord)</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">u:=g^convert(r)</span><br><br>
And now, this is the problem: to complete the decryption we have to solve u+f over PF(p) - this can be done by simply evaluating u+f for all values of PF(p).&nbsp; But u and f are two different types...&nbsp; where do I go from here?
<br><br>Thanks,<br>Alasdair<br><br><div><span class="gmail_quote">On 23 May 2007 15:58:21 +0200, <b class="gmail_sendername">Martin Rubey</b> &lt;<a href="mailto:martin.rubey@univie.ac.at">martin.rubey@univie.ac.at</a>&gt; wrote:
</span><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">Dear Alasdair,<br><br>(redirecting to axiom-math, where usage questions belong)<br><br>
&quot;Alasdair McAndrew&quot; &lt;<a href="mailto:amca01@gmail.com">amca01@gmail.com</a>&gt; writes:<br><br>&gt; In experimenting with the Chor-Rivest knapsack cryptosystem, I have the<br>&gt; problem of adding two polynomials: one is the defining polynomial of the
<br>&gt; field, and the other is a field element.<br>&gt;<br>&gt; But the command<br>&gt;<br>&gt; definingPolynomial()$F+u<br><br>could you just send me the definition of F? (i.e., code)<br><br>Martin<br><br></blockquote>
</div><br>

------=_Part_9722_23901117.1179990421448--



From MAILER-DAEMON Thu May 24 04:32:52 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hr8ke-0008IH-Sb
	for mharc-axiom-mail@gnu.org; Thu, 24 May 2007 04:32:52 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hr8kd-0008I3-9q
	for axiom-mail@nongnu.org; Thu, 24 May 2007 04:32:51 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hr8kZ-0008Hq-NN
	for axiom-mail@nongnu.org; Thu, 24 May 2007 04:32:50 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hr8kZ-0008Hn-KW
	for axiom-mail@nongnu.org; Thu, 24 May 2007 04:32:47 -0400
Received: from mail183.messagelabs.com ([62.231.131.67])
	by monty-python.gnu.org with smtp (Exim 4.60)
	(envelope-from <themos@nag.co.uk>) id 1Hr8kY-0004mr-0F
	for axiom-mail@nongnu.org; Thu, 24 May 2007 04:32:46 -0400
X-VirusChecked: Checked
X-Env-Sender: themos@nag.co.uk
X-Msg-Ref: server-15.tower-183.messagelabs.com!1179995555!6463265!1
X-StarScan-Version: 5.5.10.7.1; banners=nag.co.uk,-,-
X-Originating-IP: [62.231.145.242]
Received: (qmail 6112 invoked from network); 24 May 2007 08:32:35 -0000
Received: from nagmx1.nag.co.uk (HELO nagmx1.nag.co.uk) (62.231.145.242)
	by server-15.tower-183.messagelabs.com with SMTP;
	24 May 2007 08:32:35 -0000
Received: from loanamd6.nag.co.uk (loanamd6.nag.co.uk [192.156.217.152])
	by nagmx1.nag.co.uk (Postfix) with ESMTP id 2FB3C12015F
	for <axiom-mail@nongnu.org>; Thu, 24 May 2007 09:32:35 +0100 (BST)
From: Themos Tsikas <themos@nag.co.uk>
Organization: NAG Ltd
To: axiom-mail@nongnu.org
Subject: Re: [Axiom-mail] Re: [Axiom-developer] Changing a variable type?
Date: Thu, 24 May 2007 08:32:32 +0000
User-Agent: KMail/1.9.1
References: <1d67a53c0705230650td47288bv2362a7d4bd0b0868@mail.gmail.com>
	<9qhcq38ww2.fsf@aquin.mat.univie.ac.at>
	<1d67a53c0705240007x6b31c8echb086a0f3f4d1a0b1@mail.gmail.com>
In-Reply-To: <1d67a53c0705240007x6b31c8echb086a0f3f4d1a0b1@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-15"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200705240832.33492.themos@nag.co.uk>
X-detected-kernel: Linux 2.4-2.6
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: themos@nag.co.uk
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 24 May 2007 08:32:51 -0000

Is this any good?

(u::POLY F)+(f::POLY F)

________________________________________________________________________
The Numerical Algorithms Group Ltd is a company registered in England
and Wales with company number 1249803. The registered office is:
Wilkinson House, Jordan Hill Road, Oxford OX2 8DR, United Kingdom.

This e-mail has been scanned for all viruses by Star. The service is
powered by MessageLabs. 
________________________________________________________________________



From MAILER-DAEMON Thu May 24 04:46:41 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hr8xz-0007rS-67
	for mharc-axiom-mail@gnu.org; Thu, 24 May 2007 04:46:39 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hr8xv-0007pz-65
	for axiom-mail@nongnu.org; Thu, 24 May 2007 04:46:35 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hr8xs-0007od-2Z
	for axiom-mail@nongnu.org; Thu, 24 May 2007 04:46:33 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hr8xr-0007oR-Pn
	for axiom-mail@nongnu.org; Thu, 24 May 2007 04:46:31 -0400
Received: from ug-out-1314.google.com ([66.249.92.173])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <amca01@gmail.com>) id 1Hr8xq-0006Bk-Am
	for axiom-mail@nongnu.org; Thu, 24 May 2007 04:46:30 -0400
Received: by ug-out-1314.google.com with SMTP id j40so719502ugd
	for <axiom-mail@nongnu.org>; Thu, 24 May 2007 01:46:27 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed; d=gmail.com; s=beta;
	h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=ZQg7AsBxhIAk5FBmvUH0KIiF/7+O/zdqJAVQfktHrMeVZNQbGWzaZXKhYwepL1ua0YeU4GYoKCR1Vmuwk67y9jh/m+DEktW9XVb/n1120Hk9KCfgiB+Oo/PXTSIbICKZLu7vPHtRN7hZv+d2mRH+1KMNqJxFOYsoD7KpF201Mtw=
DomainKey-Signature: a=rsa-sha1; c=nofws; d=gmail.com; s=beta;
	h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=CTtqXByWdT4J8AGloAykOFQLDXJiadUtwYXkW3n/WZaEquDOor/1bz3778fdgn9mJ8HyLIUDwDXMe3O7UceypXGoDQkr5gKcgLSn++OoarTUZTqlrX8aNoWgE+QMM0Q1rgshpweAiJaDovXvzdCxeZ0LJ5DUtsR19vjUAV9FmbY=
Received: by 10.67.29.7 with SMTP id g7mr2022855ugj.1179996387218;
	Thu, 24 May 2007 01:46:27 -0700 (PDT)
Received: by 10.66.254.17 with HTTP; Thu, 24 May 2007 01:46:27 -0700 (PDT)
Message-ID: <1d67a53c0705240146r529e1f91pe0fbea21129887e9@mail.gmail.com>
Date: Thu, 24 May 2007 18:46:27 +1000
From: "Alasdair McAndrew" <amca01@gmail.com>
To: themos@nag.co.uk, axiom-mail@nongnu.org
Subject: Re: [Axiom-mail] Re: [Axiom-developer] Changing a variable type?
In-Reply-To: <200705240832.33492.themos@nag.co.uk>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_10139_11240324.1179996387184"
References: <1d67a53c0705230650td47288bv2362a7d4bd0b0868@mail.gmail.com>
	<9qhcq38ww2.fsf@aquin.mat.univie.ac.at>
	<1d67a53c0705240007x6b31c8echb086a0f3f4d1a0b1@mail.gmail.com>
	<200705240832.33492.themos@nag.co.uk>
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Cc: 
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 24 May 2007 08:46:36 -0000

------=_Part_10139_11240324.1179996387184
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Thanks, Themos, for your suggestion, but it doesn't work.  What I'd like is
to make u into a polynomial over the field PF p, but

u::POLY PF p

produces the error

 >> Error detected within library code:
   coerce: element doesn't belong to smaller field

Currently u is 3%C^2  + 2%C + 4, but I want to turn it into 3x^2+2x+4 over
PF p.

Thanks!
Alasdair

On 5/24/07, Themos Tsikas <themos@nag.co.uk> wrote:
>
> Is this any good?
>
> (u::POLY F)+(f::POLY F)
>
> ________________________________________________________________________
> The Numerical Algorithms Group Ltd is a company registered in England
> and Wales with company number 1249803. The registered office is:
> Wilkinson House, Jordan Hill Road, Oxford OX2 8DR, United Kingdom.
>
> This e-mail has been scanned for all viruses by Star. The service is
> powered by MessageLabs.
> ________________________________________________________________________
>
>
> _______________________________________________
> Axiom-mail mailing list
> Axiom-mail@nongnu.org
> http://lists.nongnu.org/mailman/listinfo/axiom-mail
>

------=_Part_10139_11240324.1179996387184
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Thanks, Themos, for your suggestion, but it doesn&#39;t work.&nbsp; What I&#39;d like is to make u into a polynomial over the field PF p, but<br><br>u::POLY PF p<br><br>produces the error<br><br>&nbsp;&gt;&gt; Error detected within library code:
<br>&nbsp;&nbsp; coerce: element doesn&#39;t belong to smaller field<br><br>Currently u is 3%C^2&nbsp; + 2%C + 4, but I want to turn it into 3x^2+2x+4 over PF p.<br><br>Thanks!<br>Alasdair<br><br><div><span class="gmail_quote">On 5/24/07, 
<b class="gmail_sendername">Themos Tsikas</b> &lt;<a href="mailto:themos@nag.co.uk">themos@nag.co.uk</a>&gt; wrote:</span><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
Is this any good?<br><br>(u::POLY F)+(f::POLY F)<br><br>________________________________________________________________________<br>The Numerical Algorithms Group Ltd is a company registered in England<br>and Wales with company number 1249803. The registered office is:
<br>Wilkinson House, Jordan Hill Road, Oxford OX2 8DR, United Kingdom.<br><br>This e-mail has been scanned for all viruses by Star. The service is<br>powered by MessageLabs.<br>________________________________________________________________________
<br><br><br>_______________________________________________<br>Axiom-mail mailing list<br><a href="mailto:Axiom-mail@nongnu.org">Axiom-mail@nongnu.org</a><br><a href="http://lists.nongnu.org/mailman/listinfo/axiom-mail">http://lists.nongnu.org/mailman/listinfo/axiom-mail
</a><br></blockquote></div><br>

------=_Part_10139_11240324.1179996387184--



From MAILER-DAEMON Thu May 24 05:15:55 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hr9QJ-0001nK-N7
	for mharc-axiom-mail@gnu.org; Thu, 24 May 2007 05:15:55 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hr9QH-0001mf-NR
	for axiom-mail@nongnu.org; Thu, 24 May 2007 05:15:53 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hr9QF-0001m0-O3
	for axiom-mail@nongnu.org; Thu, 24 May 2007 05:15:53 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hr9QF-0001lw-Hp
	for axiom-mail@nongnu.org; Thu, 24 May 2007 05:15:51 -0400
Received: from mail183.messagelabs.com ([62.231.131.67])
	by monty-python.gnu.org with smtp (Exim 4.60)
	(envelope-from <themos@nag.co.uk>) id 1Hr9QE-0000si-Bx
	for axiom-mail@nongnu.org; Thu, 24 May 2007 05:15:50 -0400
X-VirusChecked: Checked
X-Env-Sender: themos@nag.co.uk
X-Msg-Ref: server-7.tower-183.messagelabs.com!1179998146!771170!1
X-StarScan-Version: 5.5.10.7.1; banners=nag.co.uk,-,-
X-Originating-IP: [62.231.145.242]
Received: (qmail 6528 invoked from network); 24 May 2007 09:15:47 -0000
Received: from nagmx1.nag.co.uk (HELO nagmx1.nag.co.uk) (62.231.145.242)
	by server-7.tower-183.messagelabs.com with SMTP;
	24 May 2007 09:15:47 -0000
Received: from loanamd6.nag.co.uk (loanamd6.nag.co.uk [192.156.217.152])
	by nagmx1.nag.co.uk (Postfix) with ESMTP id 9AF1A120160
	for <axiom-mail@nongnu.org>; Thu, 24 May 2007 10:15:46 +0100 (BST)
From: Themos Tsikas <themos@nag.co.uk>
Organization: NAG Ltd
To: axiom-mail@nongnu.org
Subject: Re: [Axiom-mail] Re: [Axiom-developer] Changing a variable type?
Date: Thu, 24 May 2007 09:15:44 +0000
User-Agent: KMail/1.9.1
References: <1d67a53c0705230650td47288bv2362a7d4bd0b0868@mail.gmail.com>
	<200705240832.33492.themos@nag.co.uk>
	<1d67a53c0705240146r529e1f91pe0fbea21129887e9@mail.gmail.com>
In-Reply-To: <1d67a53c0705240146r529e1f91pe0fbea21129887e9@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-15"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200705240915.45206.themos@nag.co.uk>
X-detected-kernel: Linux 2.4-2.6
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: themos@nag.co.uk
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 24 May 2007 09:15:53 -0000

On Thursday 24 May 2007 08:46, Alasdair McAndrew wrote:

> Currently u is 3%C^2  + 2%C + 4, but I want to turn it into 3x^2+2x+4 over
> PF p.

Use the coordinates function to get the coefficients and then compose the 
polynomial?


(90) -> u

            3
   (90)  3%A  + 4%A + 6
     Type: FiniteFieldExtensionByPolynomial(PrimeField 7,?**4+?**3+?*?+4*?+1)
(91) -> coordinates u

   (91)  [6,4,0,3]
                                                    Type: Vector PrimeField 7

________________________________________________________________________
The Numerical Algorithms Group Ltd is a company registered in England
and Wales with company number 1249803. The registered office is:
Wilkinson House, Jordan Hill Road, Oxford OX2 8DR, United Kingdom.

This e-mail has been scanned for all viruses by Star. The service is
powered by MessageLabs. 
________________________________________________________________________



From MAILER-DAEMON Thu May 24 06:54:05 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HrAxJ-00022i-Jc
	for mharc-axiom-mail@gnu.org; Thu, 24 May 2007 06:54:05 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HrAxI-00022I-CK
	for axiom-mail@nongnu.org; Thu, 24 May 2007 06:54:04 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HrAxG-00021Y-IR
	for axiom-mail@nongnu.org; Thu, 24 May 2007 06:54:03 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HrAxG-00021S-9K
	for axiom-mail@nongnu.org; Thu, 24 May 2007 06:54:02 -0400
Received: from ug-out-1314.google.com ([66.249.92.168])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <amca01@gmail.com>) id 1HrAxF-0002mF-Kc
	for axiom-mail@nongnu.org; Thu, 24 May 2007 06:54:02 -0400
Received: by ug-out-1314.google.com with SMTP id a2so738225ugf
	for <axiom-mail@nongnu.org>; Thu, 24 May 2007 03:54:00 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed; d=gmail.com; s=beta;
	h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=AuZpcHAI3Ndyj+k8bx/2dZfwoVo1mv5RXxliyaWNyTGUb685OdH3YQX4U4nD3PIbFuPaWQ+aqaCI9dSiP0CVnIaPZPuAxqhn7QTYKaY1lcJmsuOEKExJOcIK8eNhse5ZJalZKyPsciSNeFBMEUpP1vV/mafml0JtdpQXy5fzsSk=
DomainKey-Signature: a=rsa-sha1; c=nofws; d=gmail.com; s=beta;
	h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=W8ldIklzbHjK1vfBYiI1MgceT2tYOp1Maag7XuaLfOyHMXBKJF1jCTCIvtb1VmadgS7/ZCPJ87hCsq8yrMhHqi3PxCtPiZTG36o0y0MazpZH1nddtAU1BvSdGW40rwRKYWI0JRCK4YVwvOyIYvgpXC0xQTEX8dA3BOab2E+awXM=
Received: by 10.67.90.19 with SMTP id s19mr2047503ugl.1180004040441;
	Thu, 24 May 2007 03:54:00 -0700 (PDT)
Received: by 10.66.254.17 with HTTP; Thu, 24 May 2007 03:54:00 -0700 (PDT)
Message-ID: <1d67a53c0705240354g1e7038afs41430ab643823d0b@mail.gmail.com>
Date: Thu, 24 May 2007 20:54:00 +1000
From: "Alasdair McAndrew" <amca01@gmail.com>
To: themos@nag.co.uk, axiom-mail@nongnu.org
Subject: Re: [Axiom-mail] Re: [Axiom-developer] Changing a variable type?
In-Reply-To: <200705240915.45206.themos@nag.co.uk>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_10793_31110604.1180004040372"
References: <1d67a53c0705230650td47288bv2362a7d4bd0b0868@mail.gmail.com>
	<200705240832.33492.themos@nag.co.uk>
	<1d67a53c0705240146r529e1f91pe0fbea21129887e9@mail.gmail.com>
	<200705240915.45206.themos@nag.co.uk>
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Cc: 
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 24 May 2007 10:54:04 -0000

------=_Part_10793_31110604.1180004040372
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Yes, I will be able to use that - I didn't know about the "coordinates"
command.  Thank you very much!

cheers,
Alasdair

On 5/24/07, Themos Tsikas <themos@nag.co.uk> wrote:
>
> On Thursday 24 May 2007 08:46, Alasdair McAndrew wrote:
>
> > Currently u is 3%C^2  + 2%C + 4, but I want to turn it into 3x^2+2x+4
> over
> > PF p.
>
> Use the coordinates function to get the coefficients and then compose the
> polynomial?
>
>
> (90) -> u
>
>             3
>    (90)  3%A  + 4%A + 6
>      Type: FiniteFieldExtensionByPolynomial(PrimeField
> 7,?**4+?**3+?*?+4*?+1)
> (91) -> coordinates u
>
>    (91)  [6,4,0,3]
>                                                     Type: Vector
> PrimeField 7
>
> ________________________________________________________________________
> The Numerical Algorithms Group Ltd is a company registered in England
> and Wales with company number 1249803. The registered office is:
> Wilkinson House, Jordan Hill Road, Oxford OX2 8DR, United Kingdom.
>
> This e-mail has been scanned for all viruses by Star. The service is
> powered by MessageLabs.
> ________________________________________________________________________
>
>
> _______________________________________________
> Axiom-mail mailing list
> Axiom-mail@nongnu.org
> http://lists.nongnu.org/mailman/listinfo/axiom-mail
>

------=_Part_10793_31110604.1180004040372
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Yes, I will be able to use that - I didn&#39;t know about the &quot;coordinates&quot; command.&nbsp; Thank you very much!<br><br>cheers,<br>Alasdair<br><br><div><span class="gmail_quote">On 5/24/07, <b class="gmail_sendername">
Themos Tsikas</b> &lt;<a href="mailto:themos@nag.co.uk">themos@nag.co.uk</a>&gt; wrote:</span><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
On Thursday 24 May 2007 08:46, Alasdair McAndrew wrote:<br><br>&gt; Currently u is 3%C^2&nbsp;&nbsp;+ 2%C + 4, but I want to turn it into 3x^2+2x+4 over<br>&gt; PF p.<br><br>Use the coordinates function to get the coefficients and then compose the
<br>polynomial?<br><br><br>(90) -&gt; u<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3<br>&nbsp;&nbsp; (90)&nbsp;&nbsp;3%A&nbsp;&nbsp;+ 4%A + 6<br>&nbsp;&nbsp;&nbsp;&nbsp; Type: FiniteFieldExtensionByPolynomial(PrimeField 7,?**4+?**3+?*?+4*?+1)<br>(91) -&gt; coordinates u<br><br>&nbsp;&nbsp; (91)&nbsp;&nbsp;[6,4,0,3]
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Type: Vector PrimeField 7<br><br>________________________________________________________________________<br>The Numerical Algorithms Group Ltd is a company registered in England
<br>and Wales with company number 1249803. The registered office is:<br>Wilkinson House, Jordan Hill Road, Oxford OX2 8DR, United Kingdom.<br><br>This e-mail has been scanned for all viruses by Star. The service is<br>powered by MessageLabs.
<br>________________________________________________________________________<br><br><br>_______________________________________________<br>Axiom-mail mailing list<br><a href="mailto:Axiom-mail@nongnu.org">Axiom-mail@nongnu.org
</a><br><a href="http://lists.nongnu.org/mailman/listinfo/axiom-mail">http://lists.nongnu.org/mailman/listinfo/axiom-mail</a><br></blockquote></div><br>

------=_Part_10793_31110604.1180004040372--



From MAILER-DAEMON Thu May 24 06:54:10 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HrAxO-00025D-Py
	for mharc-axiom-mail@gnu.org; Thu, 24 May 2007 06:54:10 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HrAxM-000245-0c
	for axiom-mail@nongnu.org; Thu, 24 May 2007 06:54:08 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HrAxL-00023b-18
	for axiom-mail@nongnu.org; Thu, 24 May 2007 06:54:07 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43)
	id 1HrAxK-00023P-QW; Thu, 24 May 2007 06:54:06 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>)
	id 1HrAxK-0002mx-1s; Thu, 24 May 2007 06:54:06 -0400
Received: from [193.170.38.119] (hemmecke@woodpecker.risc.uni-linz.ac.at
	[193.170.38.119]) (authenticated bits=0)
	by athena.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with ESMTP id
	l4OAs3kj011773
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Thu, 24 May 2007 12:54:03 +0200
Message-ID: <46556ECA.9050308@hemmecke.de>
Date: Thu, 24 May 2007 12:54:02 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.0 (X11/20070326)
MIME-Version: 1.0
To: Martin Rubey <martin.rubey@univie.ac.at>
Subject: Re: [Axiom-mail] [ANN] new version of axiom mode for emacs.
References: <9qabvv8xy9.fsf@aquin.mat.univie.ac.at>
In-Reply-To: <9qabvv8xy9.fsf@aquin.mat.univie.ac.at>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: Linux 2.4-2.6
Cc: axiom-dev <axiom-developer@nongnu.org>, Cliff Yapp <smustudent1@yahoo.com>,
	Alasdair.McAndrew@vu.edu.au, axiom-mail <axiom-mail@nongnu.org>
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 24 May 2007 10:54:08 -0000

Hi,

Unfortunately, axiom.el is not usable in XEmacs. Here is a translation 
of the offending key definition. The definitions given below are 
compatible between Emacs and XEmacs.

(define-key axiom-mode-map [(meta up)] 'axiom-previous-input)
(define-key axiom-mode-map [(meta down)] 'axiom-next-input)

(define-key axiom-mode-map [(shift up)] 'axiom-paint-previous-line)
(define-key axiom-mode-map [(shift down)] 'axiom-paint-next-line)
(define-key axiom-mode-map [(shift left)] 'axiom-paint-previous-char)
(define-key axiom-mode-map [(shift right)] 'axiom-paint-next-char)

But there is more...

When I start M-x axiom from within XEmacs, I see

(1) ->  ^M(1) ->

And if I type the famous 1+1 then my cursor jumps right on the ^ of the 
above given line and my status line says:

cannot support overlay 'modification-hooks property under XEmacs

So XEmacs users are left out with your mode. :-(

On 05/23/2007 03:35 PM, Martin Rubey wrote:
> * it would be extremely nice to have command tab-completion, as when starting
>   axiom in a shell.  (The polymake team would like to have this, for example.)
>   Anybody knows how to go about this?

A simple and stupid way is, to extract (by hand) all relevant Axiom 
identifiers and put them into axiom.el then write a routine to use this 
list. Of course that is not good if somebody changes the axiom library, 
but until then it might serve quite well.

Ralf



From MAILER-DAEMON Thu May 24 11:31:57 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HrFID-000773-JZ
	for mharc-axiom-mail@gnu.org; Thu, 24 May 2007 11:31:57 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HrFIC-00073d-CU
	for axiom-mail@nongnu.org; Thu, 24 May 2007 11:31:56 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HrFIA-00070G-Td
	for axiom-mail@nongnu.org; Thu, 24 May 2007 11:31:56 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HrFIA-000708-NK
	for axiom-mail@nongnu.org; Thu, 24 May 2007 11:31:54 -0400
Received: from smtp-vbr2.xs4all.nl ([194.109.24.22])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <soemraws@xs4all.nl>) id 1HrFIA-0005x9-5Q
	for axiom-mail@nongnu.org; Thu, 24 May 2007 11:31:54 -0400
Received: from blackstar (oemrawsingh.xs4all.nl [213.84.4.243])
	by smtp-vbr2.xs4all.nl (8.13.8/8.13.8) with SMTP id l4OFVkus075517
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <axiom-mail@nongnu.org>; Thu, 24 May 2007 17:31:46 +0200 (CEST)
	(envelope-from soemraws@xs4all.nl)
Received: by blackstar (sSMTP sendmail emulation);
	Thu, 24 May 2007 17:31:42 +0200
From: "Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl>
Date: Thu, 24 May 2007 17:31:42 +0200
To: axiom-mail@nongnu.org
Message-ID: <20070524153142.GA8434@blackstar.oemrawsingh.xs4all.nl>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.13 (2006-08-11)
X-Virus-Scanned: by XS4ALL Virus Scanner
X-detected-kernel: FreeBSD 4.6-4.9
Subject: [Axiom-mail] comparison operators and %pi
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 24 May 2007 15:31:56 -0000

Hi guys,

I just tried axiom today for the first time, since it appears quite
powerful. This of course means I'm a total newbie, so I've tried searching
for the problem that I have through the archives, without luck.

I'm trying to define a piecewise function, and I didn't manage. I could
track the problem down to this expression in the predicate: x < %pi.

This will simply not evaluate when I call the function.
If I just type in:
1 < %pi
I get the following message:

   Loading /usr/lib/axiom-20050901/algebra/HACKPI.o for domain Pi 
   Loading /usr/lib/axiom-20050901/algebra/UPMP.o for package 
      UnivariatePolynomialMultiplicationPackage 
   There are 4 exposed and 1 unexposed library operations named < 
      having 2 argument(s) but none was determined to be applicable. 
      Use HyperDoc Browse, or issue
                                )display op <
      to learn more about the available operations. Perhaps 
      package-calling the operation or using coercions on the arguments
      will allow you to apply the operation.
 
   Cannot find a definition or applicable library operation named < 
      with argument type(s) 
                               PositiveInteger
                                     Pi
      
      Perhaps you should use "@" to indicate the required return type, 
      or "$" to specify which version of the function you need.

So when I try to evaluate the function at some integer point, I get this
same message. The same holds for a Fraction Integer.

However, Float (1.1 < %pi) and AlgebraicNumber (sqrt(2) < %pi) work
properly. Nevertheless, I want to evaluate the function at any point and get
a symbolic answer instead of Float->Float. What can I do?


Thanks a lot!

Sumant



From MAILER-DAEMON Thu May 24 11:54:42 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HrFeE-000698-F3
	for mharc-axiom-mail@gnu.org; Thu, 24 May 2007 11:54:42 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HrFeC-00067g-OX
	for axiom-mail@nongnu.org; Thu, 24 May 2007 11:54:40 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HrFeB-00067I-89
	for axiom-mail@nongnu.org; Thu, 24 May 2007 11:54:40 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HrFeB-00067F-4I
	for axiom-mail@nongnu.org; Thu, 24 May 2007 11:54:39 -0400
Received: from mail35.messagelabs.com ([62.231.131.195])
	by monty-python.gnu.org with smtp (Exim 4.60)
	(envelope-from <themos@nag.co.uk>) id 1HrFeA-0000V5-IO
	for axiom-mail@nongnu.org; Thu, 24 May 2007 11:54:38 -0400
X-VirusChecked: Checked
X-Env-Sender: themos@nag.co.uk
X-Msg-Ref: server-3.tower-35.messagelabs.com!1180022076!470676!1
X-StarScan-Version: 5.5.10.7.1; banners=nag.co.uk,-,-
X-Originating-IP: [62.231.145.242]
Received: (qmail 12584 invoked from network); 24 May 2007 15:54:36 -0000
Received: from nagmx1.nag.co.uk (HELO nagmx1.nag.co.uk) (62.231.145.242)
	by server-3.tower-35.messagelabs.com with SMTP;
	24 May 2007 15:54:36 -0000
Received: from loanamd6.nag.co.uk (loanamd6.nag.co.uk [192.156.217.152])
	by nagmx1.nag.co.uk (Postfix) with ESMTP id 6216B12015F
	for <axiom-mail@nongnu.org>; Thu, 24 May 2007 16:54:39 +0100 (BST)
From: Themos Tsikas <themos@nag.co.uk>
Organization: NAG Ltd
To: axiom-mail@nongnu.org
Subject: Re: [Axiom-mail] comparison operators and %pi
Date: Thu, 24 May 2007 15:54:35 +0000
User-Agent: KMail/1.9.1
References: <20070524153142.GA8434@blackstar.oemrawsingh.xs4all.nl>
In-Reply-To: <20070524153142.GA8434@blackstar.oemrawsingh.xs4all.nl>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200705241554.36039.themos@nag.co.uk>
X-detected-kernel: Linux 2.4-2.6
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: themos@nag.co.uk
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 24 May 2007 15:54:40 -0000

try (numeric %pi) instead of %pi


________________________________________________________________________
The Numerical Algorithms Group Ltd is a company registered in England
and Wales with company number 1249803. The registered office is:
Wilkinson House, Jordan Hill Road, Oxford OX2 8DR, United Kingdom.

This e-mail has been scanned for all viruses by Star. The service is
powered by MessageLabs. 
________________________________________________________________________



From MAILER-DAEMON Thu May 24 12:06:39 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HrFpn-0003mE-8B
	for mharc-axiom-mail@gnu.org; Thu, 24 May 2007 12:06:39 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HrFpl-0003lR-IR
	for axiom-mail@nongnu.org; Thu, 24 May 2007 12:06:37 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HrFpl-0003kx-1R
	for axiom-mail@nongnu.org; Thu, 24 May 2007 12:06:37 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HrFpk-0003kr-NX
	for axiom-mail@nongnu.org; Thu, 24 May 2007 12:06:36 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1HrFpj-0001r6-OV
	for axiom-mail@nongnu.org; Thu, 24 May 2007 12:06:36 -0400
Received: from joan.univie.ac.at ([131.130.3.110] helo=joan.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HrFpi-00007v-E2; Thu, 24 May 2007 18:06:34 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by joan.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HrFpi-00084r-Cx; Thu, 24 May 2007 18:06:34 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: "Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl>
Subject: Re: [Axiom-mail] comparison operators and %pi
References: <20070524153142.GA8434@blackstar.oemrawsingh.xs4all.nl>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 24 May 2007 18:06:33 +0200
In-Reply-To: <20070524153142.GA8434@blackstar.oemrawsingh.xs4all.nl>
Message-ID: <9qfy5myzna.fsf@aquin.mat.univie.ac.at>
Lines: 66
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 24 May 2007 16:06:37 -0000

"Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl> writes:

> I just tried axiom today for the first time, since it appears quite
> powerful. This of course means I'm a total newbie, so I've tried searching
> for the problem that I have through the archives, without luck.

welcome, and do not hesitate to ask!  I highly recommend the axiom book by
Jenks and Sutor as first reading, by the way.  What

> I'm trying to define a piecewise function, and I didn't manage. I could track
> the problem down to this expression in the predicate: x < %pi.

Note that (unfortunately) if you are dealing with things like trigonometry %pi,
you are often confined to the domain "Expression Integer", which is currently
not very powerful in axiom.

Most importantly:

 the operation "<" does not use the "mathematical" ordering in Expression
 Integer!  In fact, it wouldn't make sense anyway, think of "cos x < 0", and
 currently we do not have a domain for "constant" expressions, I believe. (But
 we certainly should).  In particular, in Expression Integer, you have "%pi <
 %e" evaluate to true:

(1) -> %pi < %e

   (1)  true
                                                                Type: Boolean
 What you want is to compare numerically:

(2) -> %pi::Float < %e

   (2)  false

(3) -> 1::Float < %pi

   (3)  true
                                                                Type: Boolean
(4) -> 1.0 < %pi

   (4)  true
                                                                Type: Boolean

> However, Float (1.1 < %pi) and AlgebraicNumber (sqrt(2) < %pi) work
> properly. Nevertheless, I want to evaluate the function at any point and get
> a symbolic answer instead of Float->Float. What can I do?

maybe you want something like

(9) ->   less(a, b) == a::Expression Float::Float < b::Expression Float::Float
   Compiled code for less has been cleared.
   1 old definition(s) deleted for function or rule less 
                                                                   Type: Void
(10) -> less(sin %e, %pi)
   Compiling function less with type (Expression Integer,Pi) -> Boolean
      
   (10)  true
                                                                Type: Boolean

?

(The additional coercion to Expression Float is necessary, since the
interpreter is too stupid to convert %e directly to float, unfortunately.)


Martin




From MAILER-DAEMON Thu May 24 13:44:40 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HrHMe-0005qC-2M
	for mharc-axiom-mail@gnu.org; Thu, 24 May 2007 13:44:40 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HrHMc-0005p7-FA
	for axiom-mail@nongnu.org; Thu, 24 May 2007 13:44:38 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HrHMb-0005ob-TL
	for axiom-mail@nongnu.org; Thu, 24 May 2007 13:44:38 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HrHMb-0005oT-QV
	for axiom-mail@nongnu.org; Thu, 24 May 2007 13:44:37 -0400
Received: from smtp-vbr9.xs4all.nl ([194.109.24.29])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <soemraws@xs4all.nl>) id 1HrHMb-0000UC-Bl
	for axiom-mail@nongnu.org; Thu, 24 May 2007 13:44:37 -0400
Received: from blackstar (oemrawsingh.xs4all.nl [213.84.4.243])
	by smtp-vbr9.xs4all.nl (8.13.8/8.13.8) with SMTP id l4OHiaZN046411
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <axiom-mail@nongnu.org>; Thu, 24 May 2007 19:44:36 +0200 (CEST)
	(envelope-from soemraws@xs4all.nl)
Received: by blackstar (sSMTP sendmail emulation);
	Thu, 24 May 2007 19:44:28 +0200
From: "Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl>
Date: Thu, 24 May 2007 19:44:28 +0200
To: axiom-mail@nongnu.org
Subject: Re: [Axiom-mail] comparison operators and %pi
Message-ID: <20070524174428.GA8844@blackstar.oemrawsingh.xs4all.nl>
Mail-Followup-To: axiom-mail@nongnu.org
References: <20070524153142.GA8434@blackstar.oemrawsingh.xs4all.nl>
	<9qfy5myzna.fsf@aquin.mat.univie.ac.at>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <9qfy5myzna.fsf@aquin.mat.univie.ac.at>
User-Agent: Mutt/1.5.13 (2006-08-11)
X-Virus-Scanned: by XS4ALL Virus Scanner
X-detected-kernel: FreeBSD 4.6-4.9
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 24 May 2007 17:44:39 -0000

Hi,

Thank you for your answer! Apparently I fell immediately into a hairy bit
there...

I just find this very strange:
(1) -> %e

   (1)  %e
                                                     Type: Expression Integer
(2) -> %pi

   (2)  %pi
                                                                     Type: Pi

Why is %e of type Expression Integer, while %pi is of type Pi? Is there some
deeper reason why Pi is its own type?

Anyway, your answer was very helpful, and so was Themos': numeric(%pi) works
equally well.

Thanks again!

Sumant



On Thu, May 24, 2007 at 06:06:33PM +0200, Martin Rubey wrote:
> "Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl> writes:
> 
> > I just tried axiom today for the first time, since it appears quite
> > powerful. This of course means I'm a total newbie, so I've tried searching
> > for the problem that I have through the archives, without luck.
> 
> welcome, and do not hesitate to ask!  I highly recommend the axiom book by
> Jenks and Sutor as first reading, by the way.  What
> 
> > I'm trying to define a piecewise function, and I didn't manage. I could track
> > the problem down to this expression in the predicate: x < %pi.
> 
> Note that (unfortunately) if you are dealing with things like trigonometry %pi,
> you are often confined to the domain "Expression Integer", which is currently
> not very powerful in axiom.
> 
> Most importantly:
> 
>  the operation "<" does not use the "mathematical" ordering in Expression
>  Integer!  In fact, it wouldn't make sense anyway, think of "cos x < 0", and
>  currently we do not have a domain for "constant" expressions, I believe. (But
>  we certainly should).  In particular, in Expression Integer, you have "%pi <
>  %e" evaluate to true:
> 
> (1) -> %pi < %e
> 
>    (1)  true
>                                                                 Type: Boolean
>  What you want is to compare numerically:
> 
> (2) -> %pi::Float < %e
> 
>    (2)  false
> 
> (3) -> 1::Float < %pi
> 
>    (3)  true
>                                                                 Type: Boolean
> (4) -> 1.0 < %pi
> 
>    (4)  true
>                                                                 Type: Boolean
> 
> > However, Float (1.1 < %pi) and AlgebraicNumber (sqrt(2) < %pi) work
> > properly. Nevertheless, I want to evaluate the function at any point and get
> > a symbolic answer instead of Float->Float. What can I do?
> 
> maybe you want something like
> 
> (9) ->   less(a, b) == a::Expression Float::Float < b::Expression Float::Float
>    Compiled code for less has been cleared.
>    1 old definition(s) deleted for function or rule less 
>                                                                    Type: Void
> (10) -> less(sin %e, %pi)
>    Compiling function less with type (Expression Integer,Pi) -> Boolean
>       
>    (10)  true
>                                                                 Type: Boolean
> 
> ?
> 
> (The additional coercion to Expression Float is necessary, since the
> interpreter is too stupid to convert %e directly to float, unfortunately.)
> 
> 
> Martin
> 



From MAILER-DAEMON Thu May 24 14:09:37 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HrHkn-0004Y3-Ks
	for mharc-axiom-mail@gnu.org; Thu, 24 May 2007 14:09:37 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HrHkl-0004XQ-UC
	for axiom-mail@nongnu.org; Thu, 24 May 2007 14:09:35 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HrHkk-0004WH-BZ
	for axiom-mail@nongnu.org; Thu, 24 May 2007 14:09:35 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HrHkk-0004WE-8w
	for axiom-mail@nongnu.org; Thu, 24 May 2007 14:09:34 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1HrHkj-0003QA-NW
	for axiom-mail@nongnu.org; Thu, 24 May 2007 14:09:33 -0400
Received: from joan.univie.ac.at ([131.130.3.110] helo=joan.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HrHki-00085z-K4; Thu, 24 May 2007 20:09:32 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by joan.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HrHki-0002Px-Ip; Thu, 24 May 2007 20:09:32 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: "Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl>
Subject: Re: [Axiom-mail] comparison operators and %pi
References: <20070524153142.GA8434@blackstar.oemrawsingh.xs4all.nl>
	<9qfy5myzna.fsf@aquin.mat.univie.ac.at>
	<20070524174428.GA8844@blackstar.oemrawsingh.xs4all.nl>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 24 May 2007 20:09:32 +0200
In-Reply-To: <20070524174428.GA8844@blackstar.oemrawsingh.xs4all.nl>
Message-ID: <9qps4qayar.fsf@aquin.mat.univie.ac.at>
Lines: 34
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 24 May 2007 18:09:36 -0000

"Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl> writes:

> I just find this very strange:
> (1) -> %e
> 
>    (1)  %e
>                                                      Type: Expression Integer
> (2) -> %pi
> 
>    (2)  %pi
>                                                                      Type: Pi
> 
> Why is %e of type Expression Integer, while %pi is of type Pi? Is there some
> deeper reason why Pi is its own type?

For some reasons, the original developers of axiom found %pi more important
than %e.  For elements of Expression Integer there is no direct conversion to
Float, so they created an own domain HackPi, which contains only %pi and the
necessary conversion functions.  The didn't want to do the same thing with %e
though:

(2) -> %e::Float
  
   Cannot convert from type Expression Integer to Float for value
   %e


In my opinion, we should have a domain for "general" constants, i.e., like
Expression Integer but without variables, and, more generally, a domain for
expressions with a given set of variables, similar to MPOLY.  But I guess,
that's a fair bit of work.


Martin




From MAILER-DAEMON Fri May 25 00:35:34 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HrRWY-0002nm-Oe
	for mharc-axiom-mail@gnu.org; Fri, 25 May 2007 00:35:34 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HrRWX-0002nP-Ba
	for axiom-mail@nongnu.org; Fri, 25 May 2007 00:35:33 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HrRWW-0002nB-GH
	for axiom-mail@nongnu.org; Fri, 25 May 2007 00:35:32 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HrRWW-0002n6-9u
	for axiom-mail@nongnu.org; Fri, 25 May 2007 00:35:32 -0400
Received: from ug-out-1314.google.com ([66.249.92.171])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <amca01@gmail.com>) id 1HrRWV-0004hx-LL
	for axiom-mail@nongnu.org; Fri, 25 May 2007 00:35:32 -0400
Received: by ug-out-1314.google.com with SMTP id a2so915566ugf
	for <axiom-mail@nongnu.org>; Thu, 24 May 2007 21:35:30 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed; d=gmail.com; s=beta;
	h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=k70xXhBVIThBK6rVoGKXk4qEBzEusdKMTV4urTuhqhWlKPtdQf2PUVPgDazTcWezAwO01/2jSP8K3NQ+pXGicT43Uk4BR3MGsKTpPRO/rpF/L/LpEm02cUIq733OYQ8ziUlkQBvqf34nBxR7atoJXsE8xIMmrQead9Nj2NBqI7E=
DomainKey-Signature: a=rsa-sha1; c=nofws; d=gmail.com; s=beta;
	h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=NX9v85RCs2CuNa7g6jX2roN2eQFLtGdgXHsA8/8wuFHTjTukvnxXmbrUe7GjyaQtRv4qNnsCt4ZSdGVN4sPJdjBWPnIfCasvDHu/9VvcM8xoW4KVbrMhQWFNxs3VYA+GFceOiJod+NEuLBF8Y/ILQP7SMT/xHS4jwyoIneYiF4w=
Received: by 10.66.219.11 with SMTP id r11mr2651083ugg.1180067730802;
	Thu, 24 May 2007 21:35:30 -0700 (PDT)
Received: by 10.66.254.17 with HTTP; Thu, 24 May 2007 21:35:30 -0700 (PDT)
Message-ID: <1d67a53c0705242135k623e6a0exce30d8be3f15f236@mail.gmail.com>
Date: Fri, 25 May 2007 14:35:30 +1000
From: "Alasdair McAndrew" <amca01@gmail.com>
To: "Martin Rubey" <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
Subject: Re: [Axiom-mail] comparison operators and %pi
In-Reply-To: <9qps4qayar.fsf@aquin.mat.univie.ac.at>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_16731_20206224.1180067730762"
References: <20070524153142.GA8434@blackstar.oemrawsingh.xs4all.nl>
	<9qfy5myzna.fsf@aquin.mat.univie.ac.at>
	<20070524174428.GA8844@blackstar.oemrawsingh.xs4all.nl>
	<9qps4qayar.fsf@aquin.mat.univie.ac.at>
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Cc: 
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Fri, 25 May 2007 04:35:33 -0000

------=_Part_16731_20206224.1180067730762
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

I find the behaviour of constants rather inconsistent.  And it's odd that
%e::Float doesn't work, but %e+0::Float (and any other arithmetic involving
%e) does.  Also, the Euler-Mascheroni constant should be in there!

-Alasdair

On 24 May 2007 20:09:32 +0200, Martin Rubey <martin.rubey@univie.ac.at>
wrote:
>
> "Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl> writes:
>
> > I just find this very strange:
> > (1) -> %e
> >
> >    (1)  %e
> >                                                      Type: Expression
> Integer
> > (2) -> %pi
> >
> >    (2)  %pi
> >                                                                      Type:
> Pi
> >
> > Why is %e of type Expression Integer, while %pi is of type Pi? Is there
> some
> > deeper reason why Pi is its own type?
>
> For some reasons, the original developers of axiom found %pi more
> important
> than %e.  For elements of Expression Integer there is no direct conversion
> to
> Float, so they created an own domain HackPi, which contains only %pi and
> the
> necessary conversion functions.  The didn't want to do the same thing with
> %e
> though:
>
> (2) -> %e::Float
>
>    Cannot convert from type Expression Integer to Float for value
>    %e
>
>
> In my opinion, we should have a domain for "general" constants, i.e., like
> Expression Integer but without variables, and, more generally, a domain
> for
> expressions with a given set of variables, similar to MPOLY.  But I guess,
> that's a fair bit of work.
>
>
> Martin
>
>
>
> _______________________________________________
> Axiom-mail mailing list
> Axiom-mail@nongnu.org
> http://lists.nongnu.org/mailman/listinfo/axiom-mail
>

------=_Part_16731_20206224.1180067730762
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

I find the behaviour of constants rather inconsistent.&nbsp; And it&#39;s odd that %e::Float doesn&#39;t work, but %e+0::Float (and any other arithmetic involving %e) does.&nbsp; Also, the Euler-Mascheroni constant should be in there!
<br><br>-Alasdair<br><br><div><span class="gmail_quote">On 24 May 2007 20:09:32 +0200, <b class="gmail_sendername">Martin Rubey</b> &lt;<a href="mailto:martin.rubey@univie.ac.at">martin.rubey@univie.ac.at</a>&gt; wrote:</span>
<blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">&quot;Sumant S.R. Oemrawsingh&quot; &lt;<a href="mailto:soemraws@xs4all.nl">soemraws@xs4all.nl
</a>&gt; writes:<br><br>&gt; I just find this very strange:<br>&gt; (1) -&gt; %e<br>&gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp;(1)&nbsp;&nbsp;%e<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Type: Expression Integer<br>&gt; (2) -&gt; %pi<br>&gt;
<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp;(2)&nbsp;&nbsp;%pi<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Type: Pi<br>&gt;<br>&gt; Why is %e of type Expression Integer, while %pi is of type Pi? Is there some<br>&gt; deeper reason why Pi is its own type?
<br><br>For some reasons, the original developers of axiom found %pi more important<br>than %e.&nbsp;&nbsp;For elements of Expression Integer there is no direct conversion to<br>Float, so they created an own domain HackPi, which contains only %pi and the
<br>necessary conversion functions.&nbsp;&nbsp;The didn&#39;t want to do the same thing with %e<br>though:<br><br>(2) -&gt; %e::Float<br><br>&nbsp;&nbsp; Cannot convert from type Expression Integer to Float for value<br>&nbsp;&nbsp; %e<br><br><br>In my opinion, we should have a domain for &quot;general&quot; constants, 
i.e., like<br>Expression Integer but without variables, and, more generally, a domain for<br>expressions with a given set of variables, similar to MPOLY.&nbsp;&nbsp;But I guess,<br>that&#39;s a fair bit of work.<br><br><br>Martin<br>
<br><br><br>_______________________________________________<br>Axiom-mail mailing list<br><a href="mailto:Axiom-mail@nongnu.org">Axiom-mail@nongnu.org</a><br><a href="http://lists.nongnu.org/mailman/listinfo/axiom-mail">http://lists.nongnu.org/mailman/listinfo/axiom-mail
</a><br></blockquote></div><br>

------=_Part_16731_20206224.1180067730762--



From MAILER-DAEMON Fri May 25 00:42:42 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HrRdS-0004UX-Fc
	for mharc-axiom-mail@gnu.org; Fri, 25 May 2007 00:42:42 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HrRdQ-0004Sk-Us
	for axiom-mail@nongnu.org; Fri, 25 May 2007 00:42:40 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HrRdP-0004Rf-Q2
	for axiom-mail@nongnu.org; Fri, 25 May 2007 00:42:40 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HrRdP-0004Rc-LL
	for axiom-mail@nongnu.org; Fri, 25 May 2007 00:42:39 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1HrRdP-0005GC-2y
	for axiom-mail@nongnu.org; Fri, 25 May 2007 00:42:39 -0400
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HrRdN-0005mR-LG; Fri, 25 May 2007 06:42:37 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HrRdN-0003PY-Io; Fri, 25 May 2007 06:42:37 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: "Alasdair McAndrew" <amca01@gmail.com>
Subject: Re: [Axiom-mail] comparison operators and %pi
References: <20070524153142.GA8434@blackstar.oemrawsingh.xs4all.nl>
	<9qfy5myzna.fsf@aquin.mat.univie.ac.at>
	<20070524174428.GA8844@blackstar.oemrawsingh.xs4all.nl>
	<9qps4qayar.fsf@aquin.mat.univie.ac.at>
	<1d67a53c0705242135k623e6a0exce30d8be3f15f236@mail.gmail.com>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 25 May 2007 06:42:37 +0200
In-Reply-To: <1d67a53c0705242135k623e6a0exce30d8be3f15f236@mail.gmail.com>
Message-ID: <9qabvtjyyq.fsf@aquin.mat.univie.ac.at>
Lines: 20
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Fri, 25 May 2007 04:42:41 -0000

"Alasdair McAndrew" <amca01@gmail.com> writes:

> I find the behaviour of constants rather inconsistent.  

Yes, certainly.

> And it's odd that %e::Float doesn't work, but %e+0::Float 

look at the type of %e+0.0 and you will understand.  Note that it is *not*
Float.

> (and any other arithmetic involving %e) does.

No: sin(%e)::Float does not work.

> Also, the Euler-Mascheroni constant should be in there!

Yes, certainly.

Martin




From MAILER-DAEMON Fri May 25 03:09:24 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HrTvQ-0007jC-0m
	for mharc-axiom-mail@gnu.org; Fri, 25 May 2007 03:09:24 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HrTvO-0007iz-7S
	for axiom-mail@nongnu.org; Fri, 25 May 2007 03:09:22 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HrTvM-0007in-M8
	for axiom-mail@nongnu.org; Fri, 25 May 2007 03:09:21 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HrTvM-0007ik-EW
	for axiom-mail@nongnu.org; Fri, 25 May 2007 03:09:20 -0400
Received: from ug-out-1314.google.com ([66.249.92.175])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <amca01@gmail.com>) id 1HrTvL-0003FO-Sl
	for axiom-mail@nongnu.org; Fri, 25 May 2007 03:09:20 -0400
Received: by ug-out-1314.google.com with SMTP id a2so939947ugf
	for <axiom-mail@nongnu.org>; Fri, 25 May 2007 00:09:18 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed; d=gmail.com; s=beta;
	h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=b3XoY2MdWohEdeVRqyWCuZk6jZPTzD295ydkC7igkHI0S0k4YLnH4WdjR8//ox/zbpUFEOFvNQG0yOmNUUB0CEknFpqVAevucBe6nzDF6NFmx9SNqRX+CJMaazGJEnIfw24P2TZ09Yn0Ak922ngVuWz4Zing4nEkdF5owlbUYFU=
DomainKey-Signature: a=rsa-sha1; c=nofws; d=gmail.com; s=beta;
	h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=JkcODuVYFN+bdTnzGI4hmTEcvgeEJ1yH46GUF9pGf/WJJbqmI3SNccxC0XxV9rr4OyyNb/UgDIGb2LOD4QT9R86SdfLHYc82EuRpNcIqCFbk/x1R1/L9GS4P5VkXkccMd8+mR5OcG+upI+bNXIjmbo7qc1fWsKQCfVQ4ZqRtfw4=
Received: by 10.67.30.3 with SMTP id h3mr2715845ugj.1180076958324;
	Fri, 25 May 2007 00:09:18 -0700 (PDT)
Received: by 10.66.254.17 with HTTP; Fri, 25 May 2007 00:09:18 -0700 (PDT)
Message-ID: <1d67a53c0705250009p1a159050pa98b41ce75d21233@mail.gmail.com>
Date: Fri, 25 May 2007 17:09:18 +1000
From: "Alasdair McAndrew" <amca01@gmail.com>
To: "Martin Rubey" <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
Subject: Re: [Axiom-mail] comparison operators and %pi
In-Reply-To: <9qabvtjyyq.fsf@aquin.mat.univie.ac.at>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_17039_29377290.1180076958281"
References: <20070524153142.GA8434@blackstar.oemrawsingh.xs4all.nl>
	<9qfy5myzna.fsf@aquin.mat.univie.ac.at>
	<20070524174428.GA8844@blackstar.oemrawsingh.xs4all.nl>
	<9qps4qayar.fsf@aquin.mat.univie.ac.at>
	<1d67a53c0705242135k623e6a0exce30d8be3f15f236@mail.gmail.com>
	<9qabvtjyyq.fsf@aquin.mat.univie.ac.at>
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Cc: 
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Fri, 25 May 2007 07:09:22 -0000

------=_Part_17039_29377290.1180076958281
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

I also notice that pi is defined as an operator, so that pi() returns the
result %pi.  I wonder how hard it would be to include useful constants in
Axiom, and to be able to enter (for example)

solve(integrate(1/x,x=1..t)=1,t)

and obtain the answer %e.

Alasdair

On 25 May 2007 06:42:37 +0200, Martin Rubey <martin.rubey@univie.ac.at>
wrote:
>
> "Alasdair McAndrew" <amca01@gmail.com> writes:
>
> > I find the behaviour of constants rather inconsistent.
>
> Yes, certainly.
>
> > And it's odd that %e::Float doesn't work, but %e+0::Float
>
> look at the type of %e+0.0 and you will understand.  Note that it is *not*
> Float.
>
> > (and any other arithmetic involving %e) does.
>
> No: sin(%e)::Float does not work.
>
> > Also, the Euler-Mascheroni constant should be in there!
>
> Yes, certainly.
>
> Martin
>
>

------=_Part_17039_29377290.1180076958281
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

I also notice that pi is defined as an operator, so that pi() returns the result %pi.&nbsp; I wonder how hard it would be to include useful constants in Axiom, and to be able to enter (for example)<br><br>solve(integrate(1/x,x=1..t)=1,t)
<br><br>and obtain the answer %e.<br><br>Alasdair<br><br><div><span class="gmail_quote">On 25 May 2007 06:42:37 +0200, <b class="gmail_sendername">Martin Rubey</b> &lt;<a href="mailto:martin.rubey@univie.ac.at">martin.rubey@univie.ac.at
</a>&gt; wrote:</span><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">&quot;Alasdair McAndrew&quot; &lt;<a href="mailto:amca01@gmail.com">amca01@gmail.com
</a>&gt; writes:<br><br>&gt; I find the behaviour of constants rather inconsistent.<br><br>Yes, certainly.<br><br>&gt; And it&#39;s odd that %e::Float doesn&#39;t work, but %e+0::Float<br><br>look at the type of %e+0.0 and you will understand.&nbsp;&nbsp;Note that it is *not*
<br>Float.<br><br>&gt; (and any other arithmetic involving %e) does.<br><br>No: sin(%e)::Float does not work.<br><br>&gt; Also, the Euler-Mascheroni constant should be in there!<br><br>Yes, certainly.<br><br>Martin<br><br>
</blockquote></div><br>

------=_Part_17039_29377290.1180076958281--



From MAILER-DAEMON Fri May 25 08:20:27 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HrYmR-0006G3-HB
	for mharc-axiom-mail@gnu.org; Fri, 25 May 2007 08:20:27 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HrYmP-0006FZ-8y
	for axiom-mail@nongnu.org; Fri, 25 May 2007 08:20:25 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HrYmN-0006Ew-Fi
	for axiom-mail@nongnu.org; Fri, 25 May 2007 08:20:24 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HrYmN-0006Es-AX
	for axiom-mail@nongnu.org; Fri, 25 May 2007 08:20:23 -0400
Received: from smtp-vbr7.xs4all.nl ([194.109.24.27])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <soemraws@xs4all.nl>) id 1HrYmM-0000lK-Rd
	for axiom-mail@nongnu.org; Fri, 25 May 2007 08:20:23 -0400
Received: from blackstar (oemrawsingh.xs4all.nl [213.84.4.243])
	by smtp-vbr7.xs4all.nl (8.13.8/8.13.8) with SMTP id l4PCKLp5029080
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <axiom-mail@nongnu.org>; Fri, 25 May 2007 14:20:21 +0200 (CEST)
	(envelope-from soemraws@xs4all.nl)
Received: by blackstar (sSMTP sendmail emulation);
	Fri, 25 May 2007 14:20:20 +0200
From: "Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl>
Date: Fri, 25 May 2007 14:20:20 +0200
To: axiom-mail@nongnu.org
Subject: Re: [Axiom-mail] comparison operators and %pi
Message-ID: <20070525122020.GA7395@blackstar.oemrawsingh.xs4all.nl>
Mail-Followup-To: axiom-mail@nongnu.org
References: <20070524153142.GA8434@blackstar.oemrawsingh.xs4all.nl>
	<9qfy5myzna.fsf@aquin.mat.univie.ac.at>
	<20070524174428.GA8844@blackstar.oemrawsingh.xs4all.nl>
	<9qps4qayar.fsf@aquin.mat.univie.ac.at>
	<1d67a53c0705242135k623e6a0exce30d8be3f15f236@mail.gmail.com>
	<9qabvtjyyq.fsf@aquin.mat.univie.ac.at>
	<1d67a53c0705250009p1a159050pa98b41ce75d21233@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <1d67a53c0705250009p1a159050pa98b41ce75d21233@mail.gmail.com>
User-Agent: Mutt/1.5.13 (2006-08-11)
X-Virus-Scanned: by XS4ALL Virus Scanner
X-detected-kernel: FreeBSD 4.6-4.9
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Fri, 25 May 2007 12:20:25 -0000

Hi,

I actually do get this result:

(1) -> integrate(1/x,x)

   (1)  log(x)
                                          Type: Union(Expression Integer,...)
(2) -> solve(%=1,x)    

   (2)  [x= %e]
                                       Type: List Equation Expression Integer

and I assume that that is what you want. You can of course do a solve on
log(x)-log(1), which would give the same result.

However, I do get this:

(3) -> integrate(1/x,x=1..t)

   (3)  potentialPole
                                         Type: Union(pole: potentialPole,...)

which happens, I assume, because it is possible that t = 0. How would one go
about telling axiom that 1 is in fact the lower boundary and t the upper
boundary, or t >= 1, or even at least that t > 0?

Regards,

S.



On Fri, May 25, 2007 at 05:09:18PM +1000, Alasdair McAndrew wrote:
>    I also notice that pi is defined as an operator, so that pi() returns
>    the result %pi.  I wonder how hard it would be to include useful
>    constants in Axiom, and to be able to enter (for example)
>    solve(integrate(1/x,x=1..t)=1,t)
>    and obtain the answer %e.
>    Alasdair
> 
>    On 25 May 2007 06:42:37 +0200, Martin Rubey
>    <[1]martin.rubey@univie.ac.at > wrote:
> 
>      "Alasdair McAndrew" <[2]amca01@gmail.com > writes:
>      > I find the behaviour of constants rather inconsistent.
>      Yes, certainly.
>      > And it's odd that %e::Float doesn't work, but %e+0::Float
>      look at the type of %e+0.0 and you will understand.  Note that it is
>      *not*
>      Float.
>      > (and any other arithmetic involving %e) does.
>      No: sin(%e)::Float does not work.
>      > Also, the Euler-Mascheroni constant should be in there!
>      Yes, certainly.
>      Martin
> 
> References
> 
>    1. mailto:martin.rubey@univie.ac.at
>    2. mailto:amca01@gmail.com

> _______________________________________________
> Axiom-mail mailing list
> Axiom-mail@nongnu.org
> http://lists.nongnu.org/mailman/listinfo/axiom-mail


-- 
Sumant S. R. Oemrawsingh
soemraws@xs4all.nl



From MAILER-DAEMON Fri May 25 09:30:58 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HrZsg-0000h7-I9
	for mharc-axiom-mail@gnu.org; Fri, 25 May 2007 09:30:58 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HrZse-0000gv-VQ
	for axiom-mail@nongnu.org; Fri, 25 May 2007 09:30:57 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HrZsc-0000gR-3F
	for axiom-mail@nongnu.org; Fri, 25 May 2007 09:30:56 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HrZsb-0000gO-UM
	for axiom-mail@nongnu.org; Fri, 25 May 2007 09:30:53 -0400
Received: from mail35.messagelabs.com ([62.231.131.195])
	by monty-python.gnu.org with smtp (Exim 4.60)
	(envelope-from <themos@nag.co.uk>) id 1HrZsb-0008Q6-E5
	for axiom-mail@nongnu.org; Fri, 25 May 2007 09:30:53 -0400
X-VirusChecked: Checked
X-Env-Sender: themos@nag.co.uk
X-Msg-Ref: server-8.tower-35.messagelabs.com!1180099851!4503278!1
X-StarScan-Version: 5.5.10.7.1; banners=nag.co.uk,-,-
X-Originating-IP: [62.231.145.242]
Received: (qmail 19770 invoked from network); 25 May 2007 13:30:51 -0000
Received: from nagmx1.nag.co.uk (HELO nagmx1.nag.co.uk) (62.231.145.242)
	by server-8.tower-35.messagelabs.com with SMTP;
	25 May 2007 13:30:51 -0000
Received: from loanamd6.nag.co.uk (loanamd6.nag.co.uk [192.156.217.152])
	by nagmx1.nag.co.uk (Postfix) with ESMTP id 5E5AE12015F
	for <axiom-mail@nongnu.org>; Fri, 25 May 2007 14:30:52 +0100 (BST)
From: Themos Tsikas <themos@nag.co.uk>
Organization: NAG Ltd
To: axiom-mail@nongnu.org
Subject: Re: [Axiom-mail] comparison operators and %pi
Date: Fri, 25 May 2007 13:30:49 +0000
User-Agent: KMail/1.9.1
References: <20070524153142.GA8434@blackstar.oemrawsingh.xs4all.nl>
	<1d67a53c0705250009p1a159050pa98b41ce75d21233@mail.gmail.com>
	<20070525122020.GA7395@blackstar.oemrawsingh.xs4all.nl>
In-Reply-To: <20070525122020.GA7395@blackstar.oemrawsingh.xs4all.nl>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200705251330.49912.themos@nag.co.uk>
X-detected-kernel: Linux 2.4-2.6
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: themos@nag.co.uk
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Fri, 25 May 2007 13:30:57 -0000

integrate(1/x,x=1..t, "noPole")

tells the integrate function not to worry about poles. 

Adding assumptions about values of symbols needs to be done at a fairly 
fundamental level in many places in the Axiom library.

I recall an attempt by Prof Davenport of Bath University but I can't track it 
down (or I am going senile).

Themos Tsikas


________________________________________________________________________
The Numerical Algorithms Group Ltd is a company registered in England
and Wales with company number 1249803. The registered office is:
Wilkinson House, Jordan Hill Road, Oxford OX2 8DR, United Kingdom.

This e-mail has been scanned for all viruses by Star. The service is
powered by MessageLabs. 
________________________________________________________________________



From MAILER-DAEMON Fri May 25 23:41:40 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hrn9w-0001UW-Lj
	for mharc-axiom-mail@gnu.org; Fri, 25 May 2007 23:41:40 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hrn9t-0001U8-Sk
	for axiom-mail@nongnu.org; Fri, 25 May 2007 23:41:37 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hrn9s-0001Tt-Aa
	for axiom-mail@nongnu.org; Fri, 25 May 2007 23:41:36 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hrn9s-0001Tk-59
	for axiom-mail@nongnu.org; Fri, 25 May 2007 23:41:36 -0400
Received: from smtp.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Hrn9r-0004bc-Oz
	for axiom-mail@nongnu.org; Fri, 25 May 2007 23:41:35 -0400
Received: from soliton.cs.tamu.edu (vpn-25.cs.tamu.edu [128.194.150.25])
	by postal.cs.tamu.edu (Postfix) with ESMTP id A646846DE01
	for <axiom-mail@nongnu.org>; Fri, 25 May 2007 22:41:34 -0500 (CDT)
Received: by soliton.cs.tamu.edu (Postfix, from userid 1000)
	id 23F4A1AAEB; Fri, 25 May 2007 22:42:34 -0500 (CDT)
Sender: gdr@cs.tamu.edu
To: axiom-mail@nongnu.org
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
Organization: Texas A&M University, Department of Computer Science
Date: 25 May 2007 22:42:34 -0500
Message-ID: <87hcq0mes5.fsf@soliton.cs.tamu.edu>
Lines: 9
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Solaris 8 (1)
Subject: [Axiom-mail] Enumeration 
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 26 May 2007 03:41:38 -0000


Hi,

  The Axiom Book seems to have mention of Enumeration and
EnumerationCategory...  

Did I miss something?

-- Gaby



From MAILER-DAEMON Sat May 26 11:05:01 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HrxpE-0002vP-Ok
	for mharc-axiom-mail@gnu.org; Sat, 26 May 2007 11:05:01 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HrxpA-0002pF-VR
	for axiom-mail@nongnu.org; Sat, 26 May 2007 11:04:57 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hrxp6-0002kG-RG
	for axiom-mail@nongnu.org; Sat, 26 May 2007 11:04:54 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hrxp5-0002jB-Op
	for axiom-mail@nongnu.org; Sat, 26 May 2007 11:04:51 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1Hrxp3-0005oV-KS
	for axiom-mail@nongnu.org; Sat, 26 May 2007 11:04:51 -0400
Received: from joan.univie.ac.at ([131.130.3.110] helo=joan.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1Hrxoe-0001Ea-26; Sat, 26 May 2007 17:04:24 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by joan.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1Hrxod-00060A-QN; Sat, 26 May 2007 17:04:23 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: Martin Rubey <martin.rubey@univie.ac.at>
References: <9qabvv8xy9.fsf@aquin.mat.univie.ac.at>
	<1d67a53c0705241644o1f774c7doc78402116d1db638@mail.gmail.com>
	<9q646h8w3l.fsf@aquin.mat.univie.ac.at>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 26 May 2007 17:04:23 +0200
In-Reply-To: <9q646h8w3l.fsf@aquin.mat.univie.ac.at>
Message-ID: <9qfy5jfwy0.fsf@aquin.mat.univie.ac.at>
Lines: 40
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="=-=-="
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail <axiom-mail@nongnu.org>, Cliff Yapp <smustudent1@yahoo.com>
Subject: [Axiom-mail] Re: [Axiom-developer] [ANN] yet a better version of
	the axiom mode for emacs.
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 26 May 2007 15:04:58 -0000

--=-=-=

Dear all,

finally, I think I have something more or less working.  Unfortunately, it cost
it me yet another night, but I hope it will come useful for some people.

+ still more cleaning up  

+ C-c C-c works

+ for i in 1..10 repeat ([j for j in 1..2000]; output "hi")

  outputs one line after the other.

+ generally much more insensitive to failure.  In particular, it should now
  always be possible to continue work.

Todos:

> * All the initialization code needs cleaning up.  I cannot really do it, since
>   I have no idea what it does.
> 
> * Xemacs is not supported.  Anybody knows comint mode for xemacs?  It seems
>   that they differ, it seems that comint-set-process-mark is not there?
> 
> * Still no way to send stuff from input files to the buffer.
> 
> * Still no LaTeX display.  Best thing would be if this could be switched on
>   alternatively.

I would like to ask you to give it a try.  PLEASE send me feedback, since that
was not really pleasant work.

Waldek, Gaby, Tim, would you put it into "your" distributions, please!


--=-=-=
Content-Type: application/octet-stream
Content-Disposition: attachment; filename=axiom.el.pamphlet.gz
Content-Transfer-Encoding: base64

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
--=-=-=


Many thanks,

Martin

--=-=-=--




From MAILER-DAEMON Sat May 26 13:27:26 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hs034-00019G-AY
	for mharc-axiom-mail@gnu.org; Sat, 26 May 2007 13:27:26 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hs033-00018z-En
	for axiom-mail@nongnu.org; Sat, 26 May 2007 13:27:25 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hs030-00018l-OC
	for axiom-mail@nongnu.org; Sat, 26 May 2007 13:27:24 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hs030-00018f-Iw
	for axiom-mail@nongnu.org; Sat, 26 May 2007 13:27:22 -0400
Received: from mail60c2.megamailservers.com ([216.251.41.180])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <bill.page1@synthesis.anikast.ca>) id 1Hs030-0004W8-8I
	for axiom-mail@nongnu.org; Sat, 26 May 2007 13:27:22 -0400
X-POP-User: bill.page1.synthesis.anikast.ca
Received: from asus ([207.35.46.72])
	by mail60c2.megamailservers.com (8.13.6.20060614/8.13.1) with ESMTP id
	l4QHR09f032049; Sat, 26 May 2007 13:27:13 -0400
From: "Bill Page" <bill.page1@synthesis.anikast.ca>
To: "'Gabriel Dos Reis'" <gdr@cs.tamu.edu>
Subject: RE: [Axiom-mail] Enumeration 
Date: Sat, 26 May 2007 13:25:57 -0400
Message-ID: <003101c79fba$f0d25c80$6900a8c0@asus>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook, Build 10.0.6822
Thread-Index: AcefR8YxiEa50zfTQY2iCndpPXwsQAAcfekg
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3028
In-Reply-To: <87hcq0mes5.fsf@soliton.cs.tamu.edu>
Importance: Normal
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 26 May 2007 17:27:25 -0000

Gaby,

Enumeration is an important built-in type in Aldor, but I
Axiom I get mixed (strange) results...

On May 25, 2007 11:43 PM  Gabriel Dos Reis wrote:
> 
>   The Axiom Book seems to have mention of Enumeration and
> EnumerationCategory...  
> 
> Did I miss something?
> 

(1) -> )wh domain Enumeration
-------------------- Domains ----------------------

Domains with names matching patterns:
     enumeration

       Enumeration

However:

(1) -> )show Enumeration
   The )show system command is used to display information about types
      or partial types. For example, )show Integer will show
      information about Integer .

      Enumeration is not the name of a known type constructor. If you
      want to see information about any operations named Enumeration ,
      issue
                       )display operations Enumeration
(1) -> )show EnumerationCategory
   The )show system command is used to display information about types
      or partial types. For example, )show Integer will show
      information about Integer .

      EnumerationCategory is not the name of a known type constructor.
      If you want to see information about any operations named
      EnumerationCategory , issue
                   )display operations EnumerationCategory


Yet they do seem to work as in Aldor:

(2) -> Colors:=Enumeration(red,green,blue)

   (2)  Enumeration(red,green,blue)
                                                                 Type:
Domain
(3) -> i:Colors:=green

   (3)  green
                                            Type:
Enumeration(red,green,blue)
(4) ->

----------

Maybe there is something a little trashed in the databases?

Regards,
Bill Page.





From MAILER-DAEMON Sat May 26 14:04:22 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hs0co-0001rf-2b
	for mharc-axiom-mail@gnu.org; Sat, 26 May 2007 14:04:22 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hs0cm-0001mQ-Mu
	for axiom-mail@nongnu.org; Sat, 26 May 2007 14:04:20 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hs0cj-0001d1-V0
	for axiom-mail@nongnu.org; Sat, 26 May 2007 14:04:20 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hs0cj-0001cr-SL
	for axiom-mail@nongnu.org; Sat, 26 May 2007 14:04:17 -0400
Received: from smtp.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Hs0cj-000797-Bu
	for axiom-mail@nongnu.org; Sat, 26 May 2007 14:04:17 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id 0B21746DE01;
	Sat, 26 May 2007 13:04:15 -0500 (CDT)
Date: Sat, 26 May 2007 13:05:21 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: Bill Page <bill.page1@synthesis.anikast.ca>
Subject: RE: [Axiom-mail] Enumeration 
In-Reply-To: <003101c79fba$f0d25c80$6900a8c0@asus>
Message-ID: <Pine.LNX.4.64.0705261302160.5080@gauss.cs.tamu.edu>
References: <003101c79fba$f0d25c80$6900a8c0@asus>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: Solaris 8 (1)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 26 May 2007 18:04:20 -0000

On Sat, 26 May 2007, Bill Page wrote:

| Gaby,
| 
| Enumeration is an important built-in type in Aldor, but I
| Axiom I get mixed (strange) results...

Bill --
  Many thanks for your answer -- thar concurs with my feeling that
Enumerations are afterthought in Axiom.  

However, in my previous message, I mistyped something:

| On May 25, 2007 11:43 PM  Gabriel Dos Reis wrote:
| > 
| >   The Axiom Book seems to have mention of Enumeration and
                          ^
there is a missing "NOT" here.  :-(

[...]

| Yet they do seem to work as in Aldor:

Yes;  I know of Enumerations in Axiom only because I read the source code --
which is not the normal usage and documentation of Axiom.

[...]

| Maybe there is something a little trashed in the databases?

Indeed; it seems not up to date.

Thanks,

-- Gaby



From MAILER-DAEMON Sat May 26 15:33:24 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hs20y-0002FE-Ht
	for mharc-axiom-mail@gnu.org; Sat, 26 May 2007 15:33:24 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hs20x-0002F9-KE
	for axiom-mail@nongnu.org; Sat, 26 May 2007 15:33:23 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hs20w-0002Ex-VM
	for axiom-mail@nongnu.org; Sat, 26 May 2007 15:33:23 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hs20w-0002Eu-T2
	for axiom-mail@nongnu.org; Sat, 26 May 2007 15:33:22 -0400
Received: from mail58c2.megamailservers.com ([216.251.41.178])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <bill.page1@synthesis.anikast.ca>) id 1Hs20w-00066R-Id
	for axiom-mail@nongnu.org; Sat, 26 May 2007 15:33:22 -0400
X-POP-User: bill.page1.synthesis.anikast.ca
Received: from asus ([207.35.46.72])
	by mail58c2.megamailservers.com (8.13.6.20060614/8.13.1) with ESMTP id
	l4QJWxt1025555; Sat, 26 May 2007 15:33:15 -0400
From: "Bill Page" <bill.page1@synthesis.anikast.ca>
To: "'Gabriel Dos Reis'" <gdr@cs.tamu.edu>
Subject: RE: [Axiom-mail] Enumeration 
Date: Sat, 26 May 2007 15:31:56 -0400
Message-ID: <005201c79fcc$8bc09f70$6900a8c0@asus>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook, Build 10.0.6822
Thread-Index: AcefwEcsjMZIKqNmQJWMq5E2lb8o6QADBEwg
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3028
In-Reply-To: <Pine.LNX.4.64.0705261302160.5080@gauss.cs.tamu.edu>
Importance: Normal
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 26 May 2007 19:33:23 -0000

Gaby,

On May 26, 2007 2:05 PM
> ... 
> Yes;  I know of Enumerations in Axiom only because I read
> the source code --
> which is not the normal usage and documentation of Axiom.
> ... 

Oh really? There is another way? ;)

Regards,
Bill Page.





From MAILER-DAEMON Sat May 26 15:34:51 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hs22N-0002uO-29
	for mharc-axiom-mail@gnu.org; Sat, 26 May 2007 15:34:51 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hs22L-0002uA-Mh
	for axiom-mail@nongnu.org; Sat, 26 May 2007 15:34:49 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hs22J-0002td-34
	for axiom-mail@nongnu.org; Sat, 26 May 2007 15:34:48 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hs22I-0002ta-SZ
	for axiom-mail@nongnu.org; Sat, 26 May 2007 15:34:46 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1Hs22I-0006By-8K
	for axiom-mail@nongnu.org; Sat, 26 May 2007 15:34:46 -0400
Received: from [192.168.138.17] (funklan.cybnes.com [194.187.177.88])
	(authenticated bits=0)
	by athena.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with ESMTP id
	l4QJYXkj004642
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Sat, 26 May 2007 21:34:39 +0200
Message-ID: <46588BC8.6080804@hemmecke.de>
Date: Sat, 26 May 2007 21:34:32 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.0 (X11/20070326)
MIME-Version: 1.0
To: Bill Page <bill.page1@synthesis.anikast.ca>
Subject: Re: [Axiom-mail] Enumeration
References: <003101c79fba$f0d25c80$6900a8c0@asus>
In-Reply-To: <003101c79fba$f0d25c80$6900a8c0@asus>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: Linux 2.4-2.6
Cc: axiom-mail@nongnu.org, 'Gabriel Dos Reis' <gdr@cs.tamu.edu>
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 26 May 2007 19:34:49 -0000

> Enumeration is an important built-in type in Aldor, but I
> Axiom I get mixed (strange) results...

Maybe, Enumeration is also not very well implemented in the current 
Aldor compiler. Some years ago I tried to use it heavily and got some 
strange segfaults after which I was told better not to use Enumeration.

But that is just a side remark of no relevance for the SPAD development.

Ralf



From MAILER-DAEMON Sat May 26 15:44:18 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hs2BW-0006ve-IK
	for mharc-axiom-mail@gnu.org; Sat, 26 May 2007 15:44:18 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hs2BU-0006rj-L0
	for axiom-mail@nongnu.org; Sat, 26 May 2007 15:44:16 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hs2BS-0006mL-Dh
	for axiom-mail@nongnu.org; Sat, 26 May 2007 15:44:16 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hs2BS-0006lt-Aj
	for axiom-mail@nongnu.org; Sat, 26 May 2007 15:44:14 -0400
Received: from mail288.megamailservers.com ([216.251.41.108])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <bill.page1@synthesis.anikast.ca>) id 1Hs2BS-0006ux-00
	for axiom-mail@nongnu.org; Sat, 26 May 2007 15:44:14 -0400
X-POP-User: bill.page1.synthesis.anikast.ca
Received: from asus ([207.35.46.72])
	by mail288.megamailservers.com (8.13.6.20060614/8.13.1) with ESMTP id
	l4QJhjrd025146; Sat, 26 May 2007 15:44:03 -0400
From: "Bill Page" <bill.page1@synthesis.anikast.ca>
To: "'Ralf Hemmecke'" <ralf@hemmecke.de>
Subject: RE: [Axiom-mail] Enumeration
Date: Sat, 26 May 2007 15:42:43 -0400
Message-ID: <005301c79fce$0cb498b0$6900a8c0@asus>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook, Build 10.0.6822
Thread-Index: AcefzOxN8ULVmGZ1QCSebgMJnZb1LwAALC6w
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3028
In-Reply-To: <46588BC8.6080804@hemmecke.de>
Importance: Normal
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org, 'Gabriel Dos Reis' <gdr@cs.tamu.edu>
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 26 May 2007 19:44:16 -0000

On May 26, 2007 3:35 PM Ralf Hemmecke wrote:
> 
> > Enumeration is an important built-in type in Aldor, but I
> > Axiom I get mixed (strange) results...
> 
> Maybe, Enumeration is also not very well implemented in the
> current Aldor compiler. Some years ago I tried to use it
> heavily and got some strange segfaults after which I was
> told better not to use Enumeration.

Don't believe everything you are told about Aldor... ;)
Seriously, the Enumeration type is used in an integral
manner in both the Record and Union types, so I think
it is pretty important.

> 
> But that is just a side remark of no relevance for the
> SPAD development.
> 

Au contraire, I think properly implementing Enumeration
as a built-in type in Spad is potentially quite important.

Regards,
Bill Page





From MAILER-DAEMON Sat May 26 15:51:46 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hs2Ik-0003c7-7b
	for mharc-axiom-mail@gnu.org; Sat, 26 May 2007 15:51:46 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hs2Ii-0003bF-D9
	for axiom-mail@nongnu.org; Sat, 26 May 2007 15:51:44 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hs2Ih-0003as-Rm
	for axiom-mail@nongnu.org; Sat, 26 May 2007 15:51:44 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43)
	id 1Hs2If-0003aQ-Tc; Sat, 26 May 2007 15:51:41 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>)
	id 1Hs2If-0007fB-8I; Sat, 26 May 2007 15:51:41 -0400
Received: from [192.168.138.17] (funklan.cybnes.com [194.187.177.88])
	(authenticated bits=0)
	by athena.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with ESMTP id
	l4QJpakj006696
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Sat, 26 May 2007 21:51:36 +0200
Message-ID: <46588FC8.2080500@hemmecke.de>
Date: Sat, 26 May 2007 21:51:36 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.0 (X11/20070326)
MIME-Version: 1.0
To: Bill Page <bill.page1@synthesis.anikast.ca>
Subject: Re: [Axiom-mail] Enumeration
References: <005301c79fce$0cb498b0$6900a8c0@asus>
In-Reply-To: <005301c79fce$0cb498b0$6900a8c0@asus>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: Linux 2.4-2.6
Cc: axiom-dev <axiom-developer@nongnu.org>, axiom-mail@nongnu.org,
	'Gabriel Dos Reis' <gdr@cs.tamu.edu>
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 26 May 2007 19:51:44 -0000

On 05/26/2007 09:42 PM, Bill Page wrote:
> On May 26, 2007 3:35 PM Ralf Hemmecke wrote:
>>> Enumeration is an important built-in type in Aldor, but I
>>> Axiom I get mixed (strange) results...
>> Maybe, Enumeration is also not very well implemented in the
>> current Aldor compiler. Some years ago I tried to use it
>> heavily and got some strange segfaults after which I was
>> told better not to use Enumeration.

> Don't believe everything you are told about Aldor... ;)

I don't. Part of it an experience of time that I wasted.

> Seriously, the Enumeration type is used in an integral
> manner in both the Record and Union types, so I think
> it is pretty important.

Sure. I was speaking about the compiler, not the language.

>> But that is just a side remark of no relevance for the
>> SPAD development.

> Au contraire, I think properly implementing Enumeration
> as a built-in type in Spad is potentially quite important.

I meant that whether Enumeration is implemented well or not in the Aldor 
compiler should have no relevance to a proper implementation in SPAD.
Sorry, if I was unclear.

Ralf

PS: Shouldn't that thread just be in axiom-developer?



From MAILER-DAEMON Sat May 26 17:06:45 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hs3TJ-0001oL-Rp
	for mharc-axiom-mail@gnu.org; Sat, 26 May 2007 17:06:45 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hs3TH-0001o0-F5
	for axiom-mail@nongnu.org; Sat, 26 May 2007 17:06:43 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hs3TG-0001no-D3
	for axiom-mail@nongnu.org; Sat, 26 May 2007 17:06:43 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hs3TG-0001nl-78
	for axiom-mail@nongnu.org; Sat, 26 May 2007 17:06:42 -0400
Received: from web56707.mail.re3.yahoo.com ([66.196.97.66])
	by monty-python.gnu.org with smtp (Exim 4.60)
	(envelope-from <smustudent1@yahoo.com>) id 1Hs3TF-00062S-Pc
	for axiom-mail@nongnu.org; Sat, 26 May 2007 17:06:41 -0400
Received: (qmail 66982 invoked by uid 60001); 26 May 2007 21:06:41 -0000
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws; s=s1024; d=yahoo.com;
	h=X-YMail-OSG:Received:Date:From:Subject:To:Cc:In-Reply-To:MIME-Version:Content-Type:Content-Transfer-Encoding:Message-ID;
	b=sZGpo3IeN0IrEhu7tKEH5YPW+JKaEbNZwGFPaWgRo/uVAA0vzmB1WTJz0PeS32qKI80h0PY2+3cpFm1B1OZN1QGhtCw0XGMw73zPutM0+LOW4XONLVLsXMFVsPVFQUzmpmHxSVoMcszGsHDDS0VYX7c681f0H5Sz5qMI7XR1rNY=;
X-YMail-OSG: 2y7W_ecVM1lmm8dZBrvsT82q6sN.As1THSQu1mxaQuWuzodR90rUIq8ukq3OHORrytWQi3kk12WVPGP1UVowCO_WF63APb7JWO5jaTe0vbUgxoQ-
Received: from [67.163.139.88] by web56707.mail.re3.yahoo.com via HTTP;
	Sat, 26 May 2007 14:06:41 PDT
Date: Sat, 26 May 2007 14:06:41 -0700 (PDT)
From: C Y <smustudent1@yahoo.com>
To: Martin Rubey <martin.rubey@univie.ac.at>
In-Reply-To: <9qfy5jfwy0.fsf@aquin.mat.univie.ac.at>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
Message-ID: <161047.66423.qm@web56707.mail.re3.yahoo.com>
X-detected-kernel: FreeBSD 4.7-5.2 (or MacOS X 10.2-10.4) (2)
Cc: axiom-mail <axiom-mail@nongnu.org>, Cliff Yapp <smustudent1@yahoo.com>
Subject: [Axiom-mail] Re: [Axiom-developer] [ANN] yet a better version of
	the axiom mode for emacs.
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 26 May 2007 21:06:44 -0000


--- Martin Rubey <martin.rubey@univie.ac.at> wrote:

> Dear all,
> 
> finally, I think I have something more or less working. 
> Unfortunately, it cost it me yet another night, but I hope it will
> come useful for some people.

Thanks!  I have uploaded this latest version to
http://wiki.axiom-developer.org/SandBoxAxiomEmacsMode for convenience
(pdf, tangled version, what have you.)

> I would like to ask you to give it a try.  PLEASE send me feedback,
> since that was not really pleasant work.

A light trial on Windows XP using the old Windows binary works!

Very, very nice Martin!

Cheers,
CY



       
____________________________________________________________________________________Choose the right car based on your needs.  Check out Yahoo! Autos new Car Finder tool.
http://autos.yahoo.com/carfinder/



From MAILER-DAEMON Sat May 26 19:40:08 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hs5rk-0003xX-94
	for mharc-axiom-mail@gnu.org; Sat, 26 May 2007 19:40:08 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hs5ri-0003vs-H1
	for axiom-mail@nongnu.org; Sat, 26 May 2007 19:40:06 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hs5rh-0003t1-4h
	for axiom-mail@nongnu.org; Sat, 26 May 2007 19:40:06 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hs5rg-0003sy-Sk
	for axiom-mail@nongnu.org; Sat, 26 May 2007 19:40:04 -0400
Received: from smtp-vbr8.xs4all.nl ([194.109.24.28])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <soemraws@xs4all.nl>) id 1Hs5rg-0000IF-1R
	for axiom-mail@nongnu.org; Sat, 26 May 2007 19:40:04 -0400
Received: from blackstar (oemrawsingh.xs4all.nl [213.84.4.243])
	by smtp-vbr8.xs4all.nl (8.13.8/8.13.8) with SMTP id l4QNe0JE046959
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <axiom-mail@nongnu.org>; Sun, 27 May 2007 01:40:00 +0200 (CEST)
	(envelope-from soemraws@xs4all.nl)
Received: by blackstar (sSMTP sendmail emulation);
	Sun, 27 May 2007 00:43:44 +0200
From: "Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl>
Date: Sun, 27 May 2007 00:43:44 +0200
To: axiom-mail@nongnu.org
Message-ID: <20070526224344.GA12166@blackstar.oemrawsingh.xs4all.nl>
Mail-Followup-To: axiom-mail@nongnu.org
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.13 (2006-08-11)
X-Virus-Scanned: by XS4ALL Virus Scanner
X-detected-kernel: FreeBSD 4.6-4.9
Subject: [Axiom-mail] 
	Defining piece-wise functions and drawing, integrating, ...
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 26 May 2007 23:40:06 -0000

Hi,

I've followed Martin's advice and started on the Axiom book. Of course, I've
quickly glanced through the whole book already and I'm amazed at most of the
examples there ("Can Axiom do *that*?!").

So, while reading, I've of course also skipped to parts that are most
relevant to me at this moment, for this problem I'm trying to solve (and
learn Axiom in the mean time), but I couldn't get Axiom to do what I wanted.
My problem is illustrated in the following simple example.

Say, I wish to define a piece-wise function,

(1) -> f(x|x<0)==-x**2
                                                                   Type: Void
(2) -> f(x)==x**2
                                                                   Type: Void
(3) -> draw(f(x),x=-1..1)
   Compiling function f with type Variable x -> Polynomial Integer 
Compiling /tmp/gazonk0.lsp.
End of Pass 1.  
End of Pass 2.  
OPTIMIZE levels: Safety=0 (No runtime error checking), Space=0, Speed=3
Finished compiling /tmp/gazonk0.lsp.
   Compiling function %P with type DoubleFloat -> DoubleFloat 
   Graph data being transmitted to the viewport manager...
   AXIOM2D data being transmitted to the viewport manager...

   (3)  TwoDimensionalViewport: "x*x"
                                                 Type: TwoDimensionalViewport

Notice how the result is a graph x*x, instead of one part -x*x and one part
x*x (the viewport also actually shows one parabola, consistent with the
return value, but not what I wanted). If I now continue to integrate,

(4) -> integrate(f(x),x=-1..1)
(4) -> 
        2
   (4)  -
        3
                    Type: Union(f1: OrderedCompletion Expression Integer,...)

However, when I evaluate the function at specific points,

(5) -> f(-1/2)
   Compiling function f with type Fraction Integer -> Fraction Integer 

          1
   (5)  - -
          4
                                                       Type: Fraction Integer
(6) -> f(1/2)
(6) -> 
        1
   (6)  -
        4
                                                       Type: Fraction Integer

I'm lost here... Other odd functions, such as sin(x) behave as they're
supposed to, so the problem is really in the definition of the piece-wise
function, although Axiom did understand it:

(10) -> )display values f
   Definition:
                         2
     f (x | x < 0) == - x
             2
     f x == x

I know that for this specific example I can use something like sign(x)
instead of defining it as a piece-wise function, but this is just an
example, and I think that this should work in principle, so... what am I
doing wrong?

Thanks in advance,

Sumant

-- 
Sumant S. R. Oemrawsingh
soemraws@xs4all.nl



From MAILER-DAEMON Sun May 27 02:55:50 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HsCfO-0000RX-QW
	for mharc-axiom-mail@gnu.org; Sun, 27 May 2007 02:55:50 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HsCfN-0000RB-0N
	for axiom-mail@nongnu.org; Sun, 27 May 2007 02:55:49 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HsCfK-0000Qz-PP
	for axiom-mail@nongnu.org; Sun, 27 May 2007 02:55:47 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HsCfK-0000Qw-Jr
	for axiom-mail@nongnu.org; Sun, 27 May 2007 02:55:46 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1HsCfJ-00067P-Bc
	for axiom-mail@nongnu.org; Sun, 27 May 2007 02:55:45 -0400
Received: from joan.univie.ac.at ([131.130.3.110] helo=joan.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HsCfC-0005Gl-Jk; Sun, 27 May 2007 08:55:38 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by joan.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HsCfC-0004xL-If; Sun, 27 May 2007 08:55:38 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: "Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl>
Subject: Re: [Axiom-mail]  Defining piece-wise functions and drawing,
	integrating, ...
References: <20070526224344.GA12166@blackstar.oemrawsingh.xs4all.nl>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 27 May 2007 08:55:38 +0200
In-Reply-To: <20070526224344.GA12166@blackstar.oemrawsingh.xs4all.nl>
Message-ID: <9q3b1ig3h1.fsf@aquin.mat.univie.ac.at>
Lines: 55
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sun, 27 May 2007 06:55:49 -0000

Dear Sumant,

You have sent an excellent example!

"Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl> writes:

> Say, I wish to define a piece-wise function,
> 
> (1) -> f(x|x<0)==-x**2
>                                                                    Type: Void
> (2) -> f(x)==x**2
>                                                                    Type: Void
> (3) -> draw(f(x),x=-1..1)
>    Compiling function f with type Variable x -> Polynomial Integer 

Reading this line, you might find out what happened: axiom interprets your
function f as being from Variable x to Polynomial Integer.  Try - in a fresh
session -

  )set message bottom on

(or shorter, )se me bo on) and

  x<0

You will see, x is interpreted as a polynomial integer! Thus, the inequality
x<0 in your function definition will never hold!

There is a way out though: tell axiom to draw a function from DoubleFloat to
DoubleFloat:

  draw(f, -1..1)

Look carefully at the messages, and look up "draw" in HyperDoc or with

  )display operations draw

(shorter: )di op draw)


> If I now continue to integrate,
> 
> (4) -> integrate(f(x),x=-1..1)

Here, I think, you are out of luck.  axiom's Expression Domain does not yet
provide piecewise functions.  You can only do it numerically:

(19) -> romberg(f, -1,1,0.1,0.1,10,20)

   (19)  [value= 0.0,error= 0.0,totalpts= 2049,success= true]
   Type: Record(value: Float,error: Float,totalpts: Integer,success: Boolean)

hope that helps,

Martin




From MAILER-DAEMON Sun May 27 05:53:11 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HsFR1-00036c-3l
	for mharc-axiom-mail@gnu.org; Sun, 27 May 2007 05:53:11 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HsFQy-00036R-Sa
	for axiom-mail@nongnu.org; Sun, 27 May 2007 05:53:08 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HsFQx-00034l-DR
	for axiom-mail@nongnu.org; Sun, 27 May 2007 05:53:08 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HsFQx-00034f-8A
	for axiom-mail@nongnu.org; Sun, 27 May 2007 05:53:07 -0400
Received: from ug-out-1314.google.com ([66.249.92.174])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <amca01@gmail.com>) id 1HsFQw-0003iy-SJ
	for axiom-mail@nongnu.org; Sun, 27 May 2007 05:53:07 -0400
Received: by ug-out-1314.google.com with SMTP id a2so1296219ugf
	for <axiom-mail@nongnu.org>; Sun, 27 May 2007 02:53:05 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed; d=gmail.com; s=beta;
	h=domainkey-signature:received:received:message-id:date:from:to:subject:mime-version:content-type;
	b=uR57fmEVfVd22pFN8SdO+20MHhPBaTH+aJdiR6P9vmeA4xnliIZEtpd/CGctfcgvDCD0MldtoFRDi32KdfanoAhIIuUCoVAt3oEOBtc8NEwiBntsqjHRjgP6SNiUKHFEnQUiYVAJttkH1hziIYSCLYiTcic1n/USfB5YxhwyoqE=
DomainKey-Signature: a=rsa-sha1; c=nofws; d=gmail.com; s=beta;
	h=received:message-id:date:from:to:subject:mime-version:content-type;
	b=QooOQdI4dDLY8dJ30Q25o3yJ9fdH2BZEdJzQT3ITZpEi2XPS8PVBZ2RZztKhW+7bxhQsgBjjRAEmWwF9NRPu+zKxIDvt7yP/Y5VUM3aTQxYCjgjoXiHsKAKSlL3Q2d3sYLokNh2W8OmJyCNFF6oEWI2PIe0W4G9rTi5P0wWoIng=
Received: by 10.67.121.15 with SMTP id y15mr4370412ugm.1180259585499;
	Sun, 27 May 2007 02:53:05 -0700 (PDT)
Received: by 10.66.254.17 with HTTP; Sun, 27 May 2007 02:53:05 -0700 (PDT)
Message-ID: <1d67a53c0705270253x37214691s630e5d3c29e5c99c@mail.gmail.com>
Date: Sun, 27 May 2007 19:53:05 +1000
From: "Alasdair McAndrew" <amca01@gmail.com>
To: axiom-mail@nongnu.org
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_28343_4700588.1180259585473"
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Subject: [Axiom-mail] Inverting a matrix over a modular integer ring
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sun, 27 May 2007 09:53:09 -0000

------=_Part_28343_4700588.1180259585473
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Suppose I create the matrix

 M:=matrix([[random()$PF(19) for i in 1..3] for j in 1..3])

Assuming the determinant is non-zero, then I can invert the matrix in the
finite field PF(19).  But suppose I enter

N:=matrix([[random()$ZMOD(20) for i in 1..3] for j in 1..3])

If the determinant is relatively prime to 20, then the inverse of N exists
over the ring ZMOD(20).  But division is not defined in ZMOD - so how do I
invert N?

Thanks,
Alasdair

------=_Part_28343_4700588.1180259585473
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Suppose I create the matrix<br><br>&nbsp;M:=matrix([[random()$PF(19) for i in 1..3] for j in 1..3])<br><br>Assuming the determinant is non-zero, then I can invert the matrix in the finite field PF(19).&nbsp; But suppose I enter<br><br>
N:=matrix([[random()$ZMOD(20) for i in 1..3] for j in 1..3])<br><br>If the determinant is relatively prime to 20, then the inverse of N exists over the ring ZMOD(20).&nbsp; But division is not defined in ZMOD - so how do I invert N?
<br><br>Thanks,<br>Alasdair<br>

------=_Part_28343_4700588.1180259585473--



From MAILER-DAEMON Sun May 27 06:08:02 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HsFfO-0002zj-5X
	for mharc-axiom-mail@gnu.org; Sun, 27 May 2007 06:08:02 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HsFfN-0002zd-KI
	for axiom-mail@nongnu.org; Sun, 27 May 2007 06:08:01 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HsFfM-0002zQ-6f
	for axiom-mail@nongnu.org; Sun, 27 May 2007 06:08:01 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HsFfM-0002zN-33
	for axiom-mail@nongnu.org; Sun, 27 May 2007 06:08:00 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1HsFfL-0004j5-Rm
	for axiom-mail@nongnu.org; Sun, 27 May 2007 06:08:00 -0400
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HsFfK-0006N5-6l; Sun, 27 May 2007 12:07:58 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HsFfK-0007So-4f; Sun, 27 May 2007 12:07:58 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: "Alasdair McAndrew" <amca01@gmail.com>
Subject: Re: [Axiom-mail] Inverting a matrix over a modular integer ring
References: <1d67a53c0705270253x37214691s630e5d3c29e5c99c@mail.gmail.com>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 27 May 2007 12:07:57 +0200
In-Reply-To: <1d67a53c0705270253x37214691s630e5d3c29e5c99c@mail.gmail.com>
Message-ID: <9qlkfa7f5u.fsf@aquin.mat.univie.ac.at>
Lines: 19
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sun, 27 May 2007 10:08:01 -0000

"Alasdair McAndrew" <amca01@gmail.com> writes:

> Suppose I create the matrix
> 
>  M:=matrix([[random()$PF(19) for i in 1..3] for j in 1..3])
> 
> Assuming the determinant is non-zero, then I can invert the matrix in the
> finite field PF(19).  But suppose I enter
> 
> N:=matrix([[random()$ZMOD(20) for i in 1..3] for j in 1..3])
> 
> If the determinant is relatively prime to 20, then the inverse of N exists
> over the ring ZMOD(20).  But division is not defined in ZMOD - so how do I
> invert N?

Look up ZMOD in HyperDoc!  recip is your friend (works for all Monoids, I
think)

Martin




From MAILER-DAEMON Sun May 27 08:43:36 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HsI5w-0006Bz-A1
	for mharc-axiom-mail@gnu.org; Sun, 27 May 2007 08:43:36 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HsI5v-0006Aw-EV
	for axiom-mail@nongnu.org; Sun, 27 May 2007 08:43:35 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HsI5u-00067J-17
	for axiom-mail@nongnu.org; Sun, 27 May 2007 08:43:35 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HsI5t-00066t-Oo
	for axiom-mail@nongnu.org; Sun, 27 May 2007 08:43:33 -0400
Received: from mta15.mail.adelphia.net ([68.168.78.77] helo=mta15.adelphia.net)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <rayrogers@roadrunner.com>) id 1HsI5t-0002RZ-8J
	for axiom-mail@nongnu.org; Sun, 27 May 2007 08:43:33 -0400
Received: from rrogers-linux-2.local ([76.179.97.159]) by mta15.adelphia.net
	(InterMail vM.6.01.05.04 201-2131-123-105-20051025) with ESMTP
	id <20070527124330.NVRI21462.mta15.adelphia.net@rrogers-linux-2.local>
	for <axiom-mail@nongnu.org>; Sun, 27 May 2007 08:43:30 -0400
Message-ID: <46597CF0.7010607@roadrunner.com>
Date: Sun, 27 May 2007 08:43:28 -0400
From: "Raymond E. Rogers" <rayrogers@roadrunner.com>
Organization: A constant variable
User-Agent: Thunderbird 2.0.0.0 (X11/20070505)
MIME-Version: 1.0
To: axiom-mail@nongnu.org
Subject: Re: [Axiom-mail] 	Defining piece-wise functions and drawing,
	integrating, ...
References: <20070526224344.GA12166@blackstar.oemrawsingh.xs4all.nl>
In-Reply-To: <20070526224344.GA12166@blackstar.oemrawsingh.xs4all.nl>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-detected-kernel: Solaris 8 (2)
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: rrogers@plaidheron.com
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sun, 27 May 2007 12:43:35 -0000

Sumant S.R. Oemrawsingh wrote:
>
> Say, I wish to define a piece-wise function,
>
> (1) -> f(x|x<0)==-x**2
>                                                                    Type: Void
> (2) -> f(x)==x**2
>                                                                    Type: Void
> (3) -> draw(f(x),x=-1..1)
>    Compiling function f with type Variable x -> Polynomial Integer 
>   
As an aside I would like to point out that there is an analytic
extension from Non-Standard analysis (specifically the Dirac Delta
function) that provides a neat uniform framework to describing,
transforming, and manipulating piecewise polynomials. It consists of
simply writing out the waveforms in terms of the Dirac Delta function of
various orders. For instance a ramp that starts at zero, continues for
1.3 units and then goes back to zero is:
int(int(Dirac(x))-int(int(Dirac(x-1.5)) -1.5*int(delta(x-1.5)) or
d^2(x)-d^2(x-1.5)-1.5*d^1(x-1.5)
I haven't seen this approach properly implemented in CAS packages, and
don't know if it's of any use. I have used it to do Laplace and Mellin
transforms/analysis of discontinuous waveforms though; and found it
simplifies the calculations a lot.

Ray



From MAILER-DAEMON Sun May 27 10:51:56 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HsK68-0000Hp-Kl
	for mharc-axiom-mail@gnu.org; Sun, 27 May 2007 10:51:56 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HsK67-0000Hk-A1
	for axiom-mail@nongnu.org; Sun, 27 May 2007 10:51:55 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HsK64-0000HY-TX
	for axiom-mail@nongnu.org; Sun, 27 May 2007 10:51:54 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HsK64-0000HV-Mw
	for axiom-mail@nongnu.org; Sun, 27 May 2007 10:51:52 -0400
Received: from web56705.mail.re3.yahoo.com ([66.196.97.64])
	by monty-python.gnu.org with smtp (Exim 4.60)
	(envelope-from <smustudent1@yahoo.com>) id 1HsK64-0005Nz-AF
	for axiom-mail@nongnu.org; Sun, 27 May 2007 10:51:52 -0400
Received: (qmail 62751 invoked by uid 60001); 27 May 2007 14:51:51 -0000
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws; s=s1024; d=yahoo.com;
	h=X-YMail-OSG:Received:Date:From:Subject:To:In-Reply-To:MIME-Version:Content-Type:Content-Transfer-Encoding:Message-ID;
	b=j0XHMOSTz6Z9wRarD6ksEW0xItr2OKWZTswKzmtmRfo0RZP+Zn/9SKIXB9pxluu3c+7Z2f1luQ7YOxf9Q9M/T4nLAlOd2tKXJX/5wdXcjfY1MS3A0Wws43WJYFrvNDfHBrkcCJgLD2BgU1YVAt8DT5+fO+AW+iBzZci7SEO+eqI=;
X-YMail-OSG: BLe3vZQVM1mVW2vhMOC.KPo1plVOdMhIVxWUh.Qk7.b_den7t2iAXbnGiVXEqAZjYPcxCpQq.IhQE5kwNBD1Z7t6d8q2HcIlQyjILm2xnXDWNRBt0I6L529Gf5Kw0Q--
Received: from [67.163.139.88] by web56705.mail.re3.yahoo.com via HTTP;
	Sun, 27 May 2007 07:51:51 PDT
Date: Sun, 27 May 2007 07:51:51 -0700 (PDT)
From: C Y <smustudent1@yahoo.com>
To: rrogers@plaidheron.com, axiom-mail@nongnu.org
In-Reply-To: <46597CF0.7010607@roadrunner.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
Message-ID: <737335.62538.qm@web56705.mail.re3.yahoo.com>
X-detected-kernel: FreeBSD 4.7-5.2 (or MacOS X 10.2-10.4) (2)
Cc: 
Subject: [Axiom-mail] Dirac Delta
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sun, 27 May 2007 14:51:55 -0000

Oddly enough, I was just looking at Dirac Deltas (from a physics
standpoint, a CAS with a good handle on the Dirac Delta is a Good
Thing).

It looks like a mathematically rigorous definition of the Dirac Delta
would require generalized functions (a.k.a distributions).  I don't
know much about them and it looks like a rather advanced branch of
mathematics.  Whether it would fit into Axiom (or whether it might
already be there in some form) I don't know, but certainly it's a Topic
Of Interest - someday we will want to deal with the Dirac Delta and
when we do it the treatment needs to be up to Axiom's standards for
mathematical correctness.  Mathematica has a function dealing with it
but I'm not sure how their definition relates to the latest research.

It looks like the place to start would be the work of Laurent Schwartz.
 Apparently there are theoretical problems with multiplying
distributions.   Colombeau algebra may be of some interest there. 
Prime candidates for literate programs ;-).

Cheers,
CY


      ____________________________________________________________________________________
Park yourself in front of a world of choices in alternative vehicles. Visit the Yahoo! Auto Green Center.
http://autos.yahoo.com/green_center/ 



From MAILER-DAEMON Sun May 27 14:49:41 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HsNoD-0001jH-HP
	for mharc-axiom-mail@gnu.org; Sun, 27 May 2007 14:49:41 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HsNoC-0001im-91
	for axiom-mail@nongnu.org; Sun, 27 May 2007 14:49:40 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HsNo9-0001ia-ST
	for axiom-mail@nongnu.org; Sun, 27 May 2007 14:49:39 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HsNo9-0001iX-Nb
	for axiom-mail@nongnu.org; Sun, 27 May 2007 14:49:37 -0400
Received: from wa-out-1112.google.com ([209.85.146.182])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <ondrej.certik@gmail.com>) id 1HsNo9-0006yG-7r
	for axiom-mail@nongnu.org; Sun, 27 May 2007 14:49:37 -0400
Received: by wa-out-1112.google.com with SMTP id l35so613844waf
	for <axiom-mail@nongnu.org>; Sun, 27 May 2007 11:49:35 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed; d=gmail.com; s=beta;
	h=domainkey-signature:received:received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
	b=qSrtqEZPhT34yBgMb3uDeXh6LyTgxzBRd9zYuMfZGGX91oF6vBi7mCKkMDGuIP2JZ3gPkP2Lhimfmw7vAMpHMLK/bJV8Otw4Ujzg+kjT35cCg9WmzeZVIjo4eJYL/Op/iLb88lqfl8zkfq7AYvOkhunOFxnAPFl16aFY5X0Gy7s=
DomainKey-Signature: a=rsa-sha1; c=nofws; d=gmail.com; s=beta;
	h=received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
	b=TerwJPe8SADGbEe3eY0urz7r9HRZK4pPrZ5em4EY2iD87m8MlhrC3AcefESDWnD4UGwHlcmVXpmvYjNY7QCCGnQuDmkt55Lo9dLsUAz1cNJaVePMf+XPhGCJ8YX/dQZwdHz1v6Mjnlk6K1mt9mQYRA/u3BTKv0ittI73cWEbXxk=
Received: by 10.114.178.1 with SMTP id a1mr2517512waf.1180291775879;
	Sun, 27 May 2007 11:49:35 -0700 (PDT)
Received: by 10.115.73.12 with HTTP; Sun, 27 May 2007 11:49:35 -0700 (PDT)
Message-ID: <85b5c3130705271149w2c68de7aw6e0582cbfea7ac17@mail.gmail.com>
Date: Sun, 27 May 2007 20:49:35 +0200
From: "Ondrej Certik" <ondrej@certik.cz>
Sender: ondrej.certik@gmail.com
To: "C Y" <smustudent1@yahoo.com>
Subject: Re: [Axiom-mail] Dirac Delta
In-Reply-To: <737335.62538.qm@web56705.mail.re3.yahoo.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <46597CF0.7010607@roadrunner.com>
	<737335.62538.qm@web56705.mail.re3.yahoo.com>
X-Google-Sender-Auth: 1a549102fe1cb1fc
X-detected-kernel: Linux 2.6 (newer, 2)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sun, 27 May 2007 18:49:40 -0000

> Oddly enough, I was just looking at Dirac Deltas (from a physics
> standpoint, a CAS with a good handle on the Dirac Delta is a Good
> Thing).
>
> It looks like a mathematically rigorous definition of the Dirac Delta
> would require generalized functions (a.k.a distributions).  I don't
> know much about them and it looks like a rather advanced branch of
> mathematics.  Whether it would fit into Axiom (or whether it might
> already be there in some form) I don't know, but certainly it's a Topic
> Of Interest - someday we will want to deal with the Dirac Delta and
> when we do it the treatment needs to be up to Axiom's standards for
> mathematical correctness.  Mathematica has a function dealing with it
> but I'm not sure how their definition relates to the latest research.
>
> It looks like the place to start would be the work of Laurent Schwartz.
>  Apparently there are theoretical problems with multiplying
> distributions.   Colombeau algebra may be of some interest there.
> Prime candidates for literate programs ;-).

I was also thinking how to implement delta functions. I know the
"distribution" way of doing it, however, I don't see any advantage of
using the

<delta, phi> = phi(0)

formalism instead of writing directly delta(0)phi(x) and of course
understand that in order to give a precise meaning to it, one needs to
integrate it and thus arriving at the <delta, phi> formalism, which is
mathematically precise, but to me it is as precise as writing the
delta(0)phi(x) directly. For a research in mathematics it can be maybe
useful to use <delta, phi> formalism, but I don't know of any
application of delta functions (for example in quantum mechanics or
the quantum field theory) where the simpler formalism delta(0)phi(x)
would give less precise (or less well-defined) results.

So the way it is done in Mathematica is the way I like and I'll do the
same in SymPy, when I find some time.

Ondrej



From MAILER-DAEMON Sun May 27 18:52:46 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HsRbR-0005SQ-UW
	for mharc-axiom-mail@gnu.org; Sun, 27 May 2007 18:52:46 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HsRbP-0005Ru-K5
	for axiom-mail@nongnu.org; Sun, 27 May 2007 18:52:43 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HsRbN-0005Rd-Qg
	for axiom-mail@nongnu.org; Sun, 27 May 2007 18:52:42 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HsRbN-0005Ra-Le
	for axiom-mail@nongnu.org; Sun, 27 May 2007 18:52:41 -0400
Received: from web56711.mail.re3.yahoo.com ([66.196.97.70])
	by monty-python.gnu.org with smtp (Exim 4.60)
	(envelope-from <smustudent1@yahoo.com>) id 1HsRbN-0004LH-4O
	for axiom-mail@nongnu.org; Sun, 27 May 2007 18:52:41 -0400
Received: (qmail 1241 invoked by uid 60001); 27 May 2007 22:52:40 -0000
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws; s=s1024; d=yahoo.com;
	h=X-YMail-OSG:Received:Date:From:Subject:To:Cc:In-Reply-To:MIME-Version:Content-Type:Content-Transfer-Encoding:Message-ID;
	b=OeWnfQDj0XNpg3FAksYUc9aVYoyJcSh1rUEp23nF65IDSBa+YZCilOlIUOBBkPFM6p7SpXE2UY3TBDeG5KMnk0jI681aOnnSnajQRKi7rOt6ojf36KxH/UOuUoKUr8EYWdt5jYlAbYeatAE8E8yKOIYv2zajztqD4B3eQv2HURU=;
X-YMail-OSG: k1YguVYVM1mKQ1ZjWFlpRuhvMSkatZeuJr4dCeN779a.qM5Pe0V_IKOu6m0T4VEayOf_vD56adqZncJWNTe7iTPWpZBP60kSedC14e7T9MZfBWKELHurtt3MLOpPCsFq5Cm.IU3TfVsH0L5r6.A4jOUu8w--
Received: from [128.237.227.216] by web56711.mail.re3.yahoo.com via HTTP;
	Sun, 27 May 2007 15:52:40 PDT
Date: Sun, 27 May 2007 15:52:40 -0700 (PDT)
From: C Y <smustudent1@yahoo.com>
Subject: Re: [Axiom-mail] Dirac Delta
To: Ondrej Certik <ondrej@certik.cz>
In-Reply-To: <85b5c3130705271149w2c68de7aw6e0582cbfea7ac17@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
Message-ID: <578275.848.qm@web56711.mail.re3.yahoo.com>
X-detected-kernel: FreeBSD 4.7-5.2 (or MacOS X 10.2-10.4) (2)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sun, 27 May 2007 22:52:44 -0000


--- Ondrej Certik <ondrej@certik.cz> wrote:

> > It looks like the place to start would be the work of Laurent
> > Schwartz.

Incidentally it looks like the key papers are in French - does anyone
know if there are "authoritative" translations anywhere?  If not it
looks like some quality time with Babelfish and a French->English
dictionary are somewhere in the future...  Once a proper pamphlet is
written that should contain all necessary background and theory but
someone has to write it...

> I was also thinking how to implement delta functions. I know the
> "distribution" way of doing it, however, I don't see any advantage of
> using the
> 
> <delta, phi> = phi(0)
> 
> formalism instead of writing directly delta(0)phi(x) and of course
> understand that in order to give a precise meaning to it, one needs
> to integrate it and thus arriving at the <delta, phi> formalism, 
> which is mathematically precise, but to me it is as precise as
> writing the delta(0)phi(x) directly. 

Indeed, I found a paper looking at the formalization of the Dirac Delta
and how it had (or hadn't) impacted physics.  An interesting question,
but another part of that question from my standpoint is whether the
lack of tools to handle it "properly" with a minimum of trouble would
let the formally correct way pick up more steam.

Plus, from an Axiom standpoint, being rigorously correct seems like the
only reasonable way to proceed.  Scalability and all that.  How much
work it will be is a different question, of course...

> For a research in mathematics it can be maybe useful to use <delta,
> phi> formalism, but I don't know of any application of delta 
> functions (for example in quantum mechanics or the quantum field
> theory) where the simpler formalism delta(0)phi(x)
> would give less precise (or less well-defined) results.

That's probably true, supported by the fact that physics as a whole
seems to be able to proceed on those assumptions without running into
trouble.  However, while it may be that nature happens to restrict
problems to those where non-formal approaches aren't a problem, I think
it would be better practice for Axiom to not make this assumption and
instead implement the correct formalism.

> So the way it is done in Mathematica is the way I like and I'll do
> the same in SymPy, when I find some time.

For Axiom I think the logical approach is to implement the theory of
distributions/general functions, with Dirac Deltas being built on the
framework.  There may be a paper or two in verifying that major physics
calculation results of the past half century hold up under full formal
mathematical treatment, although I doubt the physics community itself
would be terribly worried.  (It works, its descriptive, we're going
with it.)  The benefits of going fully formal in Axiom might not appear
in current practice, but it is not known whether they may appear in the
future and the safe bet is to put in the work and make it rigorous.

Cheers,
CY


 
____________________________________________________________________________________
Looking for earth-friendly autos? 
Browse Top Cars by "Green Rating" at Yahoo! Autos' Green Center.
http://autos.yahoo.com/green_center/



From MAILER-DAEMON Mon May 28 02:32:13 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HsYm5-00060H-Do
	for mharc-axiom-mail@gnu.org; Mon, 28 May 2007 02:32:13 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HsYm3-00060B-F2
	for axiom-mail@nongnu.org; Mon, 28 May 2007 02:32:11 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HsYm0-0005zz-W3
	for axiom-mail@nongnu.org; Mon, 28 May 2007 02:32:10 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HsYm0-0005zw-Qi
	for axiom-mail@nongnu.org; Mon, 28 May 2007 02:32:08 -0400
Received: from ug-out-1314.google.com ([66.249.92.170])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <amca01@gmail.com>) id 1HsYlz-0003aq-97
	for axiom-mail@nongnu.org; Mon, 28 May 2007 02:32:08 -0400
Received: by ug-out-1314.google.com with SMTP id a2so1426833ugf
	for <axiom-mail@nongnu.org>; Sun, 27 May 2007 23:32:00 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed; d=gmail.com; s=beta;
	h=domainkey-signature:received:received:message-id:date:from:to:subject:mime-version:content-type;
	b=fJEfsYRqhvKId1uuVJQ3EVPN1sDGtsKODPT8kKrsbA4pbxRGe8elkkmTUI7jdZ1CvCOE3wiLaYHxUKiFVM87yuAow3uNM3f/O67pLhzhfh8yHzXYPrRoYxtEU/XiCxYWBD28f5M1u0uA2tdl333mjkj7oUcPV1bCqdNi6oXa5ZI=
DomainKey-Signature: a=rsa-sha1; c=nofws; d=gmail.com; s=beta;
	h=received:message-id:date:from:to:subject:mime-version:content-type;
	b=ElO8B72ZKMajNQOcOYAl7tl951EBw9cGJuYSPDd5UrOKLP6WvYkaWABow3Kqs/9OOqH8gRJbeC/FcGS3t104Td4l2tkFoYgQ0iz/m7q3hlKdWqsgL8CO/zX9GPAwXvMujnhHO138zKwRhjgao0r2gghV/+NejkmwTWCtld9MMUM=
Received: by 10.67.89.6 with SMTP id r6mr5065824ugl.1180333920067;
	Sun, 27 May 2007 23:32:00 -0700 (PDT)
Received: by 10.66.254.17 with HTTP; Sun, 27 May 2007 23:32:00 -0700 (PDT)
Message-ID: <1d67a53c0705272331n64f712ach7eb53f44642a8a66@mail.gmail.com>
Date: Mon, 28 May 2007 16:32:00 +1000
From: "Alasdair McAndrew" <amca01@gmail.com>
To: axiom-mail@nongnu.org
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_32803_14611932.1180333920037"
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Subject: [Axiom-mail] Going mad with pattern matching
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 28 May 2007 06:32:11 -0000

------=_Part_32803_14611932.1180333920037
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

I'm experimenting with the pattern matching facility of Axiom; with the aim
of developing a z-transform routine.  This is what I have so far:

zt:=operator 'zt

ztransrules := rule
  zt(f+g,n,z) == ztrans(f,n,z)+ztrans(g,n,z)     -- two lines for linearity
  zt((a | freeOf?(a,n)),n,z) == a*ztrans(f,n,z)
  zt(0,n,z) == 0       -- a couple of end cases, probably not needed
  zt(1,n,z) == z/(z-1)
  zt(a | freeOf?(a,n),n,z) == a*z/(z-1)  -- now some standard rules
  zt((a | freeOf?(a,n))^n,n,z) == z/(z-a)
  zt(n,n,z) == z/(z-1)^2
  zt(n^(a | integer?(a) and a>1),n,z) == tmp:=z/(z-1)
                                              for i in 1..a repeat
                                                tmp:=-D(tmp,z)
                                              tmp

ztrans(f,n,z)==ztransrules zt(f,n,z)

But this doesn't quite work.  I'd be grateful for a little help here!  (Then
I'll see if I can use the z-transform to solve some difference equations.)

Thanks,
Alasdair

------=_Part_32803_14611932.1180333920037
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

I&#39;m experimenting with the pattern matching facility of Axiom; with the aim of developing a z-transform routine.&nbsp; This is what I have so far:<br><br><span style="font-family: courier new,monospace;">zt:=operator &#39;zt
</span><br style="font-family: courier new,monospace;"><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">ztransrules := rule</span><br style="font-family: courier new,monospace;">
<span style="font-family: courier new,monospace;">&nbsp; zt(f+g,n,z) == ztrans(f,n,z)+ztrans(g,n,z)&nbsp;&nbsp;&nbsp;&nbsp; -- two lines for linearity</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">
&nbsp; zt((a | freeOf?(a,n)),n,z) == a*ztrans(f,n,z)</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">&nbsp; zt(0,n,z) == 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -- a couple of end cases, probably not needed</span>
<br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">&nbsp; zt(1,n,z) == z/(z-1)</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">
&nbsp; zt(a | freeOf?(a,n),n,z) == a*z/(z-1)&nbsp; -- now some standard rules</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">&nbsp; zt((a | freeOf?(a,n))^n,n,z) == z/(z-a)</span><br style="font-family: courier new,monospace;">
<span style="font-family: courier new,monospace;">&nbsp; zt(n,n,z) == z/(z-1)^2</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">&nbsp; zt(n^(a | integer?(a) and a&gt;1),n,z) == tmp:=z/(z-1)&nbsp; 
</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for i in 1..a repeat</span><br style="font-family: courier new,monospace;">
<span style="font-family: courier new,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tmp:=-D(tmp,z)</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tmp
</span><br style="font-family: courier new,monospace;"><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">ztrans(f,n,z)==ztransrules zt(f,n,z)</span><br><br>But this doesn&#39;t quite work.&nbsp; I&#39;d be grateful for a little help here!&nbsp; (Then I&#39;ll see if I can use the z-transform to solve some difference equations.)
<br><br>Thanks,<br>Alasdair<br>

------=_Part_32803_14611932.1180333920037--



From MAILER-DAEMON Mon May 28 09:11:10 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hsf0A-0008WE-Cz
	for mharc-axiom-mail@gnu.org; Mon, 28 May 2007 09:11:10 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hsf07-0008W0-QV
	for axiom-mail@nongnu.org; Mon, 28 May 2007 09:11:07 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hsf05-0008Vo-Br
	for axiom-mail@nongnu.org; Mon, 28 May 2007 09:11:06 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hsf05-0008Vl-4p
	for axiom-mail@nongnu.org; Mon, 28 May 2007 09:11:05 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1Hsf05-0001uP-6b
	for axiom-mail@nongnu.org; Mon, 28 May 2007 09:11:05 -0400
Received: from joan.univie.ac.at ([131.130.3.110] helo=joan.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1Hsf03-0005i3-C8; Mon, 28 May 2007 15:11:03 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by joan.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1Hsf03-0003Or-9l; Mon, 28 May 2007 15:11:03 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: "Alasdair McAndrew" <amca01@gmail.com>
Subject: Re: [Axiom-mail] Going mad with pattern matching
References: <1d67a53c0705272331n64f712ach7eb53f44642a8a66@mail.gmail.com>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 28 May 2007 15:11:02 +0200
In-Reply-To: <1d67a53c0705272331n64f712ach7eb53f44642a8a66@mail.gmail.com>
Message-ID: <9qzm3p6ql5.fsf@aquin.mat.univie.ac.at>
Lines: 8
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 28 May 2007 13:11:08 -0000

"Alasdair McAndrew" <amca01@gmail.com> writes:

> But this doesn't quite work.  I'd be grateful for a little help here!  (Then
> I'll see if I can use the z-transform to solve some difference equations.)

Could you please say (on the list!) what does not work?

Martin




From MAILER-DAEMON Mon May 28 12:52:42 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HsiSY-0001Ba-Lw
	for mharc-axiom-mail@gnu.org; Mon, 28 May 2007 12:52:42 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HsiSX-0001A5-GF
	for axiom-mail@nongnu.org; Mon, 28 May 2007 12:52:41 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HsiSU-00017J-PU
	for axiom-mail@nongnu.org; Mon, 28 May 2007 12:52:41 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HsiSU-000172-K4
	for axiom-mail@nongnu.org; Mon, 28 May 2007 12:52:38 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1HsiSU-0005QO-2i
	for axiom-mail@nongnu.org; Mon, 28 May 2007 12:52:38 -0400
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HsiSS-0008PS-BO; Mon, 28 May 2007 18:52:36 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HsiSS-0008EM-A9; Mon, 28 May 2007 18:52:36 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: "Alasdair McAndrew" <amca01@gmail.com>
Subject: Re: [Axiom-mail] Going mad with pattern matching
References: <1d67a53c0705272331n64f712ach7eb53f44642a8a66@mail.gmail.com>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 28 May 2007 18:52:36 +0200
In-Reply-To: <1d67a53c0705272331n64f712ach7eb53f44642a8a66@mail.gmail.com>
Message-ID: <9qmyzolwkr.fsf@aquin.mat.univie.ac.at>
Lines: 35
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 28 May 2007 16:52:41 -0000

"Alasdair McAndrew" <amca01@gmail.com> writes:
> But this doesn't quite work.  I'd be grateful for a little help here!  (Then
> I'll see if I can use the z-transform to solve some difference equations.)

it seems that rules don't like local function definitions too much.  The usual
syntax would be

  (op1; op2; ...; opn)

which returns the value of opn, but I had no luck with this construction.

zt:=operator 'zt

help(z,a) == 
    tmp := z/(z-1)
    for i in 1..a repeat 
        tmp:=-D(tmp,z)
    tmp

ztransrules := rule
  zt(f+g,n,z) == ztrans(f,n,z)+ztrans(g,n,z)     -- two lines for linearity
  zt((a | freeOf?(a,n)),n,z) == a*ztrans(f,n,z)
  zt(0,n,z) == 0       -- a couple of end cases, probably not needed
  zt(1,n,z) == z/(z-1)
  zt(a | freeOf?(a,n),n,z) == a*z/(z-1)  -- now some standard rules
  zt((a | freeOf?(a,n))^n,n,z) == z/(z-a)
  zt(n,n,z) == z/(z-1)^2
  zt(n^(a | integer?(a) and a>1),n,z) == help(z, a)

ztrans(f,n,z)==ztransrules zt(f,n,z)


Does this answer your question?  I'm a little in the dark, I must say.

Martin




From MAILER-DAEMON Mon May 28 19:19:46 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HsoV8-00082f-IL
	for mharc-axiom-mail@gnu.org; Mon, 28 May 2007 19:19:46 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HsoV7-00082a-9M
	for axiom-mail@nongnu.org; Mon, 28 May 2007 19:19:45 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HsoV6-00081w-Nn
	for axiom-mail@nongnu.org; Mon, 28 May 2007 19:19:45 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HsoV6-00081R-Ij
	for axiom-mail@nongnu.org; Mon, 28 May 2007 19:19:44 -0400
Received: from ug-out-1314.google.com ([66.249.92.173])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <amca01@gmail.com>) id 1HsoV6-0008J6-1k
	for axiom-mail@nongnu.org; Mon, 28 May 2007 19:19:44 -0400
Received: by ug-out-1314.google.com with SMTP id a2so1590218ugf
	for <axiom-mail@nongnu.org>; Mon, 28 May 2007 16:19:43 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed; d=gmail.com; s=beta;
	h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=SgSs0HImYN9dw7IDJZyW5evJdlbQx9/czNkDQVUiYA5s30z4t+0EbSjj9LuMXol1LKUxwNg7kMmsh0e+WbeAlfzJyG5lIMFgm3NrxpUuSfWQw3BoQW4lTX7MiydS6qLRtOhawqEK2mXIO059ky2dmNIFdWNUdnUzLMye0zb6CsI=
DomainKey-Signature: a=rsa-sha1; c=nofws; d=gmail.com; s=beta;
	h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=cHpqdihHF+2EkaYazNjSPi+uNXIpqAPs/5J1iDSb2xnsBBzxQ1+nCp2wWnQyuZ+7LRc1WcoM7iZp1rI9QSIDOKRoBWpJ/5i/8uchlSYx4KaJ7iMFrQ5EWr3e6VZpWHNY3SXSyVI8oZn3VCFCzJY7qmqFhBfBC045z70CBuU2Xhs=
Received: by 10.67.92.1 with SMTP id u1mr5605308ugl.1180394382913;
	Mon, 28 May 2007 16:19:42 -0700 (PDT)
Received: by 10.66.254.17 with HTTP; Mon, 28 May 2007 16:19:42 -0700 (PDT)
Message-ID: <1d67a53c0705281619p2218bf73vb98a3dd9f1d87e4f@mail.gmail.com>
Date: Tue, 29 May 2007 09:19:42 +1000
From: "Alasdair McAndrew" <amca01@gmail.com>
To: "Martin Rubey" <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
Subject: Re: [Axiom-mail] Going mad with pattern matching
In-Reply-To: <9qmyzolwkr.fsf@aquin.mat.univie.ac.at>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_39828_13047661.1180394382877"
References: <1d67a53c0705272331n64f712ach7eb53f44642a8a66@mail.gmail.com>
	<9qmyzolwkr.fsf@aquin.mat.univie.ac.at>
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Cc: 
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 28 May 2007 23:19:45 -0000

------=_Part_39828_13047661.1180394382877
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Thanks, Martin,

As always I am helped by you!  I have two questions; maybe you can answer
them:

1)  How do I include linearity in the pattern matching rules?  At present,
the command

ztrans(2+3^n,nz)

which should return the result

2z/(z-1)+z/(z-3)

produces

(2+3^n)z/(z-1).

That is, the pattern matcher incorrectly applies the rule

zt(a | freeOf?(a,n),n,z) == a*z/(z-1)

even though 2+3^n is not free of n!

2)  How do I force answers to be returned in factored form?

Thanks,
Alasdair

On 28 May 2007 18:52:36 +0200, Martin Rubey <martin.rubey@univie.ac.at>
wrote:
>
> "Alasdair McAndrew" <amca01@gmail.com> writes:
> > But this doesn't quite work.  I'd be grateful for a little help
> here!  (Then
> > I'll see if I can use the z-transform to solve some difference
> equations.)
>
> it seems that rules don't like local function definitions too much.  The
> usual
> syntax would be
>
>   (op1; op2; ...; opn)
>
> which returns the value of opn, but I had no luck with this construction.
>
> zt:=operator 'zt
>
> help(z,a) ==
>     tmp := z/(z-1)
>     for i in 1..a repeat
>         tmp:=-D(tmp,z)
>     tmp
>
> ztransrules := rule
>   zt(f+g,n,z) == ztrans(f,n,z)+ztrans(g,n,z)     -- two lines for
> linearity
>   zt((a | freeOf?(a,n)),n,z) == a*ztrans(f,n,z)
>   zt(0,n,z) == 0       -- a couple of end cases, probably not needed
>   zt(1,n,z) == z/(z-1)
>   zt(a | freeOf?(a,n),n,z) == a*z/(z-1)  -- now some standard rules
>   zt((a | freeOf?(a,n))^n,n,z) == z/(z-a)
>   zt(n,n,z) == z/(z-1)^2
>   zt(n^(a | integer?(a) and a>1),n,z) == help(z, a)
>
> ztrans(f,n,z)==ztransrules zt(f,n,z)
>
>
> Does this answer your question?  I'm a little in the dark, I must say.
>
> Martin
>
>

------=_Part_39828_13047661.1180394382877
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Thanks, Martin,<br><br>As always I am helped by you!&nbsp; I have two questions; maybe you can answer them:<br><br>1)&nbsp; How do I include linearity in the pattern matching rules?&nbsp; At present, the command <br><br>ztrans(2+3^n,nz)<br>
<br>which should return the result<br><br>2z/(z-1)+z/(z-3)<br><br>produces<br><br>(2+3^n)z/(z-1).<br><br>That is, the pattern matcher incorrectly applies the rule<br><br><span class="q">zt(a | freeOf?(a,n),n,z) == a*z/(z-1)
<br><br>even though 2+3^n is not free of n!<br><br>2)&nbsp; How do I force answers to be returned in factored form?<br><br>Thanks,<br>Alasdair<br></span><br><div><span class="gmail_quote">On 28 May 2007 18:52:36 +0200, <b class="gmail_sendername">
Martin Rubey</b> &lt;<a href="mailto:martin.rubey@univie.ac.at">martin.rubey@univie.ac.at</a>&gt; wrote:</span><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
&quot;Alasdair McAndrew&quot; &lt;<a href="mailto:amca01@gmail.com">amca01@gmail.com</a>&gt; writes:<br>&gt; But this doesn&#39;t quite work.&nbsp;&nbsp;I&#39;d be grateful for a little help here!&nbsp;&nbsp;(Then<br>&gt; I&#39;ll see if I can use the z-transform to solve some difference equations.)
<br><br>it seems that rules don&#39;t like local function definitions too much.&nbsp;&nbsp;The usual<br>syntax would be<br><br>&nbsp;&nbsp;(op1; op2; ...; opn)<br><br>which returns the value of opn, but I had no luck with this construction.<br>
<br>zt:=operator &#39;zt<br><br>help(z,a) ==<br>&nbsp;&nbsp;&nbsp;&nbsp;tmp := z/(z-1)<br>&nbsp;&nbsp;&nbsp;&nbsp;for i in 1..a repeat<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tmp:=-D(tmp,z)<br>&nbsp;&nbsp;&nbsp;&nbsp;tmp<br><br>ztransrules := rule<br>&nbsp;&nbsp;zt(f+g,n,z) == ztrans(f,n,z)+ztrans(g,n,z)&nbsp;&nbsp;&nbsp;&nbsp; -- two lines for linearity
<br>&nbsp;&nbsp;zt((a | freeOf?(a,n)),n,z) == a*ztrans(f,n,z)<br>&nbsp;&nbsp;zt(0,n,z) == 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -- a couple of end cases, probably not needed<br>&nbsp;&nbsp;zt(1,n,z) == z/(z-1)<br>&nbsp;&nbsp;zt(a | freeOf?(a,n),n,z) == a*z/(z-1)&nbsp;&nbsp;-- now some standard rules<br>
&nbsp;&nbsp;zt((a | freeOf?(a,n))^n,n,z) == z/(z-a)<br>&nbsp;&nbsp;zt(n,n,z) == z/(z-1)^2<br>&nbsp;&nbsp;zt(n^(a | integer?(a) and a&gt;1),n,z) == help(z, a)<br><br>ztrans(f,n,z)==ztransrules zt(f,n,z)<br><br><br>Does this answer your question?&nbsp;&nbsp;I&#39;m a little in the dark, I must say.
<br><br>Martin<br><br></blockquote></div><br>

------=_Part_39828_13047661.1180394382877--



From MAILER-DAEMON Tue May 29 03:36:00 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HswFM-0007YA-Ov
	for mharc-axiom-mail@gnu.org; Tue, 29 May 2007 03:36:00 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HswFL-0007VB-3Y
	for axiom-mail@nongnu.org; Tue, 29 May 2007 03:35:59 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HswFJ-0007Sj-Hr
	for axiom-mail@nongnu.org; Tue, 29 May 2007 03:35:58 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HswFJ-0007SX-Be
	for axiom-mail@nongnu.org; Tue, 29 May 2007 03:35:57 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1HswFI-0007IQ-4v
	for axiom-mail@nongnu.org; Tue, 29 May 2007 03:35:56 -0400
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HswF5-0004h8-4m; Tue, 29 May 2007 09:35:43 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HswF5-0002D5-1s; Tue, 29 May 2007 09:35:43 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: "Alasdair McAndrew" <amca01@gmail.com>
Subject: Re: [Axiom-mail] Going mad with pattern matching
References: <1d67a53c0705272331n64f712ach7eb53f44642a8a66@mail.gmail.com>
	<9qmyzolwkr.fsf@aquin.mat.univie.ac.at>
	<1d67a53c0705281619p2218bf73vb98a3dd9f1d87e4f@mail.gmail.com>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 29 May 2007 09:35:42 +0200
In-Reply-To: <1d67a53c0705281619p2218bf73vb98a3dd9f1d87e4f@mail.gmail.com>
Message-ID: <9qy7j8xesx.fsf@aquin.mat.univie.ac.at>
Lines: 47
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 29 May 2007 07:35:59 -0000

"Alasdair McAndrew" <amca01@gmail.com> writes:

> Thanks, Martin,
> 
> As always I am helped by you!  I have two questions; maybe you can answer
> them:
> 
> 1)  How do I include linearity in the pattern matching rules?  At present,
> the command
> 
> ztrans(2+3^n,nz)
> 
> which should return the result
> 
> 2z/(z-1)+z/(z-3)
> 
> produces
> 
> (2+3^n)z/(z-1).
> 
> That is, the pattern matcher incorrectly applies the rule
> 
> zt(a | freeOf?(a,n),n,z) == a*z/(z-1)
> 
> even though 2+3^n is not free of n!

I doubt this.  I'm a little short on time though.  Thus, please do me a favour:
replace all rules with little local functions -- as I have done with "help".
Then you can say

)trace help

(replace "help" with the name of the functions you want to trace)

and you should see which rule was invoked.  To see the arguments in a nicer
form, you can use

)trace help )mathprint

but this works only after help was invoked already once.


> 2)  How do I force answers to be returned in factored form?

Later...  Short answer: you need to coerce them to an appropriate domain.

Martin




From MAILER-DAEMON Tue May 29 05:10:28 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hsxim-00020F-8q
	for mharc-axiom-mail@gnu.org; Tue, 29 May 2007 05:10:28 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hsxij-0001wH-Mv
	for axiom-mail@nongnu.org; Tue, 29 May 2007 05:10:25 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hsxii-0001uF-1q
	for axiom-mail@nongnu.org; Tue, 29 May 2007 05:10:25 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hsxih-0001uC-Nt
	for axiom-mail@nongnu.org; Tue, 29 May 2007 05:10:23 -0400
Received: from pmail30c2.megamailservers.com ([69.49.111.220])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <bill.page1@synthesis.anikast.ca>) id 1Hsxig-0008Qa-Kx
	for axiom-mail@nongnu.org; Tue, 29 May 2007 05:10:23 -0400
Received: from pmail30c2.megamailservers.com (localhost [127.0.0.1])
	by pmail30c2.megamailservers.com (8.13.6.20060614/8.13.1) with ESMTP id
	l4T9ACK4005414
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO);
	Tue, 29 May 2007 05:10:14 -0400
Received: (from webmail@localhost)
	by pmail30c2.megamailservers.com (8.13.6.20060614/8.12.2/Submit) id
	l4T9ACC0005413; Tue, 29 May 2007 05:10:12 -0400
Received: from dummy.drenet.dnd.ca (dummy.drenet.dnd.ca [131.136.1.178]) by
	webmail.anikast.ca (Webmail 2.0) with HTTP for
	<bill.page1.synthesis.anikast.ca@webmail.anikast.ca>; Tue, 29 May 2007
	05:10:12 -0400
Message-ID: <20070529051012.5ogxh2opxylwc8ko@webmail.anikast.ca>
Date: Tue, 29 May 2007 05:10:12 -0400
From: "Bill Page" <bill.page1@synthesis.anikast.ca>
To: Alasdair McAndrew <amca01@gmail.com>
Subject: Re: [Axiom-mail] Going mad with pattern matching
References: <1d67a53c0705272331n64f712ach7eb53f44642a8a66@mail.gmail.com>
	<1d67a53c0705281619p2218bf73vb98a3dd9f1d87e4f@mail.gmail.com>
In-Reply-To: <1d67a53c0705281619p2218bf73vb98a3dd9f1d87e4f@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
	charset=UTF-8;
	format="flowed"
Content-Disposition: inline
Content-Transfer-Encoding: 7bit
User-Agent: Webmail 4.0
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: Martin Rubey <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 29 May 2007 09:10:26 -0000

Quoting Alasdair McAndrew:

> ...  I have two questions; maybe you can answer them:
> 1)  How do I include linearity in the pattern matching rules?  At
> present, the command
> ztrans(2+3^n,nz)
>
> which should return the result
> 2z/(z-1)+z/(z-3)
> produces
> (2+3^n)z/(z-1). 
> That is, the pattern matcher incorrectly applies the rule
> zt(a | freeOf?(a,n),n,z) == a*z/(z-1)
> even though 2+3^n is not free of n!
> 2)  How do I force answers to be returned in factored form?

My advice is to avoid the use of pattern matching if at all
possible. It is rather poorly documented for the use for
which you are trying to put it - matching arguments of
an n-ary operator and I have found that it often gives me
rather unpredictable results. It is also not easily portable
to Axiom library code. 

In the following web page:

http://wiki.axiom-developer.org/SandBoxZtransform

have written a draft version of z-transfrom using more
conventional means and using only one rule. 

The following is the source code from the web page:

------

zt:=operator 'zt
ztransrules := rule
   zt((a | freeOf?(a,n))^n,n,z) == z/(z-a)

Expr ==> Expression Integer
ztrans(f:Expr,n:Symbol,z:Symbol):Expr ==
   freeOf?(f,n) => f*z/(z-1)
   fs:= isPlus f; not (fs case "failed") =>
     reduce(+,map(x+->ztrans(x,n,z),fs::List Expr))
   fp:= isTimes f; not (fp case "failed") =>
     reduce(*,select(x+->freeOf?(x,n),fp::List Expr))* _
       ztrans(reduce(*,select(x+->not freeOf?(x,n),fp::List Expr)),n,z)
   fx:=isPower f; if not (fx case "failed") then
      fr:=fx::Record(val:Expr,exponent:Integer)
      k:=fr.exponent
      if fr.val=n and k>0 then
        return (-1)^k*limit(D(z/(z-exp(-x)),[x for i in 1..k]),x=0)::Expression
Integer
   ztransrules zt(f,n,z)

---------

The functions 'isPlus', 'isTimes', 'isPower' are used in
other parts of Axiom, for example when manipulating
trigonometric functions, unfortunately I cannot find any
documentation in the Axiom book or tutorials. But see
an example here:

http://wiki.axiom-developer.org/SandBoxManip

Please feel free to modify this code to suite your
purposes. 

Regards,
Bill Page. 





From MAILER-DAEMON Tue May 29 08:21:33 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ht0hh-0002sW-FZ
	for mharc-axiom-mail@gnu.org; Tue, 29 May 2007 08:21:33 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ht0hf-0002ru-Le
	for axiom-mail@nongnu.org; Tue, 29 May 2007 08:21:31 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ht0hd-0002ri-4k
	for axiom-mail@nongnu.org; Tue, 29 May 2007 08:21:30 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ht0hd-0002re-13
	for axiom-mail@nongnu.org; Tue, 29 May 2007 08:21:29 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1Ht0hc-0003OI-LV
	for axiom-mail@nongnu.org; Tue, 29 May 2007 08:21:29 -0400
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1Ht0ha-0007BZ-P6; Tue, 29 May 2007 14:21:26 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1Ht0ha-00068m-Np; Tue, 29 May 2007 14:21:26 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: "Alasdair McAndrew" <amca01@gmail.com>,  axiom-mail@nongnu.org
Subject: Re: [Axiom-mail] Going mad with pattern matching
References: <1d67a53c0705272331n64f712ach7eb53f44642a8a66@mail.gmail.com>
	<9qmyzolwkr.fsf@aquin.mat.univie.ac.at>
	<1d67a53c0705281619p2218bf73vb98a3dd9f1d87e4f@mail.gmail.com>
	<9qy7j8xesx.fsf@aquin.mat.univie.ac.at>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 29 May 2007 14:21:26 +0200
In-Reply-To: <9qy7j8xesx.fsf@aquin.mat.univie.ac.at>
Message-ID: <9q3b1fx1kp.fsf@aquin.mat.univie.ac.at>
Lines: 117
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: 
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 29 May 2007 12:21:31 -0000

Dear Alasdair,

I did now go through your example.  It seems that you hit a bug, but
fortunately, there is an easy workaround.  THe problem is with rules of the
form:

rule ...a...b... | p(a,b) == ...

It seems that in this case, the predicate p is never tested, who knows why.
The workaround is to use the "suchThat" function.  Find the modified ruleset
below.  I know that this looks a bit clumsy, but I do not have the time
currently to debug it completely.

Some comments: 

* rules are applied recursively.  Thus, repeating ztrans on the right hand side
is unnecessary.

(42) -> t := rule a+b == zt(a, b)

   (42)  b + a == 'zt(a,b)
                        Type: RewriteRule(Integer,Integer,Expression Integer)
(43) -> t(a+b+c)

   (43)  zt(a,zt(c,b))
                                                     Type: Expression Integer

* I believe that your second rule (my rule r1) contained a misprint.  Please
  check.

* maybe the invocation of ruleset is unnecessary, and you can simply write the
  suchThat expressions within the rule pile.  I did not try.

All the best,

Martin

zt:=operator 'zt

help(z,a) ==
    tmp := z/(z-1)
    for i in 1..a repeat
        tmp:=-D(tmp,z)
    tmp

myFreeOf? l == freeOf?(l.1, l.2)

r0 := rule zt(f+g,n,z) == zt(f,n,z)+zt(g,n,z)
r1 := suchThat(rule zt(a*f,n,z) == a*zt(f,n,z), [a, n], myFreeOf?)
r2 := suchThat(rule zt(a,n,z) == a*z/(z-1), [a, n], myFreeOf?)
r3 := suchThat(rule zt(a^n,n,z) == z/(z-a), [a, n], myFreeOf?)
r4 := rule zt(0,n,z) == 0
r5 := rule zt(1,n,z) == z/(z-1)
r6 := rule zt(n,n,z) == z/(z-1)^2
r7 := rule zt(n^(a | integer?(a) and a>1),n,z) == help(z, a)

ztransrules := ruleset([r0,r1,r2,r3,r4,r5,r6,r7])$Ruleset(INT, INT, EXPR INT)

ztrans(f,n,z)==ztransrules zt(f,n,z)


Martin Rubey <martin.rubey@univie.ac.at> writes:

> "Alasdair McAndrew" <amca01@gmail.com> writes:
> 
> > Thanks, Martin,
> > 
> > As always I am helped by you!  I have two questions; maybe you can answer
> > them:
> > 
> > 1)  How do I include linearity in the pattern matching rules?  At present,
> > the command
> > 
> > ztrans(2+3^n,nz)
> > 
> > which should return the result
> > 
> > 2z/(z-1)+z/(z-3)
> > 
> > produces
> > 
> > (2+3^n)z/(z-1).
> > 
> > That is, the pattern matcher incorrectly applies the rule
> > 
> > zt(a | freeOf?(a,n),n,z) == a*z/(z-1)
> > 
> > even though 2+3^n is not free of n!
> 
> I doubt this.  I'm a little short on time though.  Thus, please do me a favour:
> replace all rules with little local functions -- as I have done with "help".
> Then you can say
> 
> )trace help
> 
> (replace "help" with the name of the functions you want to trace)
> 
> and you should see which rule was invoked.  To see the arguments in a nicer
> form, you can use
> 
> )trace help )mathprint
> 
> but this works only after help was invoked already once.
> 
> 
> > 2)  How do I force answers to be returned in factored form?
> 
> Later...  Short answer: you need to coerce them to an appropriate domain.
> 
> Martin
> 
> 
> 
> _______________________________________________
> Axiom-mail mailing list
> Axiom-mail@nongnu.org
> http://lists.nongnu.org/mailman/listinfo/axiom-mail




From MAILER-DAEMON Tue May 29 09:12:07 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ht1Ud-0003oB-1Y
	for mharc-axiom-mail@gnu.org; Tue, 29 May 2007 09:12:07 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ht1Ub-0003nK-CW
	for axiom-mail@nongnu.org; Tue, 29 May 2007 09:12:05 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ht1UY-0003m9-On
	for axiom-mail@nongnu.org; Tue, 29 May 2007 09:12:04 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ht1UY-0003m0-Ig
	for axiom-mail@nongnu.org; Tue, 29 May 2007 09:12:02 -0400
Received: from pmail17c2.megamailservers.com ([69.49.111.207])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <bill.page1@synthesis.anikast.ca>) id 1Ht1UY-0000wj-56
	for axiom-mail@nongnu.org; Tue, 29 May 2007 09:12:02 -0400
Received: from pmail17c2.megamailservers.com (localhost [127.0.0.1])
	by pmail17c2.megamailservers.com (8.13.6.20060614/8.13.1) with ESMTP id
	l4TDBxx0031433
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO);
	Tue, 29 May 2007 09:12:00 -0400
Received: (from webmail@localhost)
	by pmail17c2.megamailservers.com (8.13.6.20060614/8.12.2/Submit) id
	l4TDBwtf031432; Tue, 29 May 2007 09:11:58 -0400
Received: from dummy.drenet.dnd.ca (dummy.drenet.dnd.ca [131.136.1.178]) by
	webmail.anikast.ca (Webmail 2.0) with HTTP for
	<bill.page1.synthesis.anikast.ca@webmail.anikast.ca>; Tue, 29 May 2007
	09:11:58 -0400
Message-ID: <20070529091158.mwru76hgf1cgg00g@webmail.anikast.ca>
Date: Tue, 29 May 2007 09:11:58 -0400
From: "Bill Page" <bill.page1@synthesis.anikast.ca>
To: Martin Rubey <martin.rubey@univie.ac.at>
Subject: Re: [Axiom-mail] Going mad with pattern matching
References: <1d67a53c0705272331n64f712ach7eb53f44642a8a66@mail.gmail.com>
	<9q3b1fx1kp.fsf@aquin.mat.univie.ac.at>
In-Reply-To: <9q3b1fx1kp.fsf@aquin.mat.univie.ac.at>
MIME-Version: 1.0
Content-Type: text/plain;
	charset=UTF-8;
	format="flowed"
Content-Disposition: inline
Content-Transfer-Encoding: 7bit
User-Agent: Webmail 4.0
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 29 May 2007 13:12:05 -0000

Quoting Martin Rubey:

>
> I did now go through your example.  It seems that you hit a bug, but
> fortunately, there is an easy workaround.  THe problem is with rules
> of the form:
>
> rule ...a...b... | p(a,b) == ... 
>
> It seems that in this case, the predicate p is never tested, who knows
> why. The workaround is to use the "suchThat" function. 

Martin, could you please say two words (or a little more?) about
where you found information and examples of how to use suchThat
and ruleset? Sometimes finding out *how* to find out is more
important than the specific answer. 

> Find the modified ruleset below. 
> ... 
> zt:=operator 'zt
>
> help(z,a) ==
>     tmp := z/(z-1)
>     for i in 1..a repeat
>         tmp:=-D(tmp,z)
>     tmp
>

Note that there is a problem in this expression. It does not
correctly compute the ztrans of 'n^a'. 

> myFreeOf? l == freeOf?(l.1, l.2)
>
> r0 := rule zt(f+g,n,z) == zt(f,n,z)+zt(g,n,z)
> r1 := suchThat(rule zt(a*f,n,z) == a*zt(f,n,z), [a, n], myFreeOf?)
> r2 := suchThat(rule zt(a,n,z) == a*z/(z-1), [a, n], myFreeOf?)
> r3 := suchThat(rule zt(a^n,n,z) == z/(z-a), [a, n], myFreeOf?)

That's pretty cool! I've never seen that anywhere before... 

> r4 := rule zt(0,n,z) == 0
> r5 := rule zt(1,n,z) == z/(z-1)
> r6 := rule zt(n,n,z) == z/(z-1)^2
> r7 := rule zt(n^(a | integer?(a) and a>1),n,z) == help(z, a)
>
> ztransrules := ruleset([r0,r1,r2,r3,r4,r5,r6,r7])$Ruleset(INT, INT, EXPR INT)
>

How can one decide on the proper package call to Ruleset?

> ztrans(f,n,z)==ztransrules zt(f,n,z)
>
> ... 

Regards,
Bill Page. 



From MAILER-DAEMON Tue May 29 11:37:30 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ht3lK-0005r3-CF
	for mharc-axiom-mail@gnu.org; Tue, 29 May 2007 11:37:30 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ht3lI-0005o8-At
	for axiom-mail@nongnu.org; Tue, 29 May 2007 11:37:28 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ht3lG-0005nw-LY
	for axiom-mail@nongnu.org; Tue, 29 May 2007 11:37:27 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ht3lG-0005nt-G9
	for axiom-mail@nongnu.org; Tue, 29 May 2007 11:37:26 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1Ht3lG-00032f-0l
	for axiom-mail@nongnu.org; Tue, 29 May 2007 11:37:26 -0400
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1Ht3lD-0003aF-KF; Tue, 29 May 2007 17:37:23 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1Ht3lD-0005c4-J8; Tue, 29 May 2007 17:37:23 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: "Bill Page" <bill.page1@synthesis.anikast.ca>
Subject: Re: [Axiom-mail] Going mad with pattern matching
References: <1d67a53c0705272331n64f712ach7eb53f44642a8a66@mail.gmail.com>
	<9q3b1fx1kp.fsf@aquin.mat.univie.ac.at>
	<20070529091158.mwru76hgf1cgg00g@webmail.anikast.ca>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 29 May 2007 17:37:22 +0200
In-Reply-To: <20070529091158.mwru76hgf1cgg00g@webmail.anikast.ca>
Message-ID: <9qlkf7skst.fsf@aquin.mat.univie.ac.at>
Lines: 28
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 29 May 2007 15:37:28 -0000

"Bill Page" <bill.page1@synthesis.anikast.ca> writes:

> Martin, could you please say two words (or a little more?) about
> where you found information and examples of how to use suchThat
> and ruleset? 

HyperDoc.  I didn't find examples, but I read the documentation.


> > help(z,a) ==
> >     tmp := z/(z-1)
> >     for i in 1..a repeat
> >         tmp:=-D(tmp,z)
> >     tmp
> >
> 
> Note that there is a problem in this expression. It does not
> correctly compute the ztrans of 'n^a'.

I didn't bother to check.

> > ztransrules := ruleset([r0,r1,r2,r3,r4,r5,r6,r7])$Ruleset(INT, INT, EXPR INT)
> >
> 
> How can one decide on the proper package call to Ruleset?

Look at the documentation of Ruleset and at the type of a ruleset generated by
a "rule" in pile-syntax.




From MAILER-DAEMON Tue May 29 17:29:56 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ht9GN-0003ti-Td
	for mharc-axiom-mail@gnu.org; Tue, 29 May 2007 17:29:55 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ht9GL-0003tc-P3
	for axiom-mail@nongnu.org; Tue, 29 May 2007 17:29:53 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ht9GJ-0003tQ-AN
	for axiom-mail@nongnu.org; Tue, 29 May 2007 17:29:52 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ht9GJ-0003tN-1i
	for axiom-mail@nongnu.org; Tue, 29 May 2007 17:29:51 -0400
Received: from smtp-vbr4.xs4all.nl ([194.109.24.24])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <soemraws@xs4all.nl>) id 1Ht9GI-0007fw-JD
	for axiom-mail@nongnu.org; Tue, 29 May 2007 17:29:50 -0400
Received: from blackstar (oemrawsingh.xs4all.nl [213.84.4.243])
	by smtp-vbr4.xs4all.nl (8.13.8/8.13.8) with SMTP id l4TLTjKg017438
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <axiom-mail@nongnu.org>; Tue, 29 May 2007 23:29:46 +0200 (CEST)
	(envelope-from soemraws@xs4all.nl)
Received: by blackstar (sSMTP sendmail emulation);
	Tue, 29 May 2007 23:29:44 +0200
From: "Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl>
Date: Tue, 29 May 2007 23:29:44 +0200
To: axiom-mail@nongnu.org
Subject: Re: [Axiom-mail]  Defining piece-wise functions and drawing,
	integrating, ...
Message-ID: <20070529212944.GA16566@blackstar.oemrawsingh.xs4all.nl>
Mail-Followup-To: axiom-mail@nongnu.org
References: <20070526224344.GA12166@blackstar.oemrawsingh.xs4all.nl>
	<9q3b1ig3h1.fsf@aquin.mat.univie.ac.at>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <9q3b1ig3h1.fsf@aquin.mat.univie.ac.at>
User-Agent: Mutt/1.5.13 (2006-08-11)
X-Virus-Scanned: by XS4ALL Virus Scanner
X-detected-kernel: FreeBSD 4.6-4.9
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 29 May 2007 21:29:54 -0000

Hi,

Thanks for the reply. Too bad integration over such functions can't be done
symbolically. I also don't quite understand why for the draw function, the
function si compiled with type Variable x -> Polynomial Integer, when
x=-1..1 is a range in R.

I was hoping I could write down all my stuff in Axiom (symbolically), so
that I would, say, never have to go through stacks of paper, manually
calculating overlap integrals of two different, piece-wise functions, or
stuff like that. It would appear that I still have to do all this manually,
if I would like a symbolic answer :(

But I've got loads of other stuff to throw at Axiom, I'll see what happens
there! :)

Thanks again,

S.

On Sun, May 27, 2007 at 08:55:38AM +0200, Martin Rubey wrote:
> Dear Sumant,
> 
> You have sent an excellent example!
> 
> "Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl> writes:
> 
> > Say, I wish to define a piece-wise function,
> > 
> > (1) -> f(x|x<0)==-x**2
> >                                                                    Type: Void
> > (2) -> f(x)==x**2
> >                                                                    Type: Void
> > (3) -> draw(f(x),x=-1..1)
> >    Compiling function f with type Variable x -> Polynomial Integer 
> 
> Reading this line, you might find out what happened: axiom interprets your
> function f as being from Variable x to Polynomial Integer.  Try - in a fresh
> session -
> 
>   )set message bottom on
> 
> (or shorter, )se me bo on) and
> 
>   x<0
> 
> You will see, x is interpreted as a polynomial integer! Thus, the inequality
> x<0 in your function definition will never hold!
> 
> There is a way out though: tell axiom to draw a function from DoubleFloat to
> DoubleFloat:
> 
>   draw(f, -1..1)
> 
> Look carefully at the messages, and look up "draw" in HyperDoc or with
> 
>   )display operations draw
> 
> (shorter: )di op draw)
> 
> 
> > If I now continue to integrate,
> > 
> > (4) -> integrate(f(x),x=-1..1)
> 
> Here, I think, you are out of luck.  axiom's Expression Domain does not yet
> provide piecewise functions.  You can only do it numerically:
> 
> (19) -> romberg(f, -1,1,0.1,0.1,10,20)
> 
>    (19)  [value= 0.0,error= 0.0,totalpts= 2049,success= true]
>    Type: Record(value: Float,error: Float,totalpts: Integer,success: Boolean)
> 
> hope that helps,
> 
> Martin
> 

-- 
Sumant S. R. Oemrawsingh
soemraws@xs4all.nl



From MAILER-DAEMON Wed May 30 03:12:03 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HtILj-00044c-6F
	for mharc-axiom-mail@gnu.org; Wed, 30 May 2007 03:12:03 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HtILh-00043S-Ok
	for axiom-mail@nongnu.org; Wed, 30 May 2007 03:12:01 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HtILg-00041N-5n
	for axiom-mail@nongnu.org; Wed, 30 May 2007 03:12:01 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HtILg-00041D-2k
	for axiom-mail@nongnu.org; Wed, 30 May 2007 03:12:00 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1HtILf-0007qj-34
	for axiom-mail@nongnu.org; Wed, 30 May 2007 03:11:59 -0400
Received: from joan.univie.ac.at ([131.130.3.110] helo=joan.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HtILZ-0004Cw-6I; Wed, 30 May 2007 09:11:53 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by joan.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HtILZ-0008M9-3d; Wed, 30 May 2007 09:11:53 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: "Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl>
Subject: Re: [Axiom-mail]  Defining piece-wise functions and drawing,
	integrating, ...
References: <20070526224344.GA12166@blackstar.oemrawsingh.xs4all.nl>
	<9q3b1ig3h1.fsf@aquin.mat.univie.ac.at>
	<20070529212944.GA16566@blackstar.oemrawsingh.xs4all.nl>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 30 May 2007 09:11:43 +0200
In-Reply-To: <20070529212944.GA16566@blackstar.oemrawsingh.xs4all.nl>
Message-ID: <9qmyzmiy4w.fsf@aquin.mat.univie.ac.at>
Lines: 32
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 30 May 2007 07:12:02 -0000

"Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl> writes:

> Hi,
> 
> Thanks for the reply. Too bad integration over such functions can't be done
> symbolically. I also don't quite understand why for the draw function, the
> function si compiled with type Variable x -> Polynomial Integer, when
> x=-1..1 is a range in R.

yes, that's very strange and should be debugged.  Maybe you could file a report
on IssueTracker?

> I was hoping I could write down all my stuff in Axiom (symbolically), so that
> I would, say, never have to go through stacks of paper, manually calculating
> overlap integrals of two different, piece-wise functions, or stuff like
> that. It would appear that I still have to do all this manually, if I would
> like a symbolic answer :(

But you can still do this, if you know the boundaries of the functions!  Use
something like

-- lf...list of functions
-- x...integration variable
-- lb...list of boundaries
integratePiecewise(lf: List EXPR INT, x: Symbol, lb: List EXPR INT): EXPR INT ==
    reduce(+, [integrate(f, x=b1..b2) for f in lf for b1 in lb for b2 in rest lb], 0)

Maybe you could even take a single f which is a piecewise defined function, and
extract the necessary information, but that will need a little detective work.


Martin




From MAILER-DAEMON Wed May 30 09:08:58 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HtNv8-0006Le-JP
	for mharc-axiom-mail@gnu.org; Wed, 30 May 2007 09:08:58 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HtNv6-0006LQ-Sx
	for axiom-mail@nongnu.org; Wed, 30 May 2007 09:08:56 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HtNv5-0006LE-9b
	for axiom-mail@nongnu.org; Wed, 30 May 2007 09:08:55 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HtNv5-0006LB-4B
	for axiom-mail@nongnu.org; Wed, 30 May 2007 09:08:55 -0400
Received: from ug-out-1314.google.com ([66.249.92.171])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <amca01@gmail.com>) id 1HtNv4-000362-F4
	for axiom-mail@nongnu.org; Wed, 30 May 2007 09:08:54 -0400
Received: by ug-out-1314.google.com with SMTP id a2so187870ugf
	for <axiom-mail@nongnu.org>; Wed, 30 May 2007 06:08:52 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed; d=gmail.com; s=beta;
	h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=uFJ6NjOIpJ+FkFn+xlnWSdzMeLbskxHO6GEjNKknOCW/MIGym/PM5nqYZZOfnB6f9IqodYGbpbPM9+bX/fCyVq9HGAgUpONWKcvTy1hPEjoG0/LlBW3bCwhrFBWVj3Fs38St/yFIcM5mrs8acYiOzYRGhl0n9/26/gJnva1dzQs=
DomainKey-Signature: a=rsa-sha1; c=nofws; d=gmail.com; s=beta;
	h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=K8+++yDeIpFJJLf6vR+DIczHirB/4jHoUVoCeOA7K44SzLprm9YVCsbu9pxAcSmLalgAlLMP3REQce4E8oBP/lynN+DSVEmxY0ZVLPuVOyQHu2T1zbVLtM5Gilg1z1q6UtpBoVG2z/7zpwEmYV6aLemIinudB36CgURgrEvrIRk=
Received: by 10.67.15.15 with SMTP id s15mr573773ugi.1180530532763;
	Wed, 30 May 2007 06:08:52 -0700 (PDT)
Received: by 10.66.254.17 with HTTP; Wed, 30 May 2007 06:08:52 -0700 (PDT)
Message-ID: <1d67a53c0705300608i65f9f744kc1752b2dc147303b@mail.gmail.com>
Date: Wed, 30 May 2007 23:08:52 +1000
From: "Alasdair McAndrew" <amca01@gmail.com>
To: "Bill Page" <bill.page1@synthesis.anikast.ca>, 
	"Martin Rubey" <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
Subject: Re: [Axiom-mail] Going mad with pattern matching
In-Reply-To: <20070529091158.mwru76hgf1cgg00g@webmail.anikast.ca>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_1956_19949814.1180530532696"
References: <1d67a53c0705272331n64f712ach7eb53f44642a8a66@mail.gmail.com>
	<9q3b1fx1kp.fsf@aquin.mat.univie.ac.at>
	<20070529091158.mwru76hgf1cgg00g@webmail.anikast.ca>
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Cc: 
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 30 May 2007 13:08:57 -0000

------=_Part_1956_19949814.1180530532696
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Thank you, Bill & Martin, for your help!

I would like, if possible, to develop a z-transform routine for Axiom, and I
would have thought that pattern matching was the way to go.  I have a
z-transform package for Reduce, written by Wolfram Koepf in 1995, which
relies heavily on pattern matching, and I have the beginnings of one for
Maxima, which I started writing last year.  I think Martin's wizardry will
be the basis of the rest.

I am now wrestling with partial fractions... Axiom is very particular about
the types it admits to partial fractions; the type EXPR INT can't be used.

And, my humblest apologies for a typo - the penultimate line of the help
function should read "tmp:=-z*D(tmp,z)".

I also notice, while hunting through /src/algebra, that there is an
"applyRules" function; but as with "suchThat", it's not mentioned in the
documentation; at least, not in the Rules and Pattern Matching section (6.21)
of the Axiom book.  Maybe these two functions are part of the source code
for rules, and not meant to be used by casual users?  Or maybe the
documentation for rules should be rewritten to include these?

So many thoughts, so little time.... (& so small a brain...)

cheers,
Alasdair

On 5/29/07, Bill Page <bill.page1@synthesis.anikast.ca> wrote:
>
> Quoting Martin Rubey:
>
> >
> > I did now go through your example.  It seems that you hit a bug, but
> > fortunately, there is an easy workaround.  THe problem is with rules
> > of the form:
> >
> > rule ...a...b... | p(a,b) == ...
> >
> > It seems that in this case, the predicate p is never tested, who knows
> > why. The workaround is to use the "suchThat" function.
>
> Martin, could you please say two words (or a little more?) about
> where you found information and examples of how to use suchThat
> and ruleset? Sometimes finding out *how* to find out is more
> important than the specific answer.
>
> > Find the modified ruleset below.
> > ...
> > zt:=operator 'zt
> >
> > help(z,a) ==
> >     tmp := z/(z-1)
> >     for i in 1..a repeat
> >         tmp:=-D(tmp,z)
> >     tmp
> >
>
> Note that there is a problem in this expression. It does not
> correctly compute the ztrans of 'n^a'.
>
> > myFreeOf? l == freeOf?(l.1, l.2)
> >
> > r0 := rule zt(f+g,n,z) == zt(f,n,z)+zt(g,n,z)
> > r1 := suchThat(rule zt(a*f,n,z) == a*zt(f,n,z), [a, n], myFreeOf?)
> > r2 := suchThat(rule zt(a,n,z) == a*z/(z-1), [a, n], myFreeOf?)
> > r3 := suchThat(rule zt(a^n,n,z) == z/(z-a), [a, n], myFreeOf?)
>
> That's pretty cool! I've never seen that anywhere before...
>
> > r4 := rule zt(0,n,z) == 0
> > r5 := rule zt(1,n,z) == z/(z-1)
> > r6 := rule zt(n,n,z) == z/(z-1)^2
> > r7 := rule zt(n^(a | integer?(a) and a>1),n,z) == help(z, a)
> >
> > ztransrules := ruleset([r0,r1,r2,r3,r4,r5,r6,r7])$Ruleset(INT, INT, EXPR
> INT)
> >
>
> How can one decide on the proper package call to Ruleset?
>
> > ztrans(f,n,z)==ztransrules zt(f,n,z)
> >
> > ...
>
> Regards,
> Bill Page.
>

------=_Part_1956_19949814.1180530532696
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Thank you, Bill &amp; Martin, for your help!<br><br>I would like, if possible, to develop a z-transform routine for Axiom, and I would have thought that pattern matching was the way to go.&nbsp; I have a z-transform package for Reduce, written by Wolfram Koepf in 1995, which relies heavily on pattern matching, and I have the beginnings of one for Maxima, which I started writing last year.&nbsp; I think Martin&#39;s wizardry will be the basis of the rest.
<br><br>I am now wrestling with partial fractions... Axiom is very particular about the types it admits to partial fractions; the type EXPR INT can&#39;t be used.<br><br>And, my humblest apologies for a typo - the penultimate line of the help function should read &quot;
<span class="q">tmp:=-z*D(tmp,z)&quot;.<br><br>I also notice, while hunting through /src/algebra, that there is an &quot;applyRules&quot; function; but as with &quot;suchThat&quot;, it&#39;s not mentioned in the documentation; at least, not in the Rules and Pattern Matching section (
6.21) of the Axiom book.&nbsp; Maybe these two functions are part of the source code for rules, and not meant to be used by casual users?&nbsp; Or maybe the documentation for rules should be rewritten to include these?<br><br>So many thoughts, so little time.... (&amp; so small a brain...)
<br><br>cheers,<br>Alasdair<br></span><br><div><span class="gmail_quote">On 5/29/07, <b class="gmail_sendername">Bill Page</b> &lt;<a href="mailto:bill.page1@synthesis.anikast.ca">bill.page1@synthesis.anikast.ca</a>&gt; wrote:
</span><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">Quoting Martin Rubey:<br><br>&gt;<br>&gt; I did now go through your example.&nbsp;&nbsp;It seems that you hit a bug, but
<br>&gt; fortunately, there is an easy workaround.&nbsp;&nbsp;THe problem is with rules<br>&gt; of the form:<br>&gt;<br>&gt; rule ...a...b... | p(a,b) == ...<br>&gt;<br>&gt; It seems that in this case, the predicate p is never tested, who knows
<br>&gt; why. The workaround is to use the &quot;suchThat&quot; function.<br><br>Martin, could you please say two words (or a little more?) about<br>where you found information and examples of how to use suchThat<br>and ruleset? Sometimes finding out *how* to find out is more
<br>important than the specific answer.<br><br>&gt; Find the modified ruleset below.<br>&gt; ...<br>&gt; zt:=operator &#39;zt<br>&gt;<br>&gt; help(z,a) ==<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; tmp := z/(z-1)<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; for i in 1..a repeat<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tmp:=-D(tmp,z)
<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; tmp<br>&gt;<br><br>Note that there is a problem in this expression. It does not<br>correctly compute the ztrans of &#39;n^a&#39;.<br><br>&gt; myFreeOf? l == freeOf?(l.1, l.2)<br>&gt;<br>&gt; r0 := rule zt(f+g,n,z) == zt(f,n,z)+zt(g,n,z)
<br>&gt; r1 := suchThat(rule zt(a*f,n,z) == a*zt(f,n,z), [a, n], myFreeOf?)<br>&gt; r2 := suchThat(rule zt(a,n,z) == a*z/(z-1), [a, n], myFreeOf?)<br>&gt; r3 := suchThat(rule zt(a^n,n,z) == z/(z-a), [a, n], myFreeOf?)<br>
<br>That&#39;s pretty cool! I&#39;ve never seen that anywhere before...<br><br>&gt; r4 := rule zt(0,n,z) == 0<br>&gt; r5 := rule zt(1,n,z) == z/(z-1)<br>&gt; r6 := rule zt(n,n,z) == z/(z-1)^2<br>&gt; r7 := rule zt(n^(a | integer?(a) and a&gt;1),n,z) == help(z, a)
<br>&gt;<br>&gt; ztransrules := ruleset([r0,r1,r2,r3,r4,r5,r6,r7])$Ruleset(INT, INT, EXPR INT)<br>&gt;<br><br>How can one decide on the proper package call to Ruleset?<br><br>&gt; ztrans(f,n,z)==ztransrules zt(f,n,z)<br>&gt;
<br>&gt; ...<br><br>Regards,<br>Bill Page.<br></blockquote></div><br>

------=_Part_1956_19949814.1180530532696--



From MAILER-DAEMON Wed May 30 09:41:58 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HtOR4-0004lU-H7
	for mharc-axiom-mail@gnu.org; Wed, 30 May 2007 09:41:58 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HtOR3-0004iH-4w
	for axiom-mail@nongnu.org; Wed, 30 May 2007 09:41:57 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HtOR2-0004g7-EK
	for axiom-mail@nongnu.org; Wed, 30 May 2007 09:41:56 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HtOR2-0004fu-6x
	for axiom-mail@nongnu.org; Wed, 30 May 2007 09:41:56 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1HtOR1-0006KC-MG
	for axiom-mail@nongnu.org; Wed, 30 May 2007 09:41:55 -0400
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HtOQd-0006Qw-2g; Wed, 30 May 2007 15:41:31 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HtOQd-0002VH-1T; Wed, 30 May 2007 15:41:31 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: "Alasdair McAndrew" <amca01@gmail.com>
Subject: Re: [Axiom-mail] Going mad with pattern matching
References: <1d67a53c0705272331n64f712ach7eb53f44642a8a66@mail.gmail.com>
	<9q3b1fx1kp.fsf@aquin.mat.univie.ac.at>
	<20070529091158.mwru76hgf1cgg00g@webmail.anikast.ca>
	<1d67a53c0705300608i65f9f744kc1752b2dc147303b@mail.gmail.com>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 30 May 2007 15:41:30 +0200
In-Reply-To: <1d67a53c0705300608i65f9f744kc1752b2dc147303b@mail.gmail.com>
Message-ID: <9qlkf6bf91.fsf@aquin.mat.univie.ac.at>
Lines: 19
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 30 May 2007 13:41:57 -0000

"Alasdair McAndrew" <amca01@gmail.com> writes:

> I also notice, while hunting through /src/algebra, that there is an
> "applyRules" function; but as with "suchThat", it's not mentioned in the
> documentation; at least, not in the Rules and Pattern Matching section (6.21)
> of the Axiom book.  Maybe these two functions are part of the source code for
> rules, and not meant to be used by casual users?  Or maybe the documentation
> for rules should be rewritten to include these?

Well, in my opinion the ultimative source of documentation is HyperDoc.  Since
it is dynamically generated, you will find every function there.  And if a
function is not meant for the "casual" user, the documentation should say so.
(For example, some functions are exported only because of a compiler bug.)

The book is an excellent introduction into the world of axiom, but it will be
hard to cover all functionality within one book.  Even the Mathematica book
covers only a fraction of Mathematica.

Martin




From MAILER-DAEMON Wed May 30 09:59:11 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HtOhj-0007Zl-Bm
	for mharc-axiom-mail@gnu.org; Wed, 30 May 2007 09:59:11 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HtOhh-0007ZS-RA
	for axiom-mail@nongnu.org; Wed, 30 May 2007 09:59:09 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HtOhg-0007Yg-6k
	for axiom-mail@nongnu.org; Wed, 30 May 2007 09:59:09 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HtOhg-0007Yb-3M
	for axiom-mail@nongnu.org; Wed, 30 May 2007 09:59:08 -0400
Received: from ug-out-1314.google.com ([66.249.92.171])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <amca01@gmail.com>) id 1HtOhe-0008Vz-GX
	for axiom-mail@nongnu.org; Wed, 30 May 2007 09:59:07 -0400
Received: by ug-out-1314.google.com with SMTP id a2so198771ugf
	for <axiom-mail@nongnu.org>; Wed, 30 May 2007 06:59:04 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed; d=gmail.com; s=beta;
	h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=VDQEcpfY/8Bnl0EZ0UIfK7bIsZNa/+tSM98YW5bvuYlzEjulHNTb3vKlvL0i64tG+hROaBBVmOhOy+l/mQJuMQtm9Gv1Oh0rnNQeFBMKj5KYkFMOSXgwlBVqXeLi9ZD1RGoysPCQ/ah+9E2tRsiXhKIbTRdIxrQ40cUcaVSQUBQ=
DomainKey-Signature: a=rsa-sha1; c=nofws; d=gmail.com; s=beta;
	h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=rG+NQS289dH9FRRa366hDRqgmNSBftEZZcm8CQVyMNxBbqoi4fR7KYMFf+0iwhMR+i326BtyYK5iv1/qw5Nlj3I+cvci4c1VKAZJbZ7rOOD0LtRfT3aNEZ8xeowRUoajJY2GSrRn1jMhMblZVVRe4bWJ0vYvDQmBbUBzpxe26wA=
Received: by 10.67.31.17 with SMTP id i17mr573541ugj.1180533544676;
	Wed, 30 May 2007 06:59:04 -0700 (PDT)
Received: by 10.66.254.17 with HTTP; Wed, 30 May 2007 06:59:04 -0700 (PDT)
Message-ID: <1d67a53c0705300659u3f7d8e8dq4f63ac7d0fe4cbe6@mail.gmail.com>
Date: Wed, 30 May 2007 23:59:04 +1000
From: "Alasdair McAndrew" <amca01@gmail.com>
To: "Martin Rubey" <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
Subject: Re: [Axiom-mail] Going mad with pattern matching
In-Reply-To: <9qlkf6bf91.fsf@aquin.mat.univie.ac.at>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_2552_21720192.1180533544620"
References: <1d67a53c0705272331n64f712ach7eb53f44642a8a66@mail.gmail.com>
	<9q3b1fx1kp.fsf@aquin.mat.univie.ac.at>
	<20070529091158.mwru76hgf1cgg00g@webmail.anikast.ca>
	<1d67a53c0705300608i65f9f744kc1752b2dc147303b@mail.gmail.com>
	<9qlkf6bf91.fsf@aquin.mat.univie.ac.at>
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Cc: 
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 30 May 2007 13:59:10 -0000

------=_Part_2552_21720192.1180533544620
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

I've become much fonder of HyperDoc, especially since editing the X
resources to use nicer fonts!  But, for example, "suchThat" in the search
page of HyperDoc produces no results.  Neither does "Ruleset".  Maybe my
HyperDoc has been incompletely generated?

Alasdair

On 30 May 2007 15:41:30 +0200, Martin Rubey <martin.rubey@univie.ac.at>
wrote:
>
> "Alasdair McAndrew" <amca01@gmail.com> writes:
>
> > I also notice, while hunting through /src/algebra, that there is an
> > "applyRules" function; but as with "suchThat", it's not mentioned in the
> > documentation; at least, not in the Rules and Pattern Matching section (
> 6.21)
> > of the Axiom book.  Maybe these two functions are part of the source
> code for
> > rules, and not meant to be used by casual users?  Or maybe the
> documentation
> > for rules should be rewritten to include these?
>
> Well, in my opinion the ultimative source of documentation is
> HyperDoc.  Since
> it is dynamically generated, you will find every function there.  And if a
> function is not meant for the "casual" user, the documentation should say
> so.
> (For example, some functions are exported only because of a compiler bug.)
>
> The book is an excellent introduction into the world of axiom, but it will
> be
> hard to cover all functionality within one book.  Even the Mathematica
> book
> covers only a fraction of Mathematica.
>
> Martin
>
>

------=_Part_2552_21720192.1180533544620
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

I&#39;ve become much fonder of HyperDoc, especially since editing the X resources to use nicer fonts!&nbsp; But, for example, &quot;suchThat&quot; in the search page of HyperDoc produces no results.&nbsp; Neither does &quot;Ruleset&quot;.&nbsp; Maybe my HyperDoc has been incompletely generated?
<br><br>Alasdair<br><br><div><span class="gmail_quote">On 30 May 2007 15:41:30 +0200, <b class="gmail_sendername">Martin Rubey</b> &lt;<a href="mailto:martin.rubey@univie.ac.at">martin.rubey@univie.ac.at</a>&gt; wrote:</span>
<blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">&quot;Alasdair McAndrew&quot; &lt;<a href="mailto:amca01@gmail.com">amca01@gmail.com</a>&gt; writes:
<br><br>&gt; I also notice, while hunting through /src/algebra, that there is an<br>&gt; &quot;applyRules&quot; function; but as with &quot;suchThat&quot;, it&#39;s not mentioned in the<br>&gt; documentation; at least, not in the Rules and Pattern Matching section (
6.21)<br>&gt; of the Axiom book.&nbsp;&nbsp;Maybe these two functions are part of the source code for<br>&gt; rules, and not meant to be used by casual users?&nbsp;&nbsp;Or maybe the documentation<br>&gt; for rules should be rewritten to include these?
<br><br>Well, in my opinion the ultimative source of documentation is HyperDoc.&nbsp;&nbsp;Since<br>it is dynamically generated, you will find every function there.&nbsp;&nbsp;And if a<br>function is not meant for the &quot;casual&quot; user, the documentation should say so.
<br>(For example, some functions are exported only because of a compiler bug.)<br><br>The book is an excellent introduction into the world of axiom, but it will be<br>hard to cover all functionality within one book.&nbsp;&nbsp;Even the Mathematica book
<br>covers only a fraction of Mathematica.<br><br>Martin<br><br></blockquote></div><br>

------=_Part_2552_21720192.1180533544620--



From MAILER-DAEMON Wed May 30 12:53:09 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HtRQ5-0007p1-7U
	for mharc-axiom-mail@gnu.org; Wed, 30 May 2007 12:53:09 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HtRQ3-0007oc-Ec
	for axiom-mail@nongnu.org; Wed, 30 May 2007 12:53:07 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HtRQ1-0007oQ-Qa
	for axiom-mail@nongnu.org; Wed, 30 May 2007 12:53:07 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HtRQ1-0007oN-Mv
	for axiom-mail@nongnu.org; Wed, 30 May 2007 12:53:05 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1HtRQ1-0005Ss-6S
	for axiom-mail@nongnu.org; Wed, 30 May 2007 12:53:05 -0400
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HtRPz-0001kS-Ns; Wed, 30 May 2007 18:53:03 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HtRPz-0000cH-Mv; Wed, 30 May 2007 18:53:03 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: "Alasdair McAndrew" <amca01@gmail.com>
Subject: Re: [Axiom-mail] Going mad with pattern matching
References: <1d67a53c0705272331n64f712ach7eb53f44642a8a66@mail.gmail.com>
	<9q3b1fx1kp.fsf@aquin.mat.univie.ac.at>
	<20070529091158.mwru76hgf1cgg00g@webmail.anikast.ca>
	<1d67a53c0705300608i65f9f744kc1752b2dc147303b@mail.gmail.com>
	<9qlkf6bf91.fsf@aquin.mat.univie.ac.at>
	<1d67a53c0705300659u3f7d8e8dq4f63ac7d0fe4cbe6@mail.gmail.com>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 30 May 2007 18:53:03 +0200
In-Reply-To: <1d67a53c0705300659u3f7d8e8dq4f63ac7d0fe4cbe6@mail.gmail.com>
Message-ID: <9qodk2qmmo.fsf@aquin.mat.univie.ac.at>
Lines: 27
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 30 May 2007 16:53:07 -0000

"Alasdair McAndrew" <amca01@gmail.com> writes:

> I've become much fonder of HyperDoc, especially since editing the X
> resources to use nicer fonts!  But, for example, "suchThat" in the search
> page of HyperDoc produces no results.  Neither does "Ruleset".  Maybe my
> HyperDoc has been incompletely generated?

Which flavour of axiom do you use? I recommend wh-sandbox, as you may know.
Another possibility is that you accidentally hit the wrong button or mistyped
the function: suchThat is an operation, and you need to capitalize correctly,
for example.

> > Well, in my opinion the ultimative source of documentation is HyperDoc.
> > Since it is dynamically generated, you will find every function there.  And
> > if a function is not meant for the "casual" user, the documentation should
> > say so.  (For example, some functions are exported only because of a
> > compiler bug.)

There is another important hint: unexposed functions are sometimes for more
advanced usage, or because of compiler restrictions.  In practice, unexposed
means, that you need to package call the function.

In the case of applyRules, you really should use elt.

All the best,

Martin




