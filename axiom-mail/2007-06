From MAILER-DAEMON Fri Jun 01 09:54:26 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hu7aE-0005y6-JT
	for mharc-axiom-mail@gnu.org; Fri, 01 Jun 2007 09:54:26 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hu7aC-0005rS-Ro
	for axiom-mail@nongnu.org; Fri, 01 Jun 2007 09:54:24 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hu7aB-0005l2-2a
	for axiom-mail@nongnu.org; Fri, 01 Jun 2007 09:54:24 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hu7aA-0005kR-T8
	for axiom-mail@nongnu.org; Fri, 01 Jun 2007 09:54:22 -0400
Received: from wx-out-0506.google.com ([66.249.82.239])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <amca01@gmail.com>) id 1Hu7aA-0007Bh-Dn
	for axiom-mail@nongnu.org; Fri, 01 Jun 2007 09:54:22 -0400
Received: by wx-out-0506.google.com with SMTP id t15so504952wxc
	for <axiom-mail@nongnu.org>; Fri, 01 Jun 2007 06:54:21 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed; d=gmail.com; s=beta;
	h=domainkey-signature:received:received:message-id:date:from:to:subject:mime-version:content-type;
	b=l2VIdrMn6RuKl/aF/q02Iu6CUl0xwoIcr4bS+LOP8ihxV+Z+3txNM0seXsbME0YGpqCDmZLeKxBZRwxxOQqSVi57AoPhRI9sAUwhl3VJy5UTkPLoKxSdfh91B4kRW7b56vmvSfajpRO6UpWfPijFFjKpt10qISR8StKcUwXhqHw=
DomainKey-Signature: a=rsa-sha1; c=nofws; d=gmail.com; s=beta;
	h=received:message-id:date:from:to:subject:mime-version:content-type;
	b=ZgFoqPl+XmvzGr8FWXRhJpcGXPgNA0GkN3CedTdWmjkcjgSlCJbuEufh9tZO7En2bxs1Z3MmrcnsWlNWA7RxHh/scpyhVHYiOVXlim8T9tVtpcOLpEYjp6KMkeJUOxjcNuGtZLb63Hrc0HR1D4wyVfmcm7vfc75j8epXM6FAZWU=
Received: by 10.90.118.8 with SMTP id q8mr1707042agc.1180706060904;
	Fri, 01 Jun 2007 06:54:20 -0700 (PDT)
Received: by 10.66.254.17 with HTTP; Fri, 1 Jun 2007 06:54:20 -0700 (PDT)
Message-ID: <1d67a53c0706010654n7b2e0bc1k8d85a06af6bb3500@mail.gmail.com>
Date: Fri, 1 Jun 2007 23:54:20 +1000
From: "Alasdair McAndrew" <amca01@gmail.com>
To: axiom-mail@nongnu.org
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_15928_23195352.1180706060820"
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Subject: [Axiom-mail] A pattern matching question
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Fri, 01 Jun 2007 13:54:25 -0000

------=_Part_15928_23195352.1180706060820
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Here's a very simple input file (the mathematics is meaningless; I'm only
interested in syntax here):

tt:=operator 'tt

ttrules := rule
  tt(n^(a | integer?(a))) == t/a
  tt(n/(n-1)) == 1/t
  tt(n/(n-1)^(a | integer?(a) and a>1)) == 1/t^a

And here's some experiments:

(1) -> ttrules tt(n^6)

         t
   (1)   -
         6
                                                     Type: Expression
Integer
(1) -> ttrules tt(n/(n-1))

         1
   (1)   -
         t
                                                     Type: Expression
Integer
(3) -> ttrules tt(n/(n-1)^2)

                 n
   (3)   tt(-----------)
             2
            n  - 2n + 1
                                                     Type: Expression
Integer

Why is the last pattern not matched?

Thanks,
Alasdair

------=_Part_15928_23195352.1180706060820
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Here&#39;s a very simple input file (the mathematics is meaningless; I&#39;m only interested in syntax here):<br><br><span style="font-family: courier new,monospace;">tt:=operator &#39;tt</span><br style="font-family: courier new,monospace;">
<br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">ttrules := rule</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">&nbsp; tt(n^(a | integer?(a))) == t/a
</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">&nbsp; tt(n/(n-1)) == 1/t</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">
&nbsp; tt(n/(n-1)^(a | integer?(a) and a&gt;1)) == 1/t^a</span><br><br>And here&#39;s some experiments:<br><br>(<span style="font-family: courier new,monospace;">1) -&gt; ttrules tt(n^6)</span><br style="font-family: courier new,monospace;">
<br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">&nbsp;&nbsp; (1)&nbsp;&nbsp; -
</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 6</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Type: Expression Integer
</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">(1) -&gt; ttrules tt(n/(n-1))</span><br style="font-family: courier new,monospace;"><br style="font-family: courier new,monospace;">
<span style="font-family: courier new,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">&nbsp;&nbsp; (1)&nbsp;&nbsp; -</span><br style="font-family: courier new,monospace;">
<span style="font-family: courier new,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Type: Expression Integer
</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">(3) -&gt; ttrules tt(n/(n-1)^2)</span><br style="font-family: courier new,monospace;"><br style="font-family: courier new,monospace;">
<span style="font-family: courier new,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; n</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">&nbsp;&nbsp; (3)&nbsp;&nbsp; tt(-----------)</span><br style="font-family: courier new,monospace;">
<span style="font-family: courier new,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2</span><br style="font-family: courier new,monospace;"><span style="font-family: courier new,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; n&nbsp; - 2n + 1</span><br style="font-family: courier new,monospace;">
<span style="font-family: courier new,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Type: Expression Integer</span><br style="font-family: courier new,monospace;"><br>Why is the last pattern not matched?
<br><br>Thanks,<br>Alasdair<br><br><br>

------=_Part_15928_23195352.1180706060820--



From MAILER-DAEMON Fri Jun 01 10:18:17 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hu7xJ-0005oz-Pf
	for mharc-axiom-mail@gnu.org; Fri, 01 Jun 2007 10:18:17 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hu7xH-0005oY-TI
	for axiom-mail@nongnu.org; Fri, 01 Jun 2007 10:18:15 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hu7xG-0005np-AU
	for axiom-mail@nongnu.org; Fri, 01 Jun 2007 10:18:15 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hu7xG-0005ni-2O
	for axiom-mail@nongnu.org; Fri, 01 Jun 2007 10:18:14 -0400
Received: from mail35.messagelabs.com ([62.231.131.195])
	by monty-python.gnu.org with smtp (Exim 4.60)
	(envelope-from <themos@nag.co.uk>) id 1Hu7xF-0001o6-K4
	for axiom-mail@nongnu.org; Fri, 01 Jun 2007 10:18:13 -0400
X-VirusChecked: Checked
X-Env-Sender: themos@nag.co.uk
X-Msg-Ref: server-6.tower-35.messagelabs.com!1180707489!2777514!1
X-StarScan-Version: 5.5.12.11; banners=nag.co.uk,-,-
X-Originating-IP: [62.231.145.242]
Received: (qmail 8529 invoked from network); 1 Jun 2007 14:18:10 -0000
Received: from nagmx1.nag.co.uk (HELO nagmx1.nag.co.uk) (62.231.145.242)
	by server-6.tower-35.messagelabs.com with SMTP;
	1 Jun 2007 14:18:10 -0000
Received: from loanamd6.nag.co.uk (loanamd6.nag.co.uk [192.156.217.152])
	by nagmx1.nag.co.uk (Postfix) with ESMTP id 752A912015F
	for <axiom-mail@nongnu.org>; Fri,  1 Jun 2007 15:18:11 +0100 (BST)
From: Themos Tsikas <themos@nag.co.uk>
Organization: NAG Ltd
To: axiom-mail@nongnu.org
Subject: Re: [Axiom-mail] A pattern matching question
Date: Fri, 1 Jun 2007 14:18:08 +0000
User-Agent: KMail/1.9.1
References: <1d67a53c0706010654n7b2e0bc1k8d85a06af6bb3500@mail.gmail.com>
In-Reply-To: <1d67a53c0706010654n7b2e0bc1k8d85a06af6bb3500@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-15"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200706011418.08522.themos@nag.co.uk>
X-detected-kernel: Linux 2.4-2.6
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: themos@nag.co.uk
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Fri, 01 Jun 2007 14:18:16 -0000

--try this in an input file

tt:=operator 'tt
ttrules := rule
  tt(n^(a | integer?(a))) == t/a
  tt(n/(n-1)) == 1/t
  tt(n/(n^a+(X | integer?(a) and (n-1)^a = n^a +X))) == 1/t^a

ttrules tt(n^6)
ttrules tt(n/(n-1))
ttrules tt(n/(n-1)^2)
ttrules tt(n/(n-1)^30)

________________________________________________________________________
The Numerical Algorithms Group Ltd is a company registered in England
and Wales with company number 1249803. The registered office is:
Wilkinson House, Jordan Hill Road, Oxford OX2 8DR, United Kingdom.

This e-mail has been scanned for all viruses by Star. The service is
powered by MessageLabs. 
________________________________________________________________________



From MAILER-DAEMON Fri Jun 01 16:39:45 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HuDuT-0001c9-GX
	for mharc-axiom-mail@gnu.org; Fri, 01 Jun 2007 16:39:45 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HuDuR-0001Y8-Ql
	for axiom-mail@nongnu.org; Fri, 01 Jun 2007 16:39:43 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HuDuQ-0001UX-4c
	for axiom-mail@nongnu.org; Fri, 01 Jun 2007 16:39:43 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HuDuQ-0001UT-01
	for axiom-mail@nongnu.org; Fri, 01 Jun 2007 16:39:42 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1HuDuP-00030m-Ho
	for axiom-mail@nongnu.org; Fri, 01 Jun 2007 16:39:41 -0400
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HuDuK-0007vl-MJ; Fri, 01 Jun 2007 22:39:36 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HuDuK-00032Y-Jc; Fri, 01 Jun 2007 22:39:36 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: themos@nag.co.uk
Subject: Re: [Axiom-mail] A pattern matching question
References: <1d67a53c0706010654n7b2e0bc1k8d85a06af6bb3500@mail.gmail.com>
	<200706011418.08522.themos@nag.co.uk>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 01 Jun 2007 22:39:36 +0200
In-Reply-To: <200706011418.08522.themos@nag.co.uk>
Message-ID: <9qd50fs92v.fsf@aquin.mat.univie.ac.at>
Lines: 33
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Fri, 01 Jun 2007 20:39:44 -0000

Themos Tsikas <themos@nag.co.uk> writes:

> --try this in an input file
> 
> tt:=operator 'tt
> ttrules := rule
>   tt(n^(a | integer?(a))) == t/a
>   tt(n/(n-1)) == 1/t
>   tt(n/(n^a+(X | integer?(a) and (n-1)^a = n^a +X))) == 1/t^a
> 
> ttrules tt(n^6)
> ttrules tt(n/(n-1))
> ttrules tt(n/(n-1)^2)
> ttrules tt(n/(n-1)^30)

Ui, I like that.  Strange that it can apply such a complicated rule but stumble
over freeOf?

Alasdair, just to make it completely obvious:  

(3) -> ttrules tt(n/(n-1)^2)

                 n
   (3)   tt(-----------)
             2
            n  - 2n + 1

is because n^2-2n+1 is different from (n-1)^a.  As far as I can see, the match
itself is tried against the pattern without trying to "expand" or transform it
in some way.  (Although I must admit that I didn't check.)

Martin





From MAILER-DAEMON Fri Jun 01 17:45:00 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HuEvc-0005lC-LZ
	for mharc-axiom-mail@gnu.org; Fri, 01 Jun 2007 17:45:00 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HuEvb-0005l7-3l
	for axiom-mail@nongnu.org; Fri, 01 Jun 2007 17:44:59 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HuEvY-0005kv-IQ
	for axiom-mail@nongnu.org; Fri, 01 Jun 2007 17:44:57 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HuEvY-0005ks-DB
	for axiom-mail@nongnu.org; Fri, 01 Jun 2007 17:44:56 -0400
Received: from ug-out-1314.google.com ([66.249.92.173])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <amca01@gmail.com>) id 1HuEvX-000263-PZ
	for axiom-mail@nongnu.org; Fri, 01 Jun 2007 17:44:56 -0400
Received: by ug-out-1314.google.com with SMTP id a2so316294ugf
	for <axiom-mail@nongnu.org>; Fri, 01 Jun 2007 14:44:54 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed; d=gmail.com; s=beta;
	h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=U3wA25d+zBVTzR2qprNGrn1dnDuFOxgh7rmL/BYkNXdX4Eo14h+ez5wjXoLHylaLnhLu0hC04qwi0Er+UsBzQNaXEHliM5ZhMi+5O5KVkNLN1mj3Z3N/6jlF5KKerORFotU0LsgfU1jkS1TpjyG6mYjnugFJpRWG36nqMWl7hr4=
DomainKey-Signature: a=rsa-sha1; c=nofws; d=gmail.com; s=beta;
	h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=tQT3YFRV0q438ES5mut+859ytMP59IFzryNmvXWYeBXHOAq9RBhhcn7sZf1JIA1/62qaWRjDKqv04vJd/Xf4GU/Mz9sRdVr1py1OreYuxNmhS39yZ/+2seL5stEvxSv9TiD+U7It7NsIQip3+x68Fr2JFa1C/jLy89snXBNPbTg=
Received: by 10.66.217.5 with SMTP id p5mr1059566ugg.1180734294653;
	Fri, 01 Jun 2007 14:44:54 -0700 (PDT)
Received: by 10.67.15.4 with HTTP; Fri, 1 Jun 2007 14:44:54 -0700 (PDT)
Message-ID: <1d67a53c0706011444q388ca82em2b8061ed349c21f@mail.gmail.com>
Date: Sat, 2 Jun 2007 07:44:54 +1000
From: "Alasdair McAndrew" <amca01@gmail.com>
To: themos@nag.co.uk, "Martin Rubey" <martin.rubey@univie.ac.at>, 
	axiom-mail@nongnu.org
Subject: Re: [Axiom-mail] A pattern matching question
In-Reply-To: <200706011418.08522.themos@nag.co.uk>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_17480_11418194.1180734294614"
References: <1d67a53c0706010654n7b2e0bc1k8d85a06af6bb3500@mail.gmail.com>
	<200706011418.08522.themos@nag.co.uk>
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Cc: 
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Fri, 01 Jun 2007 21:44:59 -0000

------=_Part_17480_11418194.1180734294614
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Thank, you Themos, for your suggestion - works like a charm!  Am I to infer
from this that pattern matching works by parsing the input element by
element?  Or is there some other Deep Magic going on?

And Martin, I tried every imaginable combination of expand/factor, but
nothing worked!

cheers,
Alasdair

On 6/2/07, Themos Tsikas <themos@nag.co.uk> wrote:
>
> --try this in an input file
>
> tt:=operator 'tt
> ttrules := rule
>   tt(n^(a | integer?(a))) == t/a
>   tt(n/(n-1)) == 1/t
>   tt(n/(n^a+(X | integer?(a) and (n-1)^a = n^a +X))) == 1/t^a
>
> ttrules tt(n^6)
> ttrules tt(n/(n-1))
> ttrules tt(n/(n-1)^2)
> ttrules tt(n/(n-1)^30)
>
> ________________________________________________________________________
> The Numerical Algorithms Group Ltd is a company registered in England
> and Wales with company number 1249803. The registered office is:
> Wilkinson House, Jordan Hill Road, Oxford OX2 8DR, United Kingdom.
>
> This e-mail has been scanned for all viruses by Star. The service is
> powered by MessageLabs.
> ________________________________________________________________________
>
>
> _______________________________________________
> Axiom-mail mailing list
> Axiom-mail@nongnu.org
> http://lists.nongnu.org/mailman/listinfo/axiom-mail
>

------=_Part_17480_11418194.1180734294614
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Thank, you Themos, for your suggestion - works like a charm!&nbsp; Am I to infer from this that pattern matching works by parsing the input element by element?&nbsp; Or is there some other Deep Magic going on?<br><br>And Martin, I tried every imaginable combination of expand/factor, but nothing worked!
<br><br>cheers,<br>Alasdair<br><br><div><span class="gmail_quote">On 6/2/07, <b class="gmail_sendername">Themos Tsikas</b> &lt;<a href="mailto:themos@nag.co.uk">themos@nag.co.uk</a>&gt; wrote:</span><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
--try this in an input file<br><br>tt:=operator &#39;tt<br>ttrules := rule<br>&nbsp;&nbsp;tt(n^(a | integer?(a))) == t/a<br>&nbsp;&nbsp;tt(n/(n-1)) == 1/t<br>&nbsp;&nbsp;tt(n/(n^a+(X | integer?(a) and (n-1)^a = n^a +X))) == 1/t^a<br><br>ttrules tt(n^6)
<br>ttrules tt(n/(n-1))<br>ttrules tt(n/(n-1)^2)<br>ttrules tt(n/(n-1)^30)<br><br>________________________________________________________________________<br>The Numerical Algorithms Group Ltd is a company registered in England
<br>and Wales with company number 1249803. The registered office is:<br>Wilkinson House, Jordan Hill Road, Oxford OX2 8DR, United Kingdom.<br><br>This e-mail has been scanned for all viruses by Star. The service is<br>powered by MessageLabs.
<br>________________________________________________________________________<br><br><br>_______________________________________________<br>Axiom-mail mailing list<br><a href="mailto:Axiom-mail@nongnu.org">Axiom-mail@nongnu.org
</a><br><a href="http://lists.nongnu.org/mailman/listinfo/axiom-mail">http://lists.nongnu.org/mailman/listinfo/axiom-mail</a><br></blockquote></div><br>

------=_Part_17480_11418194.1180734294614--



From MAILER-DAEMON Fri Jun 01 20:11:02 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HuHCv-0005dX-R2
	for mharc-axiom-mail@gnu.org; Fri, 01 Jun 2007 20:11:01 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HuHCt-0005cS-BX
	for axiom-mail@nongnu.org; Fri, 01 Jun 2007 20:10:59 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HuHCr-0005bl-O9
	for axiom-mail@nongnu.org; Fri, 01 Jun 2007 20:10:59 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HuHCr-0005bY-Fh
	for axiom-mail@nongnu.org; Fri, 01 Jun 2007 20:10:57 -0400
Received: from smtp-vbr12.xs4all.nl ([194.109.24.32])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <soemraws@xs4all.nl>) id 1HuHCr-0001Q7-2F
	for axiom-mail@nongnu.org; Fri, 01 Jun 2007 20:10:57 -0400
Received: from blackstar (oemrawsingh.xs4all.nl [213.84.4.243])
	by smtp-vbr12.xs4all.nl (8.13.8/8.13.8) with SMTP id l520ArDb017255
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <axiom-mail@nongnu.org>; Sat, 2 Jun 2007 02:10:53 +0200 (CEST)
	(envelope-from soemraws@xs4all.nl)
Received: by blackstar (sSMTP sendmail emulation);
	Sat,  2 Jun 2007 02:10:51 +0200
From: "Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl>
Date: Sat, 2 Jun 2007 02:10:50 +0200
To: axiom-mail@nongnu.org
Subject: Re: [Axiom-mail]  Defining piece-wise functions and drawing,
	integrating, ...
Message-ID: <20070602001050.GA25534@blackstar.oemrawsingh.xs4all.nl>
Mail-Followup-To: axiom-mail@nongnu.org
References: <20070526224344.GA12166@blackstar.oemrawsingh.xs4all.nl>
	<9q3b1ig3h1.fsf@aquin.mat.univie.ac.at>
	<20070529212944.GA16566@blackstar.oemrawsingh.xs4all.nl>
	<9qmyzmiy4w.fsf@aquin.mat.univie.ac.at>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <9qmyzmiy4w.fsf@aquin.mat.univie.ac.at>
User-Agent: Mutt/1.5.13 (2006-08-11)
X-Virus-Scanned: by XS4ALL Virus Scanner
X-detected-kernel: FreeBSD 4.6-4.9
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 02 Jun 2007 00:11:00 -0000

Hi,

I filed a report on IssueTracker, but accidentally filed it twice (n00bs...)
Sorry for that. The latter filing is more complete and  correctly categorised.

Integrating over a list of functions with a list of boundaries is certainly
a clever way of doing this, but alas, I do not know a priori what the
boundaries of integration are. In other words, some of these functions will
be displaced and some boundaries will come before others. I've always done
this integration by hand, as well as the ordering of the boundaries, but
things are getting more and more ridiculous now, with many, many different
cases. I was hoping that Axiom could figure all this out itself.

I will try to see if I can do some clever extraction and ordering, making
both the boundaries and the functions a function of the displacement.

Thanks for the tips, though,

Sumant


On Wed, May 30, 2007 at 09:11:43AM +0200, Martin Rubey wrote:
> "Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl> writes:
> 
> > Hi,
> > 
> > Thanks for the reply. Too bad integration over such functions can't be done
> > symbolically. I also don't quite understand why for the draw function, the
> > function si compiled with type Variable x -> Polynomial Integer, when
> > x=-1..1 is a range in R.
> 
> yes, that's very strange and should be debugged.  Maybe you could file a report
> on IssueTracker?
> 
> > I was hoping I could write down all my stuff in Axiom (symbolically), so that
> > I would, say, never have to go through stacks of paper, manually calculating
> > overlap integrals of two different, piece-wise functions, or stuff like
> > that. It would appear that I still have to do all this manually, if I would
> > like a symbolic answer :(
> 
> But you can still do this, if you know the boundaries of the functions!  Use
> something like
> 
> -- lf...list of functions
> -- x...integration variable
> -- lb...list of boundaries
> integratePiecewise(lf: List EXPR INT, x: Symbol, lb: List EXPR INT): EXPR INT ==
>     reduce(+, [integrate(f, x=b1..b2) for f in lf for b1 in lb for b2 in rest lb], 0)
> 
> Maybe you could even take a single f which is a piecewise defined function, and
> extract the necessary information, but that will need a little detective work.
> 
> 
> Martin
> 

-- 
Sumant S. R. Oemrawsingh
soemraws@xs4all.nl



From MAILER-DAEMON Fri Jun 01 23:20:26 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HuKAE-0002Br-0t
	for mharc-axiom-mail@gnu.org; Fri, 01 Jun 2007 23:20:26 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HuK8D-0000Od-QU
	for axiom-mail@nongnu.org; Fri, 01 Jun 2007 23:18:21 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HuK8C-0000Lz-Hs
	for axiom-mail@nongnu.org; Fri, 01 Jun 2007 23:18:21 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HuK8C-0000Ln-DP
	for axiom-mail@nongnu.org; Fri, 01 Jun 2007 23:18:20 -0400
Received: from smtp1.xplornet.com ([207.179.143.253])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <bill.page@xplornet.com>) id 1HuK8B-0002Kd-SO
	for axiom-mail@nongnu.org; Fri, 01 Jun 2007 23:18:20 -0400
Received: from asus ([207.35.46.72]) (authenticated bits=0)
	by smtp1.xplornet.com (8.13.8/8.13.8) with ESMTP id l523HrOR009208;
	Sat, 2 Jun 2007 00:18:13 -0300
From: "Bill Page" <bill.page@xplornet.com>
To: "'Sumant S.R. Oemrawsingh'" <soemraws@xs4all.nl>
Subject: RE: [Axiom-mail]  Defining piece-wise functions and drawing,
	integrating, ...
Date: Fri, 1 Jun 2007 23:16:32 -0400
Message-ID: <00f601c7a4c4$72bfb4a0$6900a8c0@asus>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: quoted-printable
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook, Build 10.0.6822
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3028
In-Reply-To: <20070602001050.GA25534@blackstar.oemrawsingh.xs4all.nl>
Thread-Index: AcekqqfNdo2rl5zFSZ2pOXoGYYPELwAEx+8w
Importance: Normal
X-detected-kernel: Linux 2.6 (newer, 1)
X-Mailman-Approved-At: Fri, 01 Jun 2007 23:20:24 -0400
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 02 Jun 2007 03:18:22 -0000

On June 1, 2007 8:11 PM Sumant S.R. Oemrawsingh wrote:
>=20
> I filed a report on IssueTracker, but accidentally filed it=20
> twice (n00bs...) Sorry for that.

No problem. I deleted the first one. Only this one remains:

http://wiki.axiom-developer.org/358VariableIsApparentlyAlwaysAssumedToBeP=
osi
tive

> The latter filing is more complete and correctly categorised.

Good. Thanks for submitting the report!

Normally I would add my comments directly to the report, but
I think this one deserves a little discussion first because
it is important to understand what Axiom is doing with your
commands.

First of all to make things clear I suggest you declare the
function f as applying to an integer and yielding an integer,
like this:

(1) -> f:Integer->Integer
                                                    Type: Void

In fact in Axiom all functions have a specified domain and
co-domain (signature), although sometimes the Axiom interpreter
will make some assumptions about the domain and co-domain for
you.

Now you can define the body of the function as follows:

(2) -> f(x|x<0)=3D=3D-x**2
                                                     Type: Void
(3) -> f(x|x>=3D0)=3D=3Dx**2

                                                     Type: Void

And try evaluating it for some example values:

(4) -> f(5)
   Compiling function f with type Integer -> Integer

   (4)  25
                                                        Type:
PositiveInteger
(5) -> f(-5)

   (5)  - 25
                                                                Type:
Integer

But what happens if you just write 'f(x)'?

(6) -> f(x)
   Conversion failed in the compiled user function f .

   Cannot convert from type Symbol to Integer for value
   x

Do you see why this failed? x is not an Integer - it is a
symbol!

So what happened in your example in issue #358 ?

You did not specify the signature of the function so the
Axiom interpreter assigned one for you. E.g.

(6) -> )cl all
   All user variables and function definitions have been cleared.

(1) -> f(x|x<0)=3D=3D-x**2
                                                      Type: Void
(2) -> f(x|x>=3D0)=3D=3Dx**2
                                                      Type: Void

So far we have only specified the body of the function. It has
no signature. This is only a function prototype, not an actual
function (yet). But as soon as Axiom has enough context it will
make an assumption about the signature.

In the next command Axiom first makes the reasonable assumption
that the digit 5 represents a positive integer and then guesses
the signature of the function f to be

f: PositiveInteger -> Integer

(3) -> f(5)
   Compiling function f with type PositiveInteger -> Integer

   (3)  25
                                          Type: PositiveInteger

Then Axiom retracts the result to positive integer again.

But starting with -5, Axiom makes the assumption that by -5
you mean an integer, and so defines a new subtly function
with signature

f: Integer -> Integer

(4) -> f(-5)
   Compiling function f with type Integer -> Integer

   (4)  - 25
                                                 Type: Integer

Now, suppose we try to call f with 'x'. 'x' is just a variable.
Axiom needs to define yet another function based on the
prototype that you provided. This time it guesses the following
signature:

f: Variable x -> Polynomial Integer

(5) -> f(x)
   Compiling function f with type Variable x -> Polynomial Integer

         2
   (5)  x
                                          Type: Polynomial Integer

So why do we get the result 'x^2' and not '-x^2' ? The answer
is that Axiom provides more that one meaning for <. In the case
of polynomials, Axiom treats < as the lexical ordering. So we
get the following result:

(6) -> x>0

   (6)  true
                                                Type: Boolean
(7) -> x<0

   (7)  false
                                                Type: Boolean

Therefore Axiom takes the 2nd branch of the body of the
definition of the function f. This is probably not at all what
you expected, but this is implicitly exactly what you asked
Axiom to do by omitting the signature of the function.

(8) -> eval(f(x),x=3D-5)

   (8)  25
                                      Type: Polynomial Integer

Does not return -25 because you asked it to first evaluate
f(x), which yields 'x^2' and then replace 'x' by -5 in that
expression.

Does this make sense to you?

You said you expected the 'f(x)' would represent some kind
of expression defined in a piecewise manner, but Axiom does
not currently have any expressions of this kind.

Regards,
Bill Page.





From MAILER-DAEMON Sat Jun 02 02:34:37 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HuNC9-000358-GE
	for mharc-axiom-mail@gnu.org; Sat, 02 Jun 2007 02:34:37 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HuNC7-00031x-KN
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 02:34:35 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HuNC3-0002xK-Tl
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 02:34:35 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HuNC3-0002x6-QN
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 02:34:31 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1HuNC2-0002e6-Js
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 02:34:31 -0400
Received: from joan.univie.ac.at ([131.130.3.110] helo=joan.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HuNBw-0005UT-FL; Sat, 02 Jun 2007 08:34:24 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by joan.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HuNBw-000657-E7; Sat, 02 Jun 2007 08:34:24 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: "Alasdair McAndrew" <amca01@gmail.com>
Subject: Re: [Axiom-mail] A pattern matching question
References: <1d67a53c0706010654n7b2e0bc1k8d85a06af6bb3500@mail.gmail.com>
	<200706011418.08522.themos@nag.co.uk>
	<1d67a53c0706011444q388ca82em2b8061ed349c21f@mail.gmail.com>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 02 Jun 2007 08:34:23 +0200
In-Reply-To: <1d67a53c0706011444q388ca82em2b8061ed349c21f@mail.gmail.com>
Message-ID: <9q8xb2zwy8.fsf@aquin.mat.univie.ac.at>
Lines: 25
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 02 Jun 2007 06:34:35 -0000

"Alasdair McAndrew" <amca01@gmail.com> writes:

> Thank, you Themos, for your suggestion - works like a charm!  Am I to infer
> from this that pattern matching works by parsing the input element by
> element?  

That's what I believe, too.

> Or is there some other Deep Magic going on?

To be honest, I don't know really.  After all, there is some support for
matching units...

> And Martin, I tried every imaginable combination of expand/factor, but
> nothing worked!

Oh sorry, I didn't mean to imply that you could tell axiom to expand or factor
a pattern.

By the way, could you file the freeOf? failure as a bug at IssueTracker,
including a minimal example - i.e., a single rule, and the workaround?

Thank you,

Martin




From MAILER-DAEMON Sat Jun 02 02:45:29 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HuNMf-0001nP-8j
	for mharc-axiom-mail@gnu.org; Sat, 02 Jun 2007 02:45:29 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HuNMc-0001kQ-0O
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 02:45:26 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HuNMY-0001du-HQ
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 02:45:25 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HuNMY-0001dr-90
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 02:45:22 -0400
Received: from ug-out-1314.google.com ([66.249.92.171])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <amca01@gmail.com>) id 1HuNMX-0003ga-CM
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 02:45:21 -0400
Received: by ug-out-1314.google.com with SMTP id a2so371504ugf
	for <axiom-mail@nongnu.org>; Fri, 01 Jun 2007 23:45:15 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed; d=gmail.com; s=beta;
	h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=D3KigqTgb7TE8OE7fyEV3XHv4cXDNZy6r0SGcdyVPl98ve7BRcsze8syp4oaQ54UdRisu9aMdCdxosVzZuAyn8hN9dvwd9wfy+87V3jYOIkcaUzDMf/CNg3rEZ2dt2nY+4WG/ELDbNXV68X+7z+uPo8LB3tU9zgX4nD2H8Mh28U=
DomainKey-Signature: a=rsa-sha1; c=nofws; d=gmail.com; s=beta;
	h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=JvUBgpbEKUmOyUpQhw7T9bdM2bD4ha7dWkzKfOX9SsfWLy+lwEqeVHTkSuqfO0kWNmHV5VEaVE5NUXl3fW+OZqg1g6cLK7pW5T43ho03S81waJijU6vsvadrXwS6HpShKyzlUgSvX2mvSqCYNKr3pWBjVsmsZaZ23tt7RNI+Phw=
Received: by 10.67.31.17 with SMTP id i17mr1334113ugj.1180766715718;
	Fri, 01 Jun 2007 23:45:15 -0700 (PDT)
Received: by 10.67.15.4 with HTTP; Fri, 1 Jun 2007 23:45:15 -0700 (PDT)
Message-ID: <1d67a53c0706012345y27f411f0y8dc440ed08ac53e8@mail.gmail.com>
Date: Sat, 2 Jun 2007 16:45:15 +1000
From: "Alasdair McAndrew" <amca01@gmail.com>
To: "Martin Rubey" <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
Subject: Re: [Axiom-mail] A pattern matching question
In-Reply-To: <9q8xb2zwy8.fsf@aquin.mat.univie.ac.at>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_19077_20509134.1180766715688"
References: <1d67a53c0706010654n7b2e0bc1k8d85a06af6bb3500@mail.gmail.com>
	<200706011418.08522.themos@nag.co.uk>
	<1d67a53c0706011444q388ca82em2b8061ed349c21f@mail.gmail.com>
	<9q8xb2zwy8.fsf@aquin.mat.univie.ac.at>
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Cc: 
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 02 Jun 2007 06:45:26 -0000

------=_Part_19077_20509134.1180766715688
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

I will certainly file an example under IssueTracker, maybe using a cut-down
version of the "ttrules" example I posted earlier.  I am still beavering
away at my z-transforms with pattern matching, adding a few more rules, and
running into yet more difficulties with Axiom's handling of patterns.  I
will carry on a bit longer and then throw myself on your mercy (yet again)!

Maybe pattern matching is not as well supported in Axiom as I imagined, but
if I can get it to work, it would be a very elegant way of implementing the
z-transform.

cheers,
Alasdair

On 02 Jun 2007 08:34:23 +0200, Martin Rubey <martin.rubey@univie.ac.at>
wrote:
>
> "Alasdair McAndrew" <amca01@gmail.com> writes:
>
> > Thank, you Themos, for your suggestion - works like a charm!  Am I to
> infer
> > from this that pattern matching works by parsing the input element by
> > element?
>
> That's what I believe, too.
>
> > Or is there some other Deep Magic going on?
>
> To be honest, I don't know really.  After all, there is some support for
> matching units...
>
> > And Martin, I tried every imaginable combination of expand/factor, but
> > nothing worked!
>
> Oh sorry, I didn't mean to imply that you could tell axiom to expand or
> factor
> a pattern.
>
> By the way, could you file the freeOf? failure as a bug at IssueTracker,
> including a minimal example - i.e., a single rule, and the workaround?
>
> Thank you,
>
> Martin
>
>

------=_Part_19077_20509134.1180766715688
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

I will certainly file an example under IssueTracker, maybe using a cut-down version of the &quot;ttrules&quot; example I posted earlier.&nbsp; I am still beavering away at my z-transforms with pattern matching, adding a few more rules, and running into yet more difficulties with Axiom&#39;s handling of patterns.&nbsp; I will carry on a bit longer and then throw myself on your mercy (yet again)!
<br><br>Maybe pattern matching is not as well supported in Axiom as I imagined, but if I can get it to work, it would be a very elegant way of implementing the z-transform.<br><br>cheers,<br>Alasdair<br><br><div><span class="gmail_quote">
On 02 Jun 2007 08:34:23 +0200, <b class="gmail_sendername">Martin Rubey</b> &lt;<a href="mailto:martin.rubey@univie.ac.at">martin.rubey@univie.ac.at</a>&gt; wrote:</span><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
&quot;Alasdair McAndrew&quot; &lt;<a href="mailto:amca01@gmail.com">amca01@gmail.com</a>&gt; writes:<br><br>&gt; Thank, you Themos, for your suggestion - works like a charm!&nbsp;&nbsp;Am I to infer<br>&gt; from this that pattern matching works by parsing the input element by
<br>&gt; element?<br><br>That&#39;s what I believe, too.<br><br>&gt; Or is there some other Deep Magic going on?<br><br>To be honest, I don&#39;t know really.&nbsp;&nbsp;After all, there is some support for<br>matching units...<br>
<br>&gt; And Martin, I tried every imaginable combination of expand/factor, but<br>&gt; nothing worked!<br><br>Oh sorry, I didn&#39;t mean to imply that you could tell axiom to expand or factor<br>a pattern.<br><br>By the way, could you file the freeOf? failure as a bug at IssueTracker,
<br>including a minimal example - i.e., a single rule, and the workaround?<br><br>Thank you,<br><br>Martin<br><br></blockquote></div><br>

------=_Part_19077_20509134.1180766715688--



From MAILER-DAEMON Sat Jun 02 02:46:22 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HuNNW-00030C-SH
	for mharc-axiom-mail@gnu.org; Sat, 02 Jun 2007 02:46:22 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HuNNU-0002xO-Qi
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 02:46:20 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HuNNT-0002uy-FL
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 02:46:20 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43)
	id 1HuNNR-0002qe-5C; Sat, 02 Jun 2007 02:46:17 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HuNNP-0003lc-OA; Sat, 02 Jun 2007 02:46:16 -0400
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HuNNE-0006IJ-V7; Sat, 02 Jun 2007 08:46:04 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HuNNE-0005MI-U2; Sat, 02 Jun 2007 08:46:04 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: "Bill Page" <bill.page@xplornet.com>, Alasdair.McAndrew@vu.edu.au
Subject: Re: [Axiom-mail]  Defining piece-wise functions and drawing,
	integrating, ...
References: <00f601c7a4c4$72bfb4a0$6900a8c0@asus>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 02 Jun 2007 08:46:04 +0200
In-Reply-To: <00f601c7a4c4$72bfb4a0$6900a8c0@asus>
Message-ID: <9qr6ouj1lf.fsf@aquin.mat.univie.ac.at>
Lines: 28
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-devel <axiom-developer@nongnu.org>, axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 02 Jun 2007 06:46:21 -0000

Dear Bill,

"Bill Page" <bill.page@xplornet.com> writes:

> http://wiki.axiom-developer.org/358VariableIsApparentlyAlwaysAssumedToBePosi
> tive
> 
> > The latter filing is more complete and correctly categorised.
> 
> Good. Thanks for submitting the report!
> 
> Normally I would add my comments directly to the report, but I think this one
> deserves a little discussion first because it is important to understand what
> Axiom is doing with your commands.

Thanks for your nice explanation.  I temporarily forgot that axiom evaluates
all the arguments before passing them to the function. :-) A feature I *really*
love about axiom, by the way.

Thus it first finds a type for f(x), then for x=-1..1, and then tries to find a
fitting signature for draw.  However, doesn't axiom sometimes try several
signatures, until it succeeds?  Here, it sticks to the very first type it can
find for f(x).  It seems that Axiom assumes that compiling a function with two
different signatures yields the same result.  Well, that's probably reasonable.

I guess we can close the issue.  Maybe we should rename it though?

Martin




From MAILER-DAEMON Sat Jun 02 04:28:55 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HuOyl-0004J7-4g
	for mharc-axiom-mail@gnu.org; Sat, 02 Jun 2007 04:28:55 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HuOyj-0004H0-LJ
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 04:28:53 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HuOyh-0004EE-Gu
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 04:28:53 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43)
	id 1HuOyb-00044v-SM; Sat, 02 Jun 2007 04:28:46 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HuOya-0007fg-0Y; Sat, 02 Jun 2007 04:28:44 -0400
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HuOyQ-0007Rg-8y; Sat, 02 Jun 2007 10:28:34 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HuOyQ-0007IP-7T; Sat, 02 Jun 2007 10:28:34 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: Alasdair.McAndrew@vu.edu.au
Subject: Re: [Axiom-mail] A pattern matching question
References: <1d67a53c0706010654n7b2e0bc1k8d85a06af6bb3500@mail.gmail.com>
	<200706011418.08522.themos@nag.co.uk>
	<9qd50fs92v.fsf@aquin.mat.univie.ac.at>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 02 Jun 2007 10:28:33 +0200
In-Reply-To: <9qd50fs92v.fsf@aquin.mat.univie.ac.at>
Message-ID: <9qmyzi4v66.fsf@aquin.mat.univie.ac.at>
Lines: 41
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: themos@nag.co.uk, axiom-devel <axiom-developer@nongnu.org>,
	axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 02 Jun 2007 08:28:54 -0000

Dear Themos, Alasdair,

trying to debug the freeOf? pattern, I discovered that Themos' pattern suffers
from the same problem:

tt:=operator 'tt; ttrules := rule tt(n/(n^a+(X | integer?(a) and (n-1)^a = n^a +X))) == 1/t^a

(100) -> ttrules tt(n/(n^6+anything))

           1
   (100)  --
           6
          t
                                                     Type: Expression Integer

The problem seems to be that the syntactic sugar for the suchThat operation "|"
only works if we have a function of a single variable.  Of course, calling
suchThat without sugar, axiom does the right thing:

(101) -> ttrules := suchThat(rule tt(n/(n^a+X)) == 1/t^a, [a, X], l +-> integer? first
 l and (n-1)^(first l) = n^(first l) + second l)

                n        1
   (101)  tt(------) == --
              a          a
             n  + X     t
                        Type: RewriteRule(Integer,Integer,Expression Integer)
(102) -> ttrules tt(n/(n^6+anything))

                   n
   (102)  tt(-------------)
              6
             n  + anything
                                                     Type: Expression Integer
(103) -> ttrules tt(n/((n-1)^6))

           1
   (103)  --
           6
          t
                                                     Type: Expression Integer




From MAILER-DAEMON Sat Jun 02 09:21:47 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HuTYA-0003jp-VQ
	for mharc-axiom-mail@gnu.org; Sat, 02 Jun 2007 09:21:46 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HuTY9-0003it-2H
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 09:21:45 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HuTY8-0003ie-KP
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 09:21:44 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43)
	id 1HuTY6-0003iM-VY; Sat, 02 Jun 2007 09:21:43 -0400
Received: from mo-p07-ob.rzone.de ([81.169.146.189])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>)
	id 1HuTY6-0001Lw-Ja; Sat, 02 Jun 2007 09:21:42 -0400
Received: from [192.168.138.17] (funklan.cybnes.com [194.187.177.88])
	by post.webmailer.de (klopstock mo38) (RZmta 7.1)
	with ESMTP id H00775j52BtpIp ; Sat, 2 Jun 2007 15:21:38 +0200 (MEST)
Message-ID: <46616EE0.7000403@hemmecke.de>
Date: Sat, 02 Jun 2007 15:21:36 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.0 (X11/20070326)
MIME-Version: 1.0
To: Martin Rubey <martin.rubey@univie.ac.at>
Subject: Re: [Axiom-mail]  Defining piece-wise functions and drawing,
	integrating, ...
References: <00f601c7a4c4$72bfb4a0$6900a8c0@asus>
	<9qr6ouj1lf.fsf@aquin.mat.univie.ac.at>
In-Reply-To: <9qr6ouj1lf.fsf@aquin.mat.univie.ac.at>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-RZG-AUTH: kNFH2zO1gYIaN0yGuAImCzqpyKmhtxH+j8dRrTCCWf+/WqJ9Gj0JyW1cHrc=
X-RZG-CLASS-ID: mo07
X-detected-kernel: Solaris 10 (beta)
Cc: Bill Page <bill.page@xplornet.com>,
	axiom-devel <axiom-developer@nongnu.org>,
	Alasdair.McAndrew@vu.edu.au, axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 02 Jun 2007 13:21:45 -0000

On 06/02/2007 08:46 AM, Martin Rubey wrote:
> Dear Bill,
> 
> "Bill Page" <bill.page@xplornet.com> writes:
> 
>> http://wiki.axiom-developer.org/358VariableIsApparentlyAlwaysAssumedToBePosi
>> tive
>>
>>> The latter filing is more complete and correctly categorised.
>> Good. Thanks for submitting the report!
>>
>> Normally I would add my comments directly to the report, but I think this one
>> deserves a little discussion first because it is important to understand what
>> Axiom is doing with your commands.
> 
> Thanks for your nice explanation.  I temporarily forgot that axiom evaluates
> all the arguments before passing them to the function. :-) A feature I *really*
> love about axiom, by the way.

Bill, that is a really nice explanation of what happens and it should 
*not* be forgotten inside the mailing lists.

> Thus it first finds a type for f(x), then for x=-1..1, and then tries to find a
> fitting signature for draw.  However, doesn't axiom sometimes try several
> signatures, until it succeeds?  Here, it sticks to the very first type it can
> find for f(x).  It seems that Axiom assumes that compiling a function with two
> different signatures yields the same result.  Well, that's probably reasonable.
> 
> I guess we can close the issue.  Maybe we should rename it though?

I would say close it, when someone has started yet another file 
"tutorial.pamphlet" (maybe even mathaction is OK) which contains exactly 
what Bill has written. There should be several such tutorial sections. 
It is good if somebody tells you what actually happens in particular if 
you don't expect Axiom's output.

Just recently I gave up on TeXmacs, since I ran into too many problems 
that I could not solve and that were not properly explained in a tutorial.

Yes, I think it is even good to show "error messages" and explain why 
they appear. If you deal with some software and often find that it 
behaves differently from what you expect, you get frustrated.

Ralf




From MAILER-DAEMON Sat Jun 02 13:19:59 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HuXGh-0007DH-BF
	for mharc-axiom-mail@gnu.org; Sat, 02 Jun 2007 13:19:59 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HuXGg-0007DC-6f
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 13:19:58 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HuXGd-0007D0-Kv
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 13:19:56 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HuXGd-0007Cx-Fv
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 13:19:55 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1HuXGd-0007rT-3Y
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 13:19:55 -0400
Received: from joan.univie.ac.at ([131.130.3.110] helo=joan.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HuXGb-0001qV-C2; Sat, 02 Jun 2007 19:19:53 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by joan.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HuXGb-0001AG-Aw; Sat, 02 Jun 2007 19:19:53 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: "Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl>
Subject: Re: [Axiom-mail]  Defining piece-wise functions and drawing,
	integrating, ...
References: <20070526224344.GA12166@blackstar.oemrawsingh.xs4all.nl>
	<9q3b1ig3h1.fsf@aquin.mat.univie.ac.at>
	<20070529212944.GA16566@blackstar.oemrawsingh.xs4all.nl>
	<9qmyzmiy4w.fsf@aquin.mat.univie.ac.at>
	<20070602001050.GA25534@blackstar.oemrawsingh.xs4all.nl>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 02 Jun 2007 19:19:52 +0200
In-Reply-To: <20070602001050.GA25534@blackstar.oemrawsingh.xs4all.nl>
Message-ID: <9q64666zpj.fsf@aquin.mat.univie.ac.at>
Lines: 19
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 02 Jun 2007 17:19:58 -0000

"Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl> writes:

> Integrating over a list of functions with a list of boundaries is certainly a
> clever way of doing this, but alas, I do not know a priori what the
> boundaries of integration are. In other words, some of these functions will
> be displaced and some boundaries will come before others. I've always done
> this integration by hand, as well as the ordering of the boundaries, but
> things are getting more and more ridiculous now, with many, many different
> cases. I was hoping that Axiom could figure all this out itself.

Hm, an example would be great here.  What information do you have, and what do
you want axiom to figure out?  Are your boundaries always "numeric" like %e,
%pi, sin(1), etc., i.e., convertible to, say, floats?  Otherwise, you probably
cannot expect automatic ordering, since there is no order, even in one
variable: sin y < cos y or not?  Worse: y^2 > y or not?

Finally, I do not understand what you mean with "displacement".

Martin




From MAILER-DAEMON Sat Jun 02 18:15:22 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HubsY-0002BL-IR
	for mharc-axiom-mail@gnu.org; Sat, 02 Jun 2007 18:15:22 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HubsW-000273-3e
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 18:15:20 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HubsV-00026U-GV
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 18:15:19 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HubsV-00026D-6j
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 18:15:19 -0400
Received: from ug-out-1314.google.com ([66.249.92.174])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <amca01@gmail.com>) id 1HubsT-00039k-UG
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 18:15:18 -0400
Received: by ug-out-1314.google.com with SMTP id a2so464420ugf
	for <axiom-mail@nongnu.org>; Sat, 02 Jun 2007 15:15:16 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed; d=gmail.com; s=beta;
	h=domainkey-signature:received:received:message-id:date:from:to:subject:mime-version:content-type;
	b=pJ7gawrxjyNoXL6c3Pt0gcF37DWoRShf8kJx7PYqYVBtIWrVjk71Z5PPneS/NI8nttOt+k3SLRD05zcu60SH+0DYtgAVOexNdzvL72E1pxB6SVMHxC/H40Y2QIH4iDGlkV3RC0kw1DNmk58tomOaAm0GS+bVoL62QDqPbNjtDjg=
DomainKey-Signature: a=rsa-sha1; c=nofws; d=gmail.com; s=beta;
	h=received:message-id:date:from:to:subject:mime-version:content-type;
	b=XQyY0q7bNEgUJxIGQ6hT7sqLwLTXPV3kVP/fhVjC2gKpnnyt9XsdgS9YxdgHmCg+uDPr6Hp+GSBT/OtPLCLR4x+yAabWyt7yccNt69UjKSQ6vewsXFZKaPtvOBqaRPre2tFrrzQRFYiTjG+wuHJz97aFkp5MaVKTVispznRSNZA=
Received: by 10.67.88.20 with SMTP id q20mr1854919ugl.1180822516507;
	Sat, 02 Jun 2007 15:15:16 -0700 (PDT)
Received: by 10.67.15.4 with HTTP; Sat, 2 Jun 2007 15:15:16 -0700 (PDT)
Message-ID: <1d67a53c0706021515j6e4031eeo7a6068ff0523d224@mail.gmail.com>
Date: Sun, 3 Jun 2007 08:15:16 +1000
From: "Alasdair McAndrew" <amca01@gmail.com>
To: axiom-mail@nongnu.org
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_21700_17772371.1180822516480"
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Subject: [Axiom-mail] Converting to and from partial fractions
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 02 Jun 2007 22:15:20 -0000

------=_Part_21700_17772371.1180822516480
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

This is an example of where Axiom's handling of domains fries my limited
brain.

ex:=z/(z-1)+2*z/(z-3)

(Result is returned as a single polynomial fraction.)

Now, what I want to do is to break this single fraction up into its original
components.  The canonical way to do this (for my purposes), is to divide
the fraction by z, form partial fractions, and multiply through by z.  Here
goes:

exf:=partialFraction(ex/z::FRAC POLY INT,z)$PFRPAC(INT)

Now, because the result is returned as a partial fraction,if I try

nthFractionalTerm(exf,1)*z

I don't get 2*z/(z-3), but 2+6/(z-3).  So I need to remove this term from
its partialFraction domain.

But none of nthFractionalTerm(exf,1)::FRAC POLY INT,
nthFractionalTerm(exf,1)::EXPR INT seem to work.

Any ideas?

Thanks,
Alasdair

------=_Part_21700_17772371.1180822516480
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

This is an example of where Axiom&#39;s handling of domains fries my limited brain.<br><br>ex:=z/(z-1)+2*z/(z-3)<br><br>(Result is returned as a single polynomial fraction.)<br><br>Now, what I want to do is to break this single fraction up into its original components.&nbsp; The canonical way to do this (for my purposes), is to divide the fraction by z, form partial fractions, and multiply through by z.&nbsp; Here goes:
<br><br>exf:=partialFraction(ex/z::FRAC POLY INT,z)$PFRPAC(INT)<br><br>Now, because the result is returned as a partial fraction,if I try<br><br>nthFractionalTerm(exf,1)*z<br><br>I don&#39;t get 2*z/(z-3), but 2+6/(z-3).&nbsp; So I need to remove this term from its partialFraction domain.
<br><br>But none of nthFractionalTerm(exf,1)::FRAC POLY INT, nthFractionalTerm(exf,1)::EXPR INT seem to work.<br><br>Any ideas?<br><br>Thanks,<br>Alasdair<br>

------=_Part_21700_17772371.1180822516480--



From MAILER-DAEMON Sat Jun 02 22:21:37 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hufir-0004rF-5R
	for mharc-axiom-mail@gnu.org; Sat, 02 Jun 2007 22:21:37 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hufip-0004pC-Ug
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 22:21:36 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hufio-0004nu-VA
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 22:21:35 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hufio-0004nj-PY
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 22:21:34 -0400
Received: from smtp-vbr12.xs4all.nl ([194.109.24.32])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <soemraws@xs4all.nl>) id 1Hufio-0001eG-AU
	for axiom-mail@nongnu.org; Sat, 02 Jun 2007 22:21:34 -0400
Received: from blackstar (oemrawsingh.xs4all.nl [213.84.4.243])
	by smtp-vbr12.xs4all.nl (8.13.8/8.13.8) with SMTP id l532LUpl075450
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <axiom-mail@nongnu.org>; Sun, 3 Jun 2007 04:21:30 +0200 (CEST)
	(envelope-from soemraws@xs4all.nl)
Received: by blackstar (sSMTP sendmail emulation);
	Sun,  3 Jun 2007 04:21:28 +0200
From: "Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl>
Date: Sun, 3 Jun 2007 04:21:28 +0200
To: axiom-mail@nongnu.org
Subject: Re: [Axiom-mail]  Defining piece-wise functions and drawing,
	integrating, ...
Message-ID: <20070603022127.GA28590@blackstar.oemrawsingh.xs4all.nl>
Mail-Followup-To: axiom-mail@nongnu.org
References: <20070602001050.GA25534@blackstar.oemrawsingh.xs4all.nl>
	<00f601c7a4c4$72bfb4a0$6900a8c0@asus>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <00f601c7a4c4$72bfb4a0$6900a8c0@asus>
User-Agent: Mutt/1.5.13 (2006-08-11)
X-Virus-Scanned: by XS4ALL Virus Scanner
X-detected-kernel: FreeBSD 4.6-4.9
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sun, 03 Jun 2007 02:21:36 -0000

Hi Bill,

Thanks for your answer. It is now more clear to me what happens. As I am
completely new to Axiom, I probably don't understand the full philosophy
behind it yet, so I wish to ask a bit more on this, if you don't mind.

> You said you expected the 'f(x)' would represent some kind
> of expression defined in a piecewise manner, but Axiom does
> not currently have any expressions of this kind.

This is very strange, since in the Axiom book, there is a whole section on
piece-wise functions. Why have them, if they are not supported, so to say?
If it can be defined and yields correct answers when called with integers or
even expressions yielding specific values (say, sqrt(5) or cos(1/2)), why
can't it be integrated over a domain where the variable takes on specific
values for which all the definitions are required to be evaluated?

Thanks to your explanation, I understand why x < 0 (Variable, Polynomial
Integer, Symbol,...) *does not* return true, but I do not understand why it
*should* not return true (from a design point of view). But from a
mathematical point of view (imho), the expression x < 0 should not be false;
it should be true by default, unless it has been specified that x is an
element of some set, since if it is *not* defined, it can have *any* value,
also negative. Therefore, when one expects to test the domain of x, such as
in an expression like this, it should be true by default.

So, I wish to tell axiom that x is an element of, say, R. I understand that
I should declare the type, in my example Float -> Float, like so:

(1) -> f: (Float) -> Float
                                                                   Type: Void
(2) -> f(x|x<=0)==-x**2   
                                                                   Type: Void
(3) -> f(x|x>0)==x**2     
                                                                   Type: Void
(4) -> f(5)
   Compiling function f with type Float -> Float 

   (4)  - 25.0

(5) -> f(5**(1/3))
(5) -> 
   (5)  2.9240177382 128660655
                                                                  Type: Float

How do I get a symbolic answer now? I don't care what the answer up to n
digits is, I want to know the actual, exact answer. This is even worse:

(6) -> draw(f(x),x=-1..1)
   Conversion failed in the compiled user function f .
 
   Cannot convert from type Symbol to Float for value
   x

(6) -> integrate(f(x),x=-1..1)
   Conversion failed in the compiled user function f .
 
   Cannot convert from type Symbol to Float for value
   x

Granted, I really don't care that much about drawing the function. It is
more of a visual aid to see that I defined my function correctly. For the
example, this is not really necessary, but some of the functions I wish to
perform calculations with, have some wild definitions, with many pieces.
However, integration is very important, since that is what I really want to
do in the end. Even if it manages to give me an answer of the integral, I
still don't want to know the answer estimated to n digits, I would like the
exact answer.

So the real question I would like to ask is, how can I tell axiom that,
during function definition, my variable belongs to R (or C), while all
operations still remain symbolic? How can I get it to first evaluate the
value of x, figure out which function to use, and then return the value
symbolically again?

I have tried by using "numeric(x) > 0" in the conditions, but then
integration won't work since numeric won't work on symbols etc. Thanks to
your explanation, I already expected that before I even tried it. On a side
note, f(%pi) will work correctly then.

Which leads me to the following: why is %e fundamentally different from
%pi? Or, since Martin sort of answered that question already, I should ask:
why *should* %e be fundamentally different from %pi? 

(6) -> %e > 0                    
(6) -> 
   (6)  true
                                                                Type: Boolean

(7) -> %pi > 0
   There are 4 exposed and 1 unexposed library operations named < 
      having 2 argument(s) but none was determined to be applicable. 
      Use HyperDoc Browse, or issue
                                )display op <
      to learn more about the available operations. Perhaps 
      package-calling the operation or using coercions on the arguments
      will allow you to apply the operation.
 
   Cannot find a definition or applicable library operation named < 
      with argument type(s) 
                             NonNegativeInteger
                                     Pi
      
      Perhaps you should use "@" to indicate the required return type, 
      or "$" to specify which version of the function you need.


But I digress. The most imporant question is, how to define a function such
that it first evaluates the value of x, then chooses which case to use and
then perform the action?

In integrate(), I would expect it would look at the limits, perform an
indefinite integral of the relevant cases, and then fill in the limits for
each case correctly. For draw, I would expect something similar.

I've been doing some other stuff with axiom (no problems there!), and think
it is really amazing. That is also the reason that I find this particular
point so frustrating. So if you or any one could help, I would be very much
obliged.


Thanks,

Sumant

-- 
Sumant S. R. Oemrawsingh



From MAILER-DAEMON Sun Jun 03 02:27:17 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HujYb-0002KG-4y
	for mharc-axiom-mail@gnu.org; Sun, 03 Jun 2007 02:27:17 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HujDi-0003jW-Kv
	for axiom-mail@nongnu.org; Sun, 03 Jun 2007 02:05:42 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HujDh-0003jI-Oe
	for axiom-mail@nongnu.org; Sun, 03 Jun 2007 02:05:42 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HujDh-0003jF-LJ
	for axiom-mail@nongnu.org; Sun, 03 Jun 2007 02:05:41 -0400
Received: from smtp1.xplornet.com ([207.179.143.253])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <bill.page@xplornet.com>) id 1HujDh-0003Ky-02
	for axiom-mail@nongnu.org; Sun, 03 Jun 2007 02:05:41 -0400
Received: from asus (xplr-ts-t11-208-114-151-26.barrettxplore.com
	[208.114.151.26]) (authenticated bits=0)
	by smtp1.xplornet.com (8.13.8/8.13.8) with ESMTP id l5365FDB000661;
	Sun, 3 Jun 2007 03:05:32 -0300
From: "Bill Page" <bill.page@xplornet.com>
To: "'Sumant S.R. Oemrawsingh'" <soemraws@xs4all.nl>
Subject: RE: [Axiom-mail]  Defining piece-wise functions and drawing,
	integrating, ...
Date: Sun, 3 Jun 2007 02:03:50 -0400
Message-ID: <01ce01c7a5a4$fba96230$6900a8c0@asus>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook, Build 10.0.6822
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3028
In-Reply-To: <20070603022127.GA28590@blackstar.oemrawsingh.xs4all.nl>
Thread-Index: AcelhfJvW0UWB9NwSpW8bT0LDiuW4AAByKHw
Importance: Normal
X-detected-kernel: Linux 2.6 (newer, 1)
X-Mailman-Approved-At: Sun, 03 Jun 2007 02:27:16 -0400
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sun, 03 Jun 2007 06:05:42 -0000

On June 2, 2007 10:21 PM Sumant S.R. Oemrawsingh wrote:
> 
> Thanks for your answer. It is now more clear to me what 
> happens. As I am completely new to Axiom, I probably don't
> understand the full philosophy behind it yet, so I wish to
> ask a bit more on this, if you don't mind.

That is the purpose of this email list. Everyone is free to
ask and to answer questions here but if we discuss philosophy
I am afraid not everyone will agree. I believe that Axiom was
designed with a certain overall philosophy but that it was
not necessarily always applied consistently or in the same
manner by different people. For sure not everyone is going
to agree with my personal opinions about exact what this
"Axiom philosophy" is. I think that to properly discuss some
issues of philosophy requires a deep and thorough understanding
of the subject but not everyone has the patience or skill to
work at this level. Many people have very pragmatic reasons
for wanting to use a computer for doing mathematics - they have
some job they want to do and do not care too much about the
subject from an abstract "computer science" point of view. But
in my opinion the designers of Axiom did try very hard to take
the more general view while the designers of most other
superficially similar systems (e.g. reduce, maxima, maple,
mathematica, etc.) did not.

> 
> > You said you expected the 'f(x)' would represent some kind
> > of expression defined in a piecewise manner, but Axiom does
> > not currently have any expressions of this kind.
> 
> This is very strange, since in the Axiom book, there is a 
> whole section on piece-wise functions. Why have them, if
> they are not supported, so to say?

You have a very good point. Yes Axiom does have piece-wise
defined *functions* but it does not have piece-wise *expressions*.
It is important to make the distinction between function and
expression. In fact going deeper one can see that Axiom uses
the concept of "expression" in two different ways. In my
opinion understanding this is also an important part of the
Axiom philosophy.

For example in Axiom you can write the expression:

  (1) -> if x>0 then 1 else 0

    (1)  1
                              Type: PositiveInteger

The result of evaluating this expression depends on the value
assigned to x. This is a "piece-wise" expression in the sense
we have been discussing *BUT* this is a part of the Axiom
programming language - it is not part of any mathematical
object currently implemented in the Axiom library. The Axiom
library includes things like polynomials and even the domain
'Expression' containing expressions like 'x+1' or 'sin(1)'
but there is currently no domain in which we can find an
expression like 'if x>0 then 1 else 0'.

> If it can be defined and yields correct answers when called 
> with integers or even expressions yielding specific values
> (say, sqrt(5) or cos(1/2)), why can't it be integrated over
> a domain where the variable takes on specific values for
> which all the definitions are required to be evaluated?
> 

Do you understand the difference between writing?

  draw(sin(x),x=-5..5)

and

  draw(sin, -5..5)

Martin showed how you could use draw in this way to display a
piecewise defined function. Unfortunately Axiom's symbol
integration operator does not currently allow a function as
argument but Martin did gave an example of using 'Romberg' to
do numerical integration of functions.

In principle it would be possible to extend Axiom's integration
and differentiation operators to work symbolically on functions
but this is a non-trivial problem. I believe one Axiom developer
(Gabriel Dos Reis one of his students) has done some work on
symbol differentiation of functions.

It is also possible in principle to deal with piece-wise
expressions as mathematical objects in Axiom. Tim Daly has
discussed the development of a general "proviso" feature in
Axiom that would make this possible. But even fairly extensions
of the existing 'Expression' domain could probably handle
simple cases of piece-wise expressions of the sort you have
discussed so far.

> Thanks to your explanation, I understand why x < 0 (Variable, 
> Polynomial Integer, Symbol,...) *does not* return true, but
> I do not understand why it *should* not return true (from a
> design point of view).

Perhaps you are objecting to the decision of the Axiom library
developers to define '<' in terms of lexical ordering for
polynomials. Although this is natural in a certain context,
I agree that that was probably a poor choice on their part.

> But from a mathematical point of view (imho), the expression
> x < 0 should not be false; it should be true by default,
> unless it has been specified that x is an element of some
> set, since if it is *not* defined, it can have *any* value,
> also negative. Therefore, when one expects to test the
> domain of x, such as in an expression like this, it should
> be true by default.

I strongly disagree with this. Most people would read 'x<0'
as a logical predicate. It is true or false depending on
the value and/or quantification associated with x. You are
right to be concerned about the domain of x but unfortunately
Axiom currently has no way to evaluate logical predicates of
that kind.

> 
> So, I wish to tell axiom that x is an element of, say, R.
> I understand that I should declare the type, in my example
> Float -> Float, like so:
> 
> (1) -> f: (Float) -> Float
>                                                               
>      Type: Void
> (2) -> f(x|x<=0)==-x**2   
>                                                               
>      Type: Void
> (3) -> f(x|x>0)==x**2     
>                                                               
>      Type: Void
> (4) -> f(5)
>    Compiling function f with type Float -> Float 
> 
>    (4)  - 25.0
> 
> (5) -> f(5**(1/3))

>    (5)  2.9240177382 128660655
>                                                               
>     Type: Float
>

Right.
 
> How do I get a symbolic answer now? I don't care what the 
> answer up to n digits is, I want to know the actual, exact
> answer.

But you specified the domain 'Float' that is a domain where
numbers are represented by an approximation. If you want
symbolic answers you need to specify a different domain,
e.g. Expression Integer.

> This is even worse:
> 
> (6) -> draw(f(x),x=-1..1)
>    Conversion failed in the compiled user function f .
>  
>    Cannot convert from type Symbol to Float for value
>    x
> 

Write it this way:

  draw(f,-1..1)

When you write 'f(x)' you are asking for a piece-wise
expression but that is not currently possible in Axiom. But
if you operate directly on the piece-wise function then you
can get what you want.

> (6) -> integrate(f(x),x=-1..1)
>    Conversion failed in the compiled user function f .
>  
>    Cannot convert from type Symbol to Float for value
>    x
>

Unfortunately you can not currently write:

  integrate(f, -1..1)

except in the case where you would like to do numerical
integration (e.g. Romberg).
 
> Granted, I really don't care that much about drawing the 
> function. It is more of a visual aid to see that I defined
> my function correctly. For the example, this is not really
> necessary, but some of the functions I wish to perform
> calculations with, have some wild definitions, with many
> pieces.

For drawing that is ok.

> However, integration is very important, since that is what
> I really want to do in the end. Even if it manages to give
> me an answer of the integral, I still don't want to know
> the answer estimated to n digits, I would like the exact
> answer.
>

I think that exact integration of piece-wise functions in
general is a rather difficult problem.
 
> So the real question I would like to ask is, how can I
> tell axiom that, during function definition, my variable
> belongs to R (or C), while all operations still remain
> symbolic?

Right now there is no way to do this in Axiom but that is
(more or less) what Tim Daly means by a 'proviso'. This is
still a research topic in Axiom.

> How can I get it to first evaluate the value of x, figure
> out which function to use, and then return the value
> symbolically again?
> 

I don't know.

> I have tried by using "numeric(x) > 0" in the conditions,
> but then integration won't work since numeric won't work on
> symbols etc. Thanks to your explanation, I already expected
> that before I even tried it. On a side note, f(%pi) will
> work correctly then.
> 
> Which leads me to the following: why is %e fundamentally 
> different from %pi? Or, since Martin sort of answered that
> question already, I should ask: why *should* %e be
> fundamentally different from %pi? 

I don't think it should be. This is just an accident of a
series of separate design decisions. As Martin said, this
should probably be corrected by a more or less complete
redesign of how Axiom handles constants. This would amount
to another Axiom research project.

> 
> But I digress. The most important question is, how to define
> a function such that it first evaluates the value of x, then
> chooses which case to use and then perform the action?
> 
> In integrate(), I would expect it would look at the limits,
> perform an indefinite integral of the relevant cases, and
> then fill in the limits for each case correctly.

Perhaps you could describe this algorithm in more detail.
Can you write some Axiom scripts that perform this sort
of computation?

> For draw, I would expect something similar.
> 
> I've been doing some other stuff with axiom (no problems 
> there!), and think it is really amazing. That is also the
> reason that I find this particular point so frustrating. So
> if you or any one could help, I would be very much obliged.
> 

I hope this reply is of some help even though for the most
part it is saying that what you want from Axiom you will
probably have to help build for yourself. :-)

Regards,
Bill Page





From MAILER-DAEMON Sun Jun 03 05:18:47 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HumEZ-00049F-1z
	for mharc-axiom-mail@gnu.org; Sun, 03 Jun 2007 05:18:47 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HumEW-00049A-HE
	for axiom-mail@nongnu.org; Sun, 03 Jun 2007 05:18:44 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HumEU-00048y-27
	for axiom-mail@nongnu.org; Sun, 03 Jun 2007 05:18:43 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HumET-00048v-Sd
	for axiom-mail@nongnu.org; Sun, 03 Jun 2007 05:18:41 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1HumET-0003Zm-Er
	for axiom-mail@nongnu.org; Sun, 03 Jun 2007 05:18:41 -0400
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HumES-0002xE-3r; Sun, 03 Jun 2007 11:18:40 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HumES-0008Lp-2k; Sun, 03 Jun 2007 11:18:40 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: "Alasdair McAndrew" <amca01@gmail.com>
Subject: Re: [Axiom-mail] Converting to and from partial fractions
References: <1d67a53c0706021515j6e4031eeo7a6068ff0523d224@mail.gmail.com>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 03 Jun 2007 11:18:39 +0200
In-Reply-To: <1d67a53c0706021515j6e4031eeo7a6068ff0523d224@mail.gmail.com>
Message-ID: <9qps4ds8eo.fsf@aquin.mat.univie.ac.at>
Lines: 50
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sun, 03 Jun 2007 09:18:45 -0000

"Alasdair McAndrew" <amca01@gmail.com> writes:

> This is an example of where Axiom's handling of domains fries my limited
> brain.

Never say such things.

> ex:=z/(z-1)+2*z/(z-3)
> 
> (Result is returned as a single polynomial fraction.)

Yes. That's the "canonical form" for FRAC POLY INT.

> Now, what I want to do is to break this single fraction up into its original
> components.  The canonical way to do this (for my purposes), is to divide
> the fraction by z, form partial fractions, and multiply through by z.  Here
> goes:
> 
> exf:=partialFraction(ex/z::FRAC POLY INT,z)$PFRPAC(INT)
> 
> Now, because the result is returned as a partial fraction,if I try
> 
> nthFractionalTerm(exf,1)*z
> 
> I don't get 2*z/(z-3), but 2+6/(z-3).  So I need to remove this term from
> its partialFraction domain.
> 
> But none of nthFractionalTerm(exf,1)::FRAC POLY INT,

Look at the type of nthFractionalTerm(exf,1) and you'll see why: axiom is too
stupid to go the long way from 

    PartialFraction UnivariatePolynomial(z,Fraction Polynomial Integer)

to 

    FRAC POLY INT

Using HyperDoc, you can browse the operations of PartialFraction, select coerce
(for which :: is syntactic sugar) and find that it has a coercion 

    PartialFraction R -> Fraction R

Thus

    nthFractionalTerm(exf,1)::FRAC UP(z,FRAC POLY INT)

will do what you want.

Martin




From MAILER-DAEMON Sun Jun 03 06:16:06 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hun82-0005Nx-K9
	for mharc-axiom-mail@gnu.org; Sun, 03 Jun 2007 06:16:06 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hun81-0005M7-6K
	for axiom-mail@nongnu.org; Sun, 03 Jun 2007 06:16:05 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hun7z-0005Lv-KH
	for axiom-mail@nongnu.org; Sun, 03 Jun 2007 06:16:04 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hun7z-0005Ls-FR
	for axiom-mail@nongnu.org; Sun, 03 Jun 2007 06:16:03 -0400
Received: from mo-p07-ob.rzone.de ([81.169.146.189])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1Hun7z-00018W-2S
	for axiom-mail@nongnu.org; Sun, 03 Jun 2007 06:16:03 -0400
Received: from [192.168.138.17] (funklan.cybnes.com [194.187.177.88])
	by post.webmailer.de (klopstock mo8) (RZmta 7.1)
	with ESMTP id S007f5j535eKtG ; Sun, 3 Jun 2007 12:16:01 +0200 (MEST)
Message-ID: <466294E0.9050504@hemmecke.de>
Date: Sun, 03 Jun 2007 12:16:00 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.0 (X11/20070326)
MIME-Version: 1.0
To: Bill Page <bill.page@xplornet.com>
Subject: Re: [Axiom-mail]  Defining piece-wise functions and drawing,
	integrating, ...
References: <01ce01c7a5a4$fba96230$6900a8c0@asus>
In-Reply-To: <01ce01c7a5a4$fba96230$6900a8c0@asus>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-RZG-AUTH: kNFH2zO1gYIaN0yGuAImCzqpyKmhtxH+j8dRrTCCWf+/WqJ9Gj0JyW1cHrc=
X-RZG-CLASS-ID: mo07
X-detected-kernel: Solaris 10 (beta)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sun, 03 Jun 2007 10:16:05 -0000

> For example in Axiom you can write the expression:
> 
>   (1) -> if x>0 then 1 else 0
> 
>     (1)  1
>                               Type: PositiveInteger
> 
> The result of evaluating this expression depends on the value
> assigned to x. This is a "piece-wise" expression in the sense
> we have been discussing *BUT* this is a part of the Axiom
> programming language - it is not part of any mathematical
> object currently implemented in the Axiom library. The Axiom
> library includes things like polynomials and even the domain
> 'Expression' containing expressions like 'x+1' or 'sin(1)'
> but there is currently no domain in which we can find an
> expression like 'if x>0 then 1 else 0'.

Agreed, but what about telling Axiom the following:

(1) -> g(x)==if x>0 then x else -x
                                 Type: Void

(2) -> g(1)
    Compiling function g with type PositiveInteger -> Integer

    (2)  1
                                                         Type: 
PositiveInteger
(3) -> g(1.0)
    Compiling function g with type Float -> Float
    (3)  1.0
                                 Type: Float
(4) -> g(-1)
    Compiling function g with type Integer -> Integer

    (4)  1
                                 Type: PositiveInteger
(5) -> g(-1.0)
(5) ->
    (5)  1.0
                                 Type: Float
(6) -> g(y)
    Compiling function g with type Variable y -> Polynomial Integer

    (6)  y
                                 Type: Polynomial Integer
(7) -> g(y^2)
    Compiling function g with type Polynomial Integer -> Polynomial
       Integer

          2
    (7)  y
                                 Type: Polynomial Integer

What do we learn from that. Giving the interpreter a definition like

g(x)==if x>0 then x else -x

actually leaves a lot of guessing. Internally Axiom is strongly typed. 
So in order to make any sense of that expression one would have to give 
types. As one can see above there are actually several *different* 
functions compiled from the definition. The interpreter makes a good 
guess of the types. So let us in particular look at wat happens with
g(y).

The interpreter looks at the argument y and figures out that a good type 
for it is "Polynomial(Integer)". Now it takes the right hand side of the 
definition and figures out what the resulting type could be. So it 
arrives at

   Polynomial Integer -> Polynomial Integer

good guess. But now let's look at

   if x>0 then x else -x

or in particular at "x>0". The type of x is now clear, 
Polynomial(Integer). But what about the type of > and the type of 0.
Yes, 0 is a problem as well. Usually, what happens in that and similar 
cases is, that there are several options.

   >: (X, Y) -> Z
   0: U

X = Polynomial Integer is what is already known.
Z = Boolean can be figured out from where "x>0" is in the if expression.
I now have no complete overview about all the possible > functions, but 
I guess it can easily be restricted to something of the form

   >: (Polynomial Integer, Polynomial Integer) -> Boolean

Well, then the only reasonable choice for U to make the whole expression 
matching types is U=Polynomial(Integer).

OK, now everything is clear and the compilation can start.

Oh, but what is the implementation of > in Polynomial(Integer)?  Think 
about how you would implement it. Note that x, y, z are elements of 
Polynomial(Integer), but 5.0 or -5.0 are not.

Sumant, what you actually want to have is a polynomial function and not 
a polynomial. So for you the guess of the Axiom interpreter is wrong. 
But what can Axiom do? You just don't give enough information.

What you want is actually a function Float -> Float. For drawing that 
might be ok, but when it comes to integrating, that signature is bad. 
How can you as a human extract from a function that goes from the reals 
to the reals a generic way to integrate that function symbolically? It 
won't work, since what you need is an *expression* for the function.

As I see it, we are a bit in a dilemma here. We need the function 
expression here and at the same time > should be considered as something 
like (Float, Float) -> Boolean.

Yes, Bill is right, currently, Axiom's Expression(...) domain does not 
allow to contain an expression of the form "if a then b else c".

Sorry, I don't see a good solution at the moment.

Ralf



From MAILER-DAEMON Sun Jun 03 13:30:23 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HutuJ-00027c-4x
	for mharc-axiom-mail@gnu.org; Sun, 03 Jun 2007 13:30:23 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HutuH-00025f-SA
	for axiom-mail@nongnu.org; Sun, 03 Jun 2007 13:30:21 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HutuH-00025O-DY
	for axiom-mail@nongnu.org; Sun, 03 Jun 2007 13:30:21 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HutuH-00025L-6Y
	for axiom-mail@nongnu.org; Sun, 03 Jun 2007 13:30:21 -0400
Received: from mta15.mail.adelphia.net ([68.168.78.77] helo=mta15.adelphia.net)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <rayrogers@roadrunner.com>) id 1HutuG-00079Z-QD
	for axiom-mail@nongnu.org; Sun, 03 Jun 2007 13:30:20 -0400
Received: from rrogers-linux-2.local ([76.179.97.159]) by mta15.adelphia.net
	(InterMail vM.6.01.05.04 201-2131-123-105-20051025) with ESMTP
	id <20070603173017.GFXM21462.mta15.adelphia.net@rrogers-linux-2.local>
	for <axiom-mail@nongnu.org>; Sun, 3 Jun 2007 13:30:17 -0400
Message-ID: <4662FAA9.5080909@roadrunner.com>
Date: Sun, 03 Jun 2007 13:30:17 -0400
From: "Raymond E. Rogers" <rayrogers@roadrunner.com>
Organization: A constant variable
User-Agent: Thunderbird 2.0.0.0 (X11/20070505)
MIME-Version: 1.0
CC: axiom-mail@nongnu.org
Subject: Re: [Axiom-mail]  Defining piece-wise functions and drawing,
	integrating, ...
References: <01ce01c7a5a4$fba96230$6900a8c0@asus>
	<466294E0.9050504@hemmecke.de>
In-Reply-To: <466294E0.9050504@hemmecke.de>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-detected-kernel: Solaris 8 (2)
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: rrogers@plaidheron.com
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sun, 03 Jun 2007 17:30:22 -0000

Ralf Hemmecke wrote:
>
> Agreed, but what about telling Axiom the following:
>
> (1) -> g(x)==if x>0 then x else -x
>                                 Type: Void
>
> (
I am sorry for being a nuisance but I would like to point out:
This function can be expressed as
g(x)=  -x +2*DD^2
Where DD is the second order of the Dirac Delta function;  and DD^2 =
int(int(DD*1)) , a ramp starting at 0.  The point is that piecewise
polynomials  can be handled as generalized functions.
The integral int(g(x),a,b) would be [-(x^2/2)+DD^3]^b_a 

 I am retiring soon and perhaps will implement the useful parts of using
the Dirac Delta function in Axiom. 

Ray Rogers



From MAILER-DAEMON Sun Jun 03 17:03:39 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HuxEh-0008CR-CM
	for mharc-axiom-mail@gnu.org; Sun, 03 Jun 2007 17:03:39 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HuxEg-00089n-8X
	for axiom-mail@nongnu.org; Sun, 03 Jun 2007 17:03:38 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HuxEf-00087g-Dq
	for axiom-mail@nongnu.org; Sun, 03 Jun 2007 17:03:37 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HuxEf-00087J-7X
	for axiom-mail@nongnu.org; Sun, 03 Jun 2007 17:03:37 -0400
Received: from mo-p07-ob.rzone.de ([81.169.146.188])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1HuxEe-0006Yj-Ht
	for axiom-mail@nongnu.org; Sun, 03 Jun 2007 17:03:36 -0400
Received: from [192.168.138.17] (funklan.cybnes.com [194.187.177.88])
	by post.webmailer.de (mrclete mo12) (RZmta 7.1)
	with ESMTP id 906ef6j53GOKnt ; Sun, 3 Jun 2007 23:03:35 +0200 (MEST)
Message-ID: <46632CA4.3000105@hemmecke.de>
Date: Sun, 03 Jun 2007 23:03:32 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.0 (X11/20070326)
MIME-Version: 1.0
To: rrogers@plaidheron.com
Subject: Re: [Axiom-mail]  Defining piece-wise functions and drawing,
	integrating, ...
References: <01ce01c7a5a4$fba96230$6900a8c0@asus>	<466294E0.9050504@hemmecke.de>
	<4662FAA9.5080909@roadrunner.com>
In-Reply-To: <4662FAA9.5080909@roadrunner.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-RZG-AUTH: kNFH2zO1gYIaN0yGuAImCzqpyKmhtxH+j8dRrTCCWf+/WqJ9Gj0JyW1cHrc=
X-RZG-CLASS-ID: mo07
X-detected-kernel: Solaris 10 (beta)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sun, 03 Jun 2007 21:03:38 -0000

On 06/03/2007 07:30 PM, Raymond E. Rogers wrote:
> Ralf Hemmecke wrote:
>> Agreed, but what about telling Axiom the following:
>>
>> (1) -> g(x)==if x>0 then x else -x
>>                                 Type: Void
>>
>> (
> I am sorry for being a nuisance but I would like to point out:
> This function can be expressed as
> g(x)=  -x +2*DD^2
> Where DD is the second order of the Dirac Delta function;  and DD^2 =
> int(int(DD*1)) , a ramp starting at 0.  The point is that piecewise
> polynomials  can be handled as generalized functions.
> The integral int(g(x),a,b) would be [-(x^2/2)+DD^3]^b_a 
> 
>  I am retiring soon and perhaps will implement the useful parts of using
> the Dirac Delta function in Axiom. 
> 
> Ray Rogers

I don't know whether one can easily explain to a not so well trained 
user what a "generalised function" is and that instead of

g(x)==if x>0 then x else -x

he/she should rather write

g(x)=  -x +2*DD^2,

but I would love to see your contribution to Axiom. Hopefully you never 
retire from using and contributing to Axiom.

All the best

Ralf



From MAILER-DAEMON Sun Jun 03 18:52:51 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HuywN-0004nR-5a
	for mharc-axiom-mail@gnu.org; Sun, 03 Jun 2007 18:52:51 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HuywL-0004n1-Eh
	for axiom-mail@nongnu.org; Sun, 03 Jun 2007 18:52:49 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HuywJ-0004mo-81
	for axiom-mail@nongnu.org; Sun, 03 Jun 2007 18:52:48 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HuywJ-0004ml-34
	for axiom-mail@nongnu.org; Sun, 03 Jun 2007 18:52:47 -0400
Received: from mta13.mail.adelphia.net ([68.168.78.44] helo=mta13.adelphia.net)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <rayrogers@roadrunner.com>) id 1HuywI-0000FC-KL
	for axiom-mail@nongnu.org; Sun, 03 Jun 2007 18:52:46 -0400
Received: from rrogers-linux-2.local ([76.179.97.159]) by mta13.adelphia.net
	(InterMail vM.6.01.05.02 201-2131-123-102-20050715) with ESMTP
	id <20070603225245.FRXR16681.mta13.adelphia.net@rrogers-linux-2.local>; 
	Sun, 3 Jun 2007 18:52:45 -0400
Message-ID: <4663463B.6000303@roadrunner.com>
Date: Sun, 03 Jun 2007 18:52:43 -0400
From: "Raymond E. Rogers" <rayrogers@roadrunner.com>
Organization: A constant variable
User-Agent: Thunderbird 2.0.0.0 (X11/20070505)
MIME-Version: 1.0
To: Ralf Hemmecke <ralf@hemmecke.de>, 
	"axiom-mail@nongnu.org >> Axiom-mail" <axiom-mail@nongnu.org>
Subject: Re: [Axiom-mail]  Defining piece-wise functions and drawing,
	integrating, ...
References: <01ce01c7a5a4$fba96230$6900a8c0@asus>	<466294E0.9050504@hemmecke.de>
	<4662FAA9.5080909@roadrunner.com> <46632CA4.3000105@hemmecke.de>
In-Reply-To: <46632CA4.3000105@hemmecke.de>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-detected-kernel: Solaris 8 (2)
Cc: 
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: rrogers@plaidheron.com
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sun, 03 Jun 2007 22:52:49 -0000

Ralf Hemmecke wrote:
> On 06/03/2007 07:30 PM, Raymond E. Rogers wrote:
>> Ralf Hemmecke wrote:
>>> Agreed, but what about telling Axiom the following:
>>>
>>> (1) -> g(x)==if x>0 then x else -x
>>>                                 Type: Void
>>>
>>> (
>> I am sorry for being a nuisance but I would like to point out:
>> This function can be expressed as
>> g(x)=  -x +2*DD^2
>> Where DD is the second order of the Dirac Delta function;  and DD^2 =
>> int(int(DD*1)) , a ramp starting at 0.  The point is that piecewise
>> polynomials  can be handled as generalized functions.
>> The integral int(g(x),a,b) would be [-(x^2/2)+DD^3]^b_a
>>  I am retiring soon and perhaps will implement the useful parts of using
>> the Dirac Delta function in Axiom.
>> Ray Rogers
>
> I don't know whether one can easily explain to a not so well trained
> user what a "generalised function" is and that instead of
Roughly generalized functionals can be taken as the limit of the
sequence of functions that are constrained.  For instance a sequence of
Gaussian curves that shrink in width a have an area of one.  It turns
out the constraints, smaller and smaller footprints, define the limit
more than the particular functional sequence.  This is similar to
considering the real numbers being the limit of sequences of rational
numbers.  You could consider a particular real number as the limit of a
lot rational series; for instance subsequent approximations in different
base systems.  Generalized functions have properties that are  useful in
a lot of ways.  For instance a piecewise polynomial can be represented
like I showed.  In the case of Electrical Engineering the representation
can be directly Fourier transformed and written down by inspection.
>
> g(x)==if x>0 then x else -x
>
> he/she should rather write
>
> g(x)=  -x +2*DD^2,
Because it's a "true" function that you can integrate and differentiate
by standard rules; independent of the number of terms.
The only problem is in multiplication, D*D, and such.  But there is a
mathematical interpretation that apparently also allows this, but so far
I would say "don't try this at home".   I hope to understand this soon. 
Why use it?  Well in EE land it's hard to start and stop things
symbolically without step functions.  Differentiating and integrating
step functions drag in the rest of the standard generalized functions. 
As is typical there are two methods of definition.  Extrinsic and
intrinsic definitions.   That is to say direct construction or by
properties.  I like and I think symbolic algebra programs are more
comfortable with intrinsic definitions.  That is to lay down a set of
operational rules and the using them like a machine.   As I said, I and
not 100% clear on how to do this, but am sure it can be done.

Ray Rogers







From MAILER-DAEMON Mon Jun 04 04:48:35 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hv8Es-0006JD-Uc
	for mharc-axiom-mail@gnu.org; Mon, 04 Jun 2007 04:48:35 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hv8Eq-0006Ib-Cd
	for axiom-mail@nongnu.org; Mon, 04 Jun 2007 04:48:32 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hv8Eo-0006Hx-Ii
	for axiom-mail@nongnu.org; Mon, 04 Jun 2007 04:48:31 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hv8Eo-0006Ht-3U
	for axiom-mail@nongnu.org; Mon, 04 Jun 2007 04:48:30 -0400
Received: from mo-p07-ob.rzone.de ([81.169.146.190])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1Hv8Em-0004xw-Oz
	for axiom-mail@nongnu.org; Mon, 04 Jun 2007 04:48:29 -0400
Received: from [193.170.38.119]
	(woodpecker.risc.uni-linz.ac.at [193.170.38.119])
	by post.webmailer.de (fruni mo26) (RZmta 7.1)
	with ESMTP id E00088j547qcld ; Mon, 4 Jun 2007 10:48:24 +0200 (MEST)
Message-ID: <4663D1D8.7050102@hemmecke.de>
Date: Mon, 04 Jun 2007 10:48:24 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.0 (X11/20070326)
MIME-Version: 1.0
To: rrogers@plaidheron.com
Subject: Re: [Axiom-mail]  Defining piece-wise functions and drawing,
	integrating, ...
References: <01ce01c7a5a4$fba96230$6900a8c0@asus>	<466294E0.9050504@hemmecke.de>
	<4662FAA9.5080909@roadrunner.com> <46632CA4.3000105@hemmecke.de>
	<4663463B.6000303@roadrunner.com>
In-Reply-To: <4663463B.6000303@roadrunner.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-RZG-AUTH: kNFH2zO1gYIaN0yGuAImCzqpyKmhtxH+j8dRrTCCWfiOhoFueWBldT699TA=
X-RZG-CLASS-ID: mo07
X-detected-kernel: Solaris 10 (beta)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 04 Jun 2007 08:48:32 -0000

> Roughly generalized functionals can be taken as the limit of the
> sequence of functions that are constrained.  For instance a sequence of
> Gaussian curves that shrink in width a have an area of one.  It turns
> out the constraints, smaller and smaller footprints, define the limit
> more than the particular functional sequence.  This is similar to
> considering the real numbers being the limit of sequences of rational
> numbers.

Clear to me, but try to explain that to someone who has not studied 
mathematics and who first thinks in terms of piecewise functions.

> You could consider a particular real number as the limit of a
> lot rational series; for instance subsequent approximations in different
> base systems.

Well, of course, a real number is an eqivalence class of all rational 
sequences leading to the same "value".

 >  Generalized functions have properties that are  useful in
> a lot of ways.  For instance a piecewise polynomial can be represented
> like I showed.  In the case of Electrical Engineering the representation
> can be directly Fourier transformed and written down by inspection.
>> g(x)==if x>0 then x else -x
>>
>> he/she should rather write
>>
>> g(x)=  -x +2*DD^2,
> Because it's a "true" function that you can integrate and differentiate
> by standard rules; independent of the number of terms.

I have not really something against generalised functions. Maybe it is 
the same problem with the introduction of the imaginary i. One 
temporarily works in a much bigger space and comes back to the reals or 
ordinary functions.

> The only problem is in multiplication, D*D, and such.  But there is a
> mathematical interpretation that apparently also allows this, but so far
> I would say "don't try this at home".

See, this is what I meant. It might be a bit scary for some people.

 > I hope to understand this soon.
> Why use it?  Well in EE land it's hard to start and stop things
> symbolically without step functions.  Differentiating and integrating
> step functions drag in the rest of the standard generalized functions. 
> As is typical there are two methods of definition.  Extrinsic and
> intrinsic definitions.   That is to say direct construction or by
> properties.  I like and I think symbolic algebra programs are more
> comfortable with intrinsic definitions.  That is to lay down a set of
> operational rules and the using them like a machine.   As I said, I and
> not 100% clear on how to do this, but am sure it can be done.

Well, if there are rules how to operate with generalised functions, then 
there should be no problem at all of implementing them in Axiom. One 
really has to think about a new domain (of generalised functions) in 
Axiom and what features (signature of the domain) it should export.

Ralf



From MAILER-DAEMON Tue Jun 05 14:50:09 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hve6a-0005Xo-U2
	for mharc-axiom-mail@gnu.org; Tue, 05 Jun 2007 14:50:08 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hve6Z-0005Xj-4x
	for axiom-mail@nongnu.org; Tue, 05 Jun 2007 14:50:07 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hve6X-0005XW-Io
	for axiom-mail@nongnu.org; Tue, 05 Jun 2007 14:50:06 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hve6X-0005XT-Ci
	for axiom-mail@nongnu.org; Tue, 05 Jun 2007 14:50:05 -0400
Received: from smtp-vbr6.xs4all.nl ([194.109.24.26])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <soemraws@xs4all.nl>) id 1Hve6W-0003z8-MQ
	for axiom-mail@nongnu.org; Tue, 05 Jun 2007 14:50:05 -0400
Received: from blackstar (oemrawsingh.xs4all.nl [213.84.4.243])
	by smtp-vbr6.xs4all.nl (8.13.8/8.13.8) with SMTP id l55InxUo066380
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <axiom-mail@nongnu.org>; Tue, 5 Jun 2007 20:50:00 +0200 (CEST)
	(envelope-from soemraws@xs4all.nl)
Received: by blackstar (sSMTP sendmail emulation);
	Tue,  5 Jun 2007 20:49:57 +0200
From: "Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl>
Date: Tue, 5 Jun 2007 20:49:56 +0200
To: axiom-mail@nongnu.org
Subject: Re: [Axiom-mail]  Defining piece-wise functions and drawing,
	integrating, ...
Message-ID: <20070605184956.GA18938@blackstar.oemrawsingh.xs4all.nl>
Mail-Followup-To: axiom-mail@nongnu.org
References: <20070603022127.GA28590@blackstar.oemrawsingh.xs4all.nl>
	<01ce01c7a5a4$fba96230$6900a8c0@asus>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <01ce01c7a5a4$fba96230$6900a8c0@asus>
User-Agent: Mutt/1.5.13 (2006-08-11)
X-Virus-Scanned: by XS4ALL Virus Scanner
X-detected-kernel: FreeBSD 4.6-4.9
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 05 Jun 2007 18:50:07 -0000

Hi Bill,

Thanks for your elaborate and clarifying answers. I agree with you that I
will probably have to help build what I want. I don't have much time to
spend on it, but I am looking at it currently and will hopefully be
contributing something in time.

Regards,

Sumant

On Sun, Jun 03, 2007 at 02:03:50AM -0400, Bill Page wrote:
> On June 2, 2007 10:21 PM Sumant S.R. Oemrawsingh wrote:
> > 
> > Thanks for your answer. It is now more clear to me what 
> > happens. As I am completely new to Axiom, I probably don't
> > understand the full philosophy behind it yet, so I wish to
> > ask a bit more on this, if you don't mind.
> 
> That is the purpose of this email list. Everyone is free to
> ask and to answer questions here but if we discuss philosophy
> I am afraid not everyone will agree. I believe that Axiom was
> designed with a certain overall philosophy but that it was
> not necessarily always applied consistently or in the same
> manner by different people. For sure not everyone is going
> to agree with my personal opinions about exact what this
> "Axiom philosophy" is. I think that to properly discuss some
> issues of philosophy requires a deep and thorough understanding
> of the subject but not everyone has the patience or skill to
> work at this level. Many people have very pragmatic reasons
> for wanting to use a computer for doing mathematics - they have
> some job they want to do and do not care too much about the
> subject from an abstract "computer science" point of view. But
> in my opinion the designers of Axiom did try very hard to take
> the more general view while the designers of most other
> superficially similar systems (e.g. reduce, maxima, maple,
> mathematica, etc.) did not.
> 
> > 
> > > You said you expected the 'f(x)' would represent some kind
> > > of expression defined in a piecewise manner, but Axiom does
> > > not currently have any expressions of this kind.
> > 
> > This is very strange, since in the Axiom book, there is a 
> > whole section on piece-wise functions. Why have them, if
> > they are not supported, so to say?
> 
> You have a very good point. Yes Axiom does have piece-wise
> defined *functions* but it does not have piece-wise *expressions*.
> It is important to make the distinction between function and
> expression. In fact going deeper one can see that Axiom uses
> the concept of "expression" in two different ways. In my
> opinion understanding this is also an important part of the
> Axiom philosophy.
> 
> For example in Axiom you can write the expression:
> 
>   (1) -> if x>0 then 1 else 0
> 
>     (1)  1
>                               Type: PositiveInteger
> 
> The result of evaluating this expression depends on the value
> assigned to x. This is a "piece-wise" expression in the sense
> we have been discussing *BUT* this is a part of the Axiom
> programming language - it is not part of any mathematical
> object currently implemented in the Axiom library. The Axiom
> library includes things like polynomials and even the domain
> 'Expression' containing expressions like 'x+1' or 'sin(1)'
> but there is currently no domain in which we can find an
> expression like 'if x>0 then 1 else 0'.
> 
> > If it can be defined and yields correct answers when called 
> > with integers or even expressions yielding specific values
> > (say, sqrt(5) or cos(1/2)), why can't it be integrated over
> > a domain where the variable takes on specific values for
> > which all the definitions are required to be evaluated?
> > 
> 
> Do you understand the difference between writing?
> 
>   draw(sin(x),x=-5..5)
> 
> and
> 
>   draw(sin, -5..5)
> 
> Martin showed how you could use draw in this way to display a
> piecewise defined function. Unfortunately Axiom's symbol
> integration operator does not currently allow a function as
> argument but Martin did gave an example of using 'Romberg' to
> do numerical integration of functions.
> 
> In principle it would be possible to extend Axiom's integration
> and differentiation operators to work symbolically on functions
> but this is a non-trivial problem. I believe one Axiom developer
> (Gabriel Dos Reis one of his students) has done some work on
> symbol differentiation of functions.
> 
> It is also possible in principle to deal with piece-wise
> expressions as mathematical objects in Axiom. Tim Daly has
> discussed the development of a general "proviso" feature in
> Axiom that would make this possible. But even fairly extensions
> of the existing 'Expression' domain could probably handle
> simple cases of piece-wise expressions of the sort you have
> discussed so far.
> 
> > Thanks to your explanation, I understand why x < 0 (Variable, 
> > Polynomial Integer, Symbol,...) *does not* return true, but
> > I do not understand why it *should* not return true (from a
> > design point of view).
> 
> Perhaps you are objecting to the decision of the Axiom library
> developers to define '<' in terms of lexical ordering for
> polynomials. Although this is natural in a certain context,
> I agree that that was probably a poor choice on their part.
> 
> > But from a mathematical point of view (imho), the expression
> > x < 0 should not be false; it should be true by default,
> > unless it has been specified that x is an element of some
> > set, since if it is *not* defined, it can have *any* value,
> > also negative. Therefore, when one expects to test the
> > domain of x, such as in an expression like this, it should
> > be true by default.
> 
> I strongly disagree with this. Most people would read 'x<0'
> as a logical predicate. It is true or false depending on
> the value and/or quantification associated with x. You are
> right to be concerned about the domain of x but unfortunately
> Axiom currently has no way to evaluate logical predicates of
> that kind.
> 
> > 
> > So, I wish to tell axiom that x is an element of, say, R.
> > I understand that I should declare the type, in my example
> > Float -> Float, like so:
> > 
> > (1) -> f: (Float) -> Float
> >                                                               
> >      Type: Void
> > (2) -> f(x|x<=0)==-x**2   
> >                                                               
> >      Type: Void
> > (3) -> f(x|x>0)==x**2     
> >                                                               
> >      Type: Void
> > (4) -> f(5)
> >    Compiling function f with type Float -> Float 
> > 
> >    (4)  - 25.0
> > 
> > (5) -> f(5**(1/3))
> 
> >    (5)  2.9240177382 128660655
> >                                                               
> >     Type: Float
> >
> 
> Right.
>  
> > How do I get a symbolic answer now? I don't care what the 
> > answer up to n digits is, I want to know the actual, exact
> > answer.
> 
> But you specified the domain 'Float' that is a domain where
> numbers are represented by an approximation. If you want
> symbolic answers you need to specify a different domain,
> e.g. Expression Integer.
> 
> > This is even worse:
> > 
> > (6) -> draw(f(x),x=-1..1)
> >    Conversion failed in the compiled user function f .
> >  
> >    Cannot convert from type Symbol to Float for value
> >    x
> > 
> 
> Write it this way:
> 
>   draw(f,-1..1)
> 
> When you write 'f(x)' you are asking for a piece-wise
> expression but that is not currently possible in Axiom. But
> if you operate directly on the piece-wise function then you
> can get what you want.
> 
> > (6) -> integrate(f(x),x=-1..1)
> >    Conversion failed in the compiled user function f .
> >  
> >    Cannot convert from type Symbol to Float for value
> >    x
> >
> 
> Unfortunately you can not currently write:
> 
>   integrate(f, -1..1)
> 
> except in the case where you would like to do numerical
> integration (e.g. Romberg).
>  
> > Granted, I really don't care that much about drawing the 
> > function. It is more of a visual aid to see that I defined
> > my function correctly. For the example, this is not really
> > necessary, but some of the functions I wish to perform
> > calculations with, have some wild definitions, with many
> > pieces.
> 
> For drawing that is ok.
> 
> > However, integration is very important, since that is what
> > I really want to do in the end. Even if it manages to give
> > me an answer of the integral, I still don't want to know
> > the answer estimated to n digits, I would like the exact
> > answer.
> >
> 
> I think that exact integration of piece-wise functions in
> general is a rather difficult problem.
>  
> > So the real question I would like to ask is, how can I
> > tell axiom that, during function definition, my variable
> > belongs to R (or C), while all operations still remain
> > symbolic?
> 
> Right now there is no way to do this in Axiom but that is
> (more or less) what Tim Daly means by a 'proviso'. This is
> still a research topic in Axiom.
> 
> > How can I get it to first evaluate the value of x, figure
> > out which function to use, and then return the value
> > symbolically again?
> > 
> 
> I don't know.
> 
> > I have tried by using "numeric(x) > 0" in the conditions,
> > but then integration won't work since numeric won't work on
> > symbols etc. Thanks to your explanation, I already expected
> > that before I even tried it. On a side note, f(%pi) will
> > work correctly then.
> > 
> > Which leads me to the following: why is %e fundamentally 
> > different from %pi? Or, since Martin sort of answered that
> > question already, I should ask: why *should* %e be
> > fundamentally different from %pi? 
> 
> I don't think it should be. This is just an accident of a
> series of separate design decisions. As Martin said, this
> should probably be corrected by a more or less complete
> redesign of how Axiom handles constants. This would amount
> to another Axiom research project.
> 
> > 
> > But I digress. The most important question is, how to define
> > a function such that it first evaluates the value of x, then
> > chooses which case to use and then perform the action?
> > 
> > In integrate(), I would expect it would look at the limits,
> > perform an indefinite integral of the relevant cases, and
> > then fill in the limits for each case correctly.
> 
> Perhaps you could describe this algorithm in more detail.
> Can you write some Axiom scripts that perform this sort
> of computation?
> 
> > For draw, I would expect something similar.
> > 
> > I've been doing some other stuff with axiom (no problems 
> > there!), and think it is really amazing. That is also the
> > reason that I find this particular point so frustrating. So
> > if you or any one could help, I would be very much obliged.
> > 
> 
> I hope this reply is of some help even though for the most
> part it is saying that what you want from Axiom you will
> probably have to help build for yourself. :-)
> 
> Regards,
> Bill Page
> 
> 

-- 
Sumant S. R. Oemrawsingh
soemraws@xs4all.nl



From MAILER-DAEMON Sat Jun 09 16:54:36 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hx7xE-0004Ls-R8
	for mharc-axiom-mail@gnu.org; Sat, 09 Jun 2007 16:54:36 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hx7xD-0004L7-3B
	for axiom-mail@nongnu.org; Sat, 09 Jun 2007 16:54:35 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hx7xB-0004Jy-HR
	for axiom-mail@nongnu.org; Sat, 09 Jun 2007 16:54:34 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hx7xB-0004Ju-8p
	for axiom-mail@nongnu.org; Sat, 09 Jun 2007 16:54:33 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1Hx7xA-00087T-Mr
	for axiom-mail@nongnu.org; Sat, 09 Jun 2007 16:54:32 -0400
Received: from joan.univie.ac.at ([131.130.3.110] helo=joan.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>) id 1Hx7x9-0005xI-7e
	for axiom-mail@nongnu.org; Sat, 09 Jun 2007 22:54:31 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by joan.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>) id 1Hx7x9-00043I-5Q
	for axiom-mail@nongnu.org; Sat, 09 Jun 2007 22:54:31 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: axiom-mail <axiom-mail@nongnu.org>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 09 Jun 2007 22:54:30 +0200
Message-ID: <9q1wgk3l2x.fsf@aquin.mat.univie.ac.at>
Lines: 23
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Subject: [Axiom-mail] [ANN] new version of axiom.el
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 09 Jun 2007 20:54:35 -0000

A new version of axiom.el (09-06-2007) is now available on 

http://wiki.axiom-developer.org/SandBoxAxiomEmacsMode

* fixed bug with scroll-input while axiom is sending output!!! :-)

* discovered that process-mark can be used to determine whether axiom has
  written a prompt.  This doesn't work with lisp creating prompts, of course.

* axiom-end-of-input is now a mark. For some reason, making copy-marker's second
  argument equal to "t" messes up the output.

- I do not have the time to incorporate Francois' routines to send axiom input
  to the buffer.

- still no emacs port

- the initialisation code is still terribly messy.  After using axiom mode,
  shell mode is nearly unusable.



Martin




From MAILER-DAEMON Sun Jun 10 03:24:40 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HxHmy-0006ol-A4
	for mharc-axiom-mail@gnu.org; Sun, 10 Jun 2007 03:24:40 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HxHmw-0006nW-FX
	for axiom-mail@nongnu.org; Sun, 10 Jun 2007 03:24:38 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HxHmv-0006my-K8
	for axiom-mail@nongnu.org; Sun, 10 Jun 2007 03:24:37 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43)
	id 1HxHms-0006lj-Lo; Sun, 10 Jun 2007 03:24:34 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HxHms-0003qC-JW; Sun, 10 Jun 2007 03:24:34 -0400
Received: from joan.univie.ac.at ([131.130.3.110] helo=joan.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HxHmq-0000nK-TN; Sun, 10 Jun 2007 09:24:32 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by joan.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HxHmq-00069A-Oi; Sun, 10 Jun 2007 09:24:32 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: Martin Rubey <martin.rubey@univie.ac.at>
Subject: Re: [Axiom-mail] [ANN] new version of axiom.el
References: <9q1wgk3l2x.fsf@aquin.mat.univie.ac.at>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 10 Jun 2007 09:24:32 +0200
In-Reply-To: <9q1wgk3l2x.fsf@aquin.mat.univie.ac.at>
Message-ID: <9qfy50xoen.fsf@aquin.mat.univie.ac.at>
Lines: 22
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-devel <axiom-developer@nongnu.org>,
	axiom-mail <axiom-mail@nongnu.org>
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sun, 10 Jun 2007 07:24:39 -0000

A new version of axiom.el (10-06-2007) is now available on 

http://wiki.axiom-developer.org/SandBoxAxiomEmacsMode

Thanks to Tom Tromey, shell mode works now even after having used axiom mode.

I also added some documentation.

Missing:

* xemacs port

* allow debugger to be entered, I.e., track when the prompt may change.  How
  does shell mode do this?

* implement repositioning of the process-mark consistently and safely.

* clean up initialisation routines.  At times a hit an error in statements like
  (process-mark axiom-process), because for some reasons axiom-process is nil.
  It shouldn't be nil of course.

Martin




From MAILER-DAEMON Mon Jun 11 09:28:15 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HxjwN-0004C5-Bl
	for mharc-axiom-mail@gnu.org; Mon, 11 Jun 2007 09:28:15 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HxjwL-0004BX-9Y
	for axiom-mail@nongnu.org; Mon, 11 Jun 2007 09:28:13 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HxjwJ-00049s-NI
	for axiom-mail@nongnu.org; Mon, 11 Jun 2007 09:28:12 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HxjwJ-00049d-HV
	for axiom-mail@nongnu.org; Mon, 11 Jun 2007 09:28:11 -0400
Received: from ug-out-1314.google.com ([66.249.92.171])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <amca01@gmail.com>) id 1HxjwH-0002K5-Os
	for axiom-mail@nongnu.org; Mon, 11 Jun 2007 09:28:10 -0400
Received: by ug-out-1314.google.com with SMTP id a2so1365495ugf
	for <axiom-mail@nongnu.org>; Mon, 11 Jun 2007 06:27:57 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed; d=gmail.com; s=beta;
	h=domainkey-signature:received:received:message-id:date:from:to:subject:mime-version:content-type;
	b=EtjooS/DMyBB6i4H36t7ON8PmQ5BbMBQSeJvie+FVD5vEZ0ThMntZatkDRyjoZmdKhM+CWgOhP7N+blbMZ3TI3I+ZCmcZT97xI8MYPa5sxx293MrE12qVrgLOrWww0OmdtqiGtYjcbsq3BYkIb0u5Q7ag+M3t2/+aTuRADV1iMs=
DomainKey-Signature: a=rsa-sha1; c=nofws; d=gmail.com; s=beta;
	h=received:message-id:date:from:to:subject:mime-version:content-type;
	b=Kmz/tDe69Zh/HRMQ5qu56O5xiMFd12cvQYAxZSiIUDuv+GTeWMKVBfVIc9Eso3rDLERd4h+OGCrcjlZxAgOAWTTVq2L09o8V2ddfjcRz+7eic/EjX5Pi5UGqOz5maSireBs8YyZh6+Eet6mPC0jdbOfNEUEudq84wh2Vv3VuFas=
Received: by 10.67.96.14 with SMTP id y14mr4499460ugl.1181568477081;
	Mon, 11 Jun 2007 06:27:57 -0700 (PDT)
Received: by 10.67.15.14 with HTTP; Mon, 11 Jun 2007 06:27:57 -0700 (PDT)
Message-ID: <1d67a53c0706110627nadd7c5ds3191585421d9c0ec@mail.gmail.com>
Date: Mon, 11 Jun 2007 23:27:57 +1000
From: "Alasdair McAndrew" <amca01@gmail.com>
To: axiom-mail@nongnu.org
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_4226_27795138.1181568477053"
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Subject: [Axiom-mail] Two file handling questions
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 11 Jun 2007 13:28:13 -0000

------=_Part_4226_27795138.1181568477053
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

1)  I can never get the )cd command to work.  If I type )cd on its own, I am
told that

"The current AXIOM default directory is /home/amca/".

 If I then type )cd ProgramFiles/Axiom, I get told that

">> System error:
   #p"/home/amca/" is not of type SEQUENCE."

What's going on here?  (I can set my directory in my .axiom.input file, but
sometimes I'd like to change my directory from within Axiom).

2)  I am looking at using Axiom next semester for an introductory
cryptography subject (classical cryptosystems, number theory and RSA, El
Gamal etc, digital signature algorithms, hash functions, DES and AES).  This
will entail using Axiom under windows.  Ideally I'd like to be able to grab
files from two directories: a network directory writable only by me, but
readable by everybody, and the students' own directories.  Can this be done?

Thanks,
Alasdair

------=_Part_4226_27795138.1181568477053
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

1)&nbsp; I can never get the )cd command to work.&nbsp; If I type )cd on its own, I am told that <br><br>&quot;The current AXIOM default directory is /home/amca/&quot;. <br><br>&nbsp;If I then type )cd ProgramFiles/Axiom, I get told that 
<br><br>&quot;&gt;&gt; System error:<br>&nbsp;&nbsp; #p&quot;/home/amca/&quot; is not of type SEQUENCE.&quot;<br><br>What&#39;s going on here?&nbsp; (I can set my directory in my .axiom.input file, but sometimes I&#39;d like to change my directory from within Axiom).
<br><br>2)&nbsp; I am looking at using Axiom next semester for an introductory cryptography subject (classical cryptosystems, number theory and RSA, El Gamal etc, digital signature algorithms, hash functions, DES and AES).&nbsp; This will entail using Axiom under windows.&nbsp; Ideally I&#39;d like to be able to grab files from two directories: a network directory writable only by me, but readable by everybody, and the students&#39; own directories.&nbsp; Can this be done?
<br><br>Thanks,<br>Alasdair<br>

------=_Part_4226_27795138.1181568477053--



From MAILER-DAEMON Mon Jun 11 11:05:02 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HxlS2-0001Fh-Ad
	for mharc-axiom-mail@gnu.org; Mon, 11 Jun 2007 11:05:02 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HxlS0-0001Fc-G4
	for axiom-mail@nongnu.org; Mon, 11 Jun 2007 11:05:00 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HxlRz-0001FQ-7r
	for axiom-mail@nongnu.org; Mon, 11 Jun 2007 11:05:00 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HxlRz-0001FA-2g
	for axiom-mail@nongnu.org; Mon, 11 Jun 2007 11:04:59 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1HxlRy-0007um-FW
	for axiom-mail@nongnu.org; Mon, 11 Jun 2007 11:04:58 -0400
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HxlRw-0004sX-RX; Mon, 11 Jun 2007 17:04:56 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1HxlRw-0008Ut-P6; Mon, 11 Jun 2007 17:04:56 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: "Alasdair McAndrew" <amca01@gmail.com>
Subject: Re: [Axiom-mail] Two file handling questions
References: <1d67a53c0706110627nadd7c5ds3191585421d9c0ec@mail.gmail.com>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 11 Jun 2007 17:04:56 +0200
In-Reply-To: <1d67a53c0706110627nadd7c5ds3191585421d9c0ec@mail.gmail.com>
Message-ID: <9qvedu4jmv.fsf@aquin.mat.univie.ac.at>
Lines: 19
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 11 Jun 2007 15:05:01 -0000

"Alasdair McAndrew" <amca01@gmail.com> writes:

> 1)  I can never get the )cd command to work.  If I type )cd on its own, I am
> told that
> 
> "The current AXIOM default directory is /home/amca/".
> 
>  If I then type )cd ProgramFiles/Axiom, I get told that
> 
> ">> System error:
>    #p"/home/amca/" is not of type SEQUENCE."
> 
> What's going on here?  (I can set my directory in my .axiom.input file, but
> sometimes I'd like to change my directory from within Axiom).

A workaround might be to specify the full path.  Another is to get a recent
wh-sandbox.  Which flavour of axiom do you use?

Martin




From MAILER-DAEMON Mon Jun 11 20:40:38 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HxuR4-00084V-H5
	for mharc-axiom-mail@gnu.org; Mon, 11 Jun 2007 20:40:38 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HxuR2-00083j-Vu
	for axiom-mail@nongnu.org; Mon, 11 Jun 2007 20:40:37 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HxuR2-000834-9Z
	for axiom-mail@nongnu.org; Mon, 11 Jun 2007 20:40:36 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HxuR2-00082y-4m
	for axiom-mail@nongnu.org; Mon, 11 Jun 2007 20:40:36 -0400
Received: from ug-out-1314.google.com ([66.249.92.175])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <amca01@gmail.com>) id 1HxuR1-0006Z7-BH
	for axiom-mail@nongnu.org; Mon, 11 Jun 2007 20:40:35 -0400
Received: by ug-out-1314.google.com with SMTP id a2so37213ugf
	for <axiom-mail@nongnu.org>; Mon, 11 Jun 2007 17:40:34 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed; d=gmail.com; s=beta;
	h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=JUkIaYHDrzeYD5HsxvIeq+Qz6IaDwieL9wxCxOYuHiTKT2BSnKqgoB/EL2rtUvJlaeiy0C//Ap4JZ2IcxGFGoaIwhkShMlFcCXmgZO8c45969t7/JJdMxbc15zep6oXyjSRvlaiycW3qDme4yK7RzHsMTYrHPOjO2F8rtKoYq1k=
DomainKey-Signature: a=rsa-sha1; c=nofws; d=gmail.com; s=beta;
	h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=oEWcdW/padfbh3AfnFOH+3gbIyR5LHl1B4Z+4+hyDUt1xltwt+uaTiqq2wUQvQEV4w+yQS0JWF6+CE40S499/BVOUWdGss+SojNzPCVveNpLb5GxHM2KNv3jKgevIXLg0yfibw1HsvPTLqGy31nMuCu11lvl5lN1IlvXGEsFJBI=
Received: by 10.67.32.6 with SMTP id k6mr81741ugj.1181608834309;
	Mon, 11 Jun 2007 17:40:34 -0700 (PDT)
Received: by 10.67.15.14 with HTTP; Mon, 11 Jun 2007 17:40:34 -0700 (PDT)
Message-ID: <1d67a53c0706111740s61a12f7fj5896a5cd22845aec@mail.gmail.com>
Date: Tue, 12 Jun 2007 10:40:34 +1000
From: "Alasdair McAndrew" <amca01@gmail.com>
To: "Martin Rubey" <martin.rubey@univie.ac.at>, axiom-mail@nongnu.org
Subject: Re: [Axiom-mail] Two file handling questions
In-Reply-To: <9qvedu4jmv.fsf@aquin.mat.univie.ac.at>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_12069_12607482.1181608834286"
References: <1d67a53c0706110627nadd7c5ds3191585421d9c0ec@mail.gmail.com>
	<9qvedu4jmv.fsf@aquin.mat.univie.ac.at>
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Cc: 
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 12 Jun 2007 00:40:37 -0000

------=_Part_12069_12607482.1181608834286
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Actually I've just discovered that it works fine in wh-sandbox (compiled
from source), but not in the downloadable linux binary.

-Alasdair

On 11 Jun 2007 17:04:56 +0200, Martin Rubey <martin.rubey@univie.ac.at>
wrote:
>
> "Alasdair McAndrew" <amca01@gmail.com> writes:
>
> > 1)  I can never get the )cd command to work.  If I type )cd on its own,
> I am
> > told that
> >
> > "The current AXIOM default directory is /home/amca/".
> >
> >  If I then type )cd ProgramFiles/Axiom, I get told that
> >
> > ">> System error:
> >    #p"/home/amca/" is not of type SEQUENCE."
> >
> > What's going on here?  (I can set my directory in my .axiom.input file,
> but
> > sometimes I'd like to change my directory from within Axiom).
>
> A workaround might be to specify the full path.  Another is to get a
> recent
> wh-sandbox.  Which flavour of axiom do you use?
>
> Martin
>
>

------=_Part_12069_12607482.1181608834286
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Actually I&#39;ve just discovered that it works fine in wh-sandbox (compiled from source), but not in the downloadable linux binary.<br><br>-Alasdair<br><br><div><span class="gmail_quote">On 11 Jun 2007 17:04:56 +0200, <b class="gmail_sendername">
Martin Rubey</b> &lt;<a href="mailto:martin.rubey@univie.ac.at">martin.rubey@univie.ac.at</a>&gt; wrote:</span><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
&quot;Alasdair McAndrew&quot; &lt;<a href="mailto:amca01@gmail.com">amca01@gmail.com</a>&gt; writes:<br><br>&gt; 1)&nbsp;&nbsp;I can never get the )cd command to work.&nbsp;&nbsp;If I type )cd on its own, I am<br>&gt; told that<br>&gt;<br>&gt; &quot;The current AXIOM default directory is /home/amca/&quot;.
<br>&gt;<br>&gt;&nbsp;&nbsp;If I then type )cd ProgramFiles/Axiom, I get told that<br>&gt;<br>&gt; &quot;&gt;&gt; System error:<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp;#p&quot;/home/amca/&quot; is not of type SEQUENCE.&quot;<br>&gt;<br>&gt; What&#39;s going on here?&nbsp;&nbsp;(I can set my directory in my .axiom.input file, but
<br>&gt; sometimes I&#39;d like to change my directory from within Axiom).<br><br>A workaround might be to specify the full path.&nbsp;&nbsp;Another is to get a recent<br>wh-sandbox.&nbsp;&nbsp;Which flavour of axiom do you use?<br><br>Martin
<br><br></blockquote></div><br>

------=_Part_12069_12607482.1181608834286--



From MAILER-DAEMON Wed Jun 13 21:34:05 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HyeDt-0005BJ-MG
	for mharc-axiom-mail@gnu.org; Wed, 13 Jun 2007 21:34:05 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HyeDr-0005BE-MV
	for axiom-mail@nongnu.org; Wed, 13 Jun 2007 21:34:03 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HyeDp-0005B2-8B
	for axiom-mail@nongnu.org; Wed, 13 Jun 2007 21:34:02 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HyeDp-0005Az-2s
	for axiom-mail@nongnu.org; Wed, 13 Jun 2007 21:34:01 -0400
Received: from ug-out-1314.google.com ([66.249.92.172])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <amca01@gmail.com>) id 1HyeDo-0007Hi-N8
	for axiom-mail@nongnu.org; Wed, 13 Jun 2007 21:34:00 -0400
Received: by ug-out-1314.google.com with SMTP id a2so518213ugf
	for <axiom-mail@nongnu.org>; Wed, 13 Jun 2007 18:33:59 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed; d=gmail.com; s=beta;
	h=domainkey-signature:received:received:message-id:date:from:to:subject:mime-version:content-type;
	b=T0COMQz1TEa01SNEbMfybu6+uw/MVjxPcBnOiXojSW1VSsbGta24J6mQDMc+APKnBiW2rOt1w8fXf9E3skZee17QK3V8EVZv0JzLbHVJs5IUexIxwOhW1qJ6UfYcLYli6O8vC1RayNPuDSmLqGQxkYffTt2QIYcv8kQiZrLd+oQ=
DomainKey-Signature: a=rsa-sha1; c=nofws; d=gmail.com; s=beta;
	h=received:message-id:date:from:to:subject:mime-version:content-type;
	b=JZJTs4OZep0AyDl6pAhfsonQXFSHtTc/kPKK7hE6hi7U6MYDlh/jkNzsjLeTJzYPTNGck1SkE5+H8IDc2hMXwkS8Cpxh2nhvv9QRmVKqXkTmUKfF846aj/x289Dc+n+DHsyIb1+YRfHylR8979tfPTYWyeXlgjkd5ksaLT378zg=
Received: by 10.67.119.9 with SMTP id w9mr1686646ugm.1181784839767;
	Wed, 13 Jun 2007 18:33:59 -0700 (PDT)
Received: by 10.67.15.14 with HTTP; Wed, 13 Jun 2007 18:33:59 -0700 (PDT)
Message-ID: <1d67a53c0706131833x18b27cedl217f453172e76f04@mail.gmail.com>
Date: Thu, 14 Jun 2007 11:33:59 +1000
From: "Alasdair McAndrew" <amca01@gmail.com>
To: axiom-mail@nongnu.org
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_34719_18076660.1181784839743"
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Subject: [Axiom-mail] A slow summation
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 14 Jun 2007 01:34:04 -0000

------=_Part_34719_18076660.1181784839743
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Wondering about nice little numeric exercises to help introduce Axiom to a
small group of students, I attempted to sum the first 20000 reciprocals:

reduce(+,[1.0/i for i in 1...20000])

This works, but is (I think) unreasonably slow; it takes over 21 seconds on
my computer.  The equivalent command in Maxima takes less than 1 second.  Is
there any way of encouraging Axiom to be faster here?

Thanks,
Alasdair

------=_Part_34719_18076660.1181784839743
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Wondering about nice little numeric exercises to help introduce Axiom to a small group of students, I attempted to sum the first 20000 reciprocals:<br><br>reduce(+,[1.0/i for i in 1...20000])<br><br>This works, but is (I think) unreasonably slow; it takes over 21 seconds on my computer.&nbsp; The equivalent command in Maxima takes less than 1 second.&nbsp; Is there any way of encouraging Axiom to be faster here?
<br><br>Thanks,<br>Alasdair<br>

------=_Part_34719_18076660.1181784839743--



From MAILER-DAEMON Wed Jun 13 22:11:26 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hyeo2-0000ql-G4
	for mharc-axiom-mail@gnu.org; Wed, 13 Jun 2007 22:11:26 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hyeo0-0000ps-Dx
	for axiom-mail@nongnu.org; Wed, 13 Jun 2007 22:11:24 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hyeny-0000pg-0G
	for axiom-mail@nongnu.org; Wed, 13 Jun 2007 22:11:23 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hyenx-0000pd-S0
	for axiom-mail@nongnu.org; Wed, 13 Jun 2007 22:11:21 -0400
Received: from py-out-1112.google.com ([64.233.166.181])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1Hyenx-0002OL-GL
	for axiom-mail@nongnu.org; Wed, 13 Jun 2007 22:11:21 -0400
Received: by py-out-1112.google.com with SMTP id y77so767263pyg
	for <axiom-mail@nongnu.org>; Wed, 13 Jun 2007 19:11:20 -0700 (PDT)
Received: by 10.65.119.14 with SMTP id w14mr2199349qbm.1181787080412;
	Wed, 13 Jun 2007 19:11:20 -0700 (PDT)
Received: by 10.64.251.15 with HTTP; Wed, 13 Jun 2007 19:11:20 -0700 (PDT)
Message-ID: <fbcd16d40706131911t7e211b04w3dd1767edc24844e@mail.gmail.com>
Date: Wed, 13 Jun 2007 22:11:20 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: "Alasdair McAndrew" <amca01@gmail.com>
Subject: Re: [Axiom-mail] A slow summation
In-Reply-To: <1d67a53c0706131833x18b27cedl217f453172e76f04@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <1d67a53c0706131833x18b27cedl217f453172e76f04@mail.gmail.com>
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 14 Jun 2007 02:11:25 -0000

On 6/13/07, Alasdair McAndrew wrote:
> Wondering about nice little numeric exercises to help introduce
> Axiom to a small group of students, I attempted to sum the first
> 20000 reciprocals:
>
> reduce(+,[1.0/i for i in 1..20000])
>
> This works, but is (I think) unreasonably slow; it takes over 21
> seconds on my computer.  The equivalent command in Maxima
> takes less than 1 second. Is there any way of encouraging Axiom
> to be faster here?
>

It turns out that Axiom's list data type is very slow and almost
all the time is spent building the list. You can avoid this by
preallocating an arrary of sufficient size. E.g.

(1) -> )set message time on

(1) -> rlist:=new(20000,0.0)$PrimitiveArray(Float);

                                  Type: PrimitiveArray Float
                                                       Time: 0 sec

(2) -> for i in 1..20000 repeat rlist(i-1):=1.0/i

                                                        Type: Void
               Time: 1.27 (EV) + 0.42 (GC) = 1.68 sec

(3) -> reduce(+,rlist)

   (3)  10.4807282172 29327571

                                                        Type: Float
                                  Time: 0.10 (EV) = 0.10 sec

(Times shown are from a 500 MHz P3 running Windows XP
and axiom-0.1.4.)

Regards,
Bill Page.



From MAILER-DAEMON Wed Jun 13 22:33:22 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hyf9G-0007PO-Ds
	for mharc-axiom-mail@gnu.org; Wed, 13 Jun 2007 22:33:22 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hyf9E-0007PI-PY
	for axiom-mail@nongnu.org; Wed, 13 Jun 2007 22:33:20 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hyf9C-0007P5-P2
	for axiom-mail@nongnu.org; Wed, 13 Jun 2007 22:33:19 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hyf9C-0007P2-Ku
	for axiom-mail@nongnu.org; Wed, 13 Jun 2007 22:33:18 -0400
Received: from py-out-1112.google.com ([64.233.166.182])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1Hyf9C-0004HT-Bz
	for axiom-mail@nongnu.org; Wed, 13 Jun 2007 22:33:18 -0400
Received: by py-out-1112.google.com with SMTP id y77so774759pyg
	for <axiom-mail@nongnu.org>; Wed, 13 Jun 2007 19:33:18 -0700 (PDT)
Received: by 10.65.100.14 with SMTP id c14mr2293595qbm.1181788397839;
	Wed, 13 Jun 2007 19:33:17 -0700 (PDT)
Received: by 10.64.251.15 with HTTP; Wed, 13 Jun 2007 19:33:17 -0700 (PDT)
Message-ID: <fbcd16d40706131933g1cc2b405sd1185e21b8363c7c@mail.gmail.com>
Date: Wed, 13 Jun 2007 22:33:17 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: "Alasdair McAndrew" <amca01@gmail.com>
Subject: Re: [Axiom-mail] A slow summation
In-Reply-To: <fbcd16d40706131911t7e211b04w3dd1767edc24844e@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <1d67a53c0706131833x18b27cedl217f453172e76f04@mail.gmail.com>
	<fbcd16d40706131911t7e211b04w3dd1767edc24844e@mail.gmail.com>
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 14 Jun 2007 02:33:21 -0000

On 6/13/07, Bill Page <bill.page@newsynthesis.org> wrote:
>
> It turns out that Axiom's list data type is very slow and almost
> all the time is spent building the list. You can avoid this by
> preallocating an arrary of sufficient size. E.g.
>
>
> (2) -> for i in 1..20000 repeat rlist(i-1):=1.0/i
>
>                                                         Type: Void
>                Time: 1.27 (EV) + 0.42 (GC) = 1.68 sec
>
> (3) -> reduce(+,rlist)
>
>    (3)  10.4807282172 29327571
>
>                                                         Type: Float
>                                   Time: 0.10 (EV) = 0.10 sec
>
> (Times shown are from a 500 MHz P3 running Windows XP
> and axiom-0.1.4.)
>

Here is another probably less obvious solution:

(1) -> reduce(+,map(x+->1.0/x,expand(1..20000)))

   (1)  10.4807282172 29327571
                                                            Type: Float
   Time: 0.73 (EV) + 0.02 (OT) + 0.12 (GC) = 0.87 sec

The reason that this is very fast is that 'expand' creates the
list "in situ" and the loop is internal to the 'map' operator.

See the discussion about 'expand' in

http://wiki.axiom-developer.org/SandBoxFloatSegment

Regards,
Bill Page.



From MAILER-DAEMON Wed Jun 13 23:27:45 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hyfzt-0005hU-Kc
	for mharc-axiom-mail@gnu.org; Wed, 13 Jun 2007 23:27:45 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hyfzs-0005f1-4v
	for axiom-mail@nongnu.org; Wed, 13 Jun 2007 23:27:44 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hyfzr-0005e0-4S
	for axiom-mail@nongnu.org; Wed, 13 Jun 2007 23:27:43 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hyfzr-0005dp-1U
	for axiom-mail@nongnu.org; Wed, 13 Jun 2007 23:27:43 -0400
Received: from py-out-1112.google.com ([64.233.166.176])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1Hyfzq-0000tw-OR
	for axiom-mail@nongnu.org; Wed, 13 Jun 2007 23:27:42 -0400
Received: by py-out-1112.google.com with SMTP id y77so793732pyg
	for <axiom-mail@nongnu.org>; Wed, 13 Jun 2007 20:27:42 -0700 (PDT)
Received: by 10.65.243.18 with SMTP id v18mr2282199qbr.1181791661865;
	Wed, 13 Jun 2007 20:27:41 -0700 (PDT)
Received: by 10.64.251.15 with HTTP; Wed, 13 Jun 2007 20:27:41 -0700 (PDT)
Message-ID: <fbcd16d40706132027j2c33c30el6170abb9deef1f17@mail.gmail.com>
Date: Wed, 13 Jun 2007 23:27:41 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: "Alasdair McAndrew" <amca01@gmail.com>
Subject: Re: [Axiom-mail] A slow summation
In-Reply-To: <fbcd16d40706131933g1cc2b405sd1185e21b8363c7c@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <1d67a53c0706131833x18b27cedl217f453172e76f04@mail.gmail.com>
	<fbcd16d40706131911t7e211b04w3dd1767edc24844e@mail.gmail.com>
	<fbcd16d40706131933g1cc2b405sd1185e21b8363c7c@mail.gmail.com>
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 14 Jun 2007 03:27:44 -0000

Of course these also make some sense :-)

(1) -> sum(1/x,x=1.0..20000.0)

   (1)  10.4807282172 29327571
                                  Type: Union(Expression Float,...)
 Time: 0.02 (IN) + 3.10 (EV) + 0.02 (OT) + 0.32 (GC) = 3.45 sec

(2) -> sum(1/x,x=(1.0..20000.0)$Segment DoubleFloat)

   (2)  10.480728217229315
                         Type: Union(Expression DoubleFloat,...)
                          Time: 1.77 (EV) + 0.23 (GC) = 2.00 sec

(3) -> sum(1/x,x=1..20000)::Float

   (3)  10.4807282172 29327573
                                                                  Type: Float
                         Time: 5.02 (EV) + 1.22 (GC) = 6.23 sec

----------

Float is the domain of finite precision floating point numbers and
DoubleFloat is the domain of hardware support floating point numbers.
The last computes an exact fraction (rational number) with a final
conversion to Float.

Maybe they provide good examples for your students?

Regards,
Bill Page.



From MAILER-DAEMON Thu Jun 14 00:51:09 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HyhIb-0007ot-5l
	for mharc-axiom-mail@gnu.org; Thu, 14 Jun 2007 00:51:09 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HyhIa-0007oo-Ip
	for axiom-mail@nongnu.org; Thu, 14 Jun 2007 00:51:08 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HyhIX-0007oc-Pd
	for axiom-mail@nongnu.org; Thu, 14 Jun 2007 00:51:07 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1HyhIX-0007oZ-JQ
	for axiom-mail@nongnu.org; Thu, 14 Jun 2007 00:51:05 -0400
Received: from ug-out-1314.google.com ([66.249.92.175])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <amca01@gmail.com>) id 1HyhIX-0000TY-0r
	for axiom-mail@nongnu.org; Thu, 14 Jun 2007 00:51:05 -0400
Received: by ug-out-1314.google.com with SMTP id a2so544703ugf
	for <axiom-mail@nongnu.org>; Wed, 13 Jun 2007 21:51:03 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed; d=gmail.com; s=beta;
	h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=mMkXJVKzK13rvnEVsH0JsQ5HzCQ3DV9KUfhl+sor7FJQf9wn7YdyCeEdkPuHbQDoup7npsreVu6X8YnXxop6IfKlfEnk8k9j7ZDbaduq1E8TE8ogpt4pC3hMI0r1HeNKVlRnfDdII/6idnU+vZdJn6QquS9nSeIiCKIdg+BfX6w=
DomainKey-Signature: a=rsa-sha1; c=nofws; d=gmail.com; s=beta;
	h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=ZKI/Ox45rxRsK276fHaNpgdTTTajTxdlaQhYIowMoD+h2yWjsWxYe5f/2ij4anghgOtkC46n845BYUwtyHWwobmk3gprSTfrRJedHM32AXpI0MpjujsipdbvUezaWf+FsL4HtdtwsVHy40oIY8rU82/QlBppffjLBGOq9E74U04=
Received: by 10.67.96.1 with SMTP id y1mr1794260ugl.1181796663823;
	Wed, 13 Jun 2007 21:51:03 -0700 (PDT)
Received: by 10.67.15.14 with HTTP; Wed, 13 Jun 2007 21:51:03 -0700 (PDT)
Message-ID: <1d67a53c0706132151t61424ba5w5317676c1f664b10@mail.gmail.com>
Date: Thu, 14 Jun 2007 14:51:03 +1000
From: "Alasdair McAndrew" <amca01@gmail.com>
To: "Bill Page" <bill.page@newsynthesis.org>, axiom-mail@nongnu.org
Subject: Re: [Axiom-mail] A slow summation
In-Reply-To: <fbcd16d40706132027j2c33c30el6170abb9deef1f17@mail.gmail.com>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_35783_25748589.1181796663793"
References: <1d67a53c0706131833x18b27cedl217f453172e76f04@mail.gmail.com>
	<fbcd16d40706131911t7e211b04w3dd1767edc24844e@mail.gmail.com>
	<fbcd16d40706131933g1cc2b405sd1185e21b8363c7c@mail.gmail.com>
	<fbcd16d40706132027j2c33c30el6170abb9deef1f17@mail.gmail.com>
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Cc: 
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 14 Jun 2007 04:51:08 -0000

------=_Part_35783_25748589.1181796663793
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Thanks Bill - all of those examples work fine.  Pity about the slow list,
though.

-Alasdair

On 6/14/07, Bill Page <bill.page@newsynthesis.org> wrote:
>
> Of course these also make some sense :-)
>
> (1) -> sum(1/x,x=1.0..20000.0)
>
>    (1)  10.4807282172 29327571
>                                   Type: Union(Expression Float,...)
> Time: 0.02 (IN) + 3.10 (EV) + 0.02 (OT) + 0.32 (GC) = 3.45 sec
>
> (2) -> sum(1/x,x=(1.0..20000.0)$Segment DoubleFloat)
>
>    (2)  10.480728217229315
>                          Type: Union(Expression DoubleFloat,...)
>                           Time: 1.77 (EV) + 0.23 (GC) = 2.00 sec
>
> (3) -> sum(1/x,x=1..20000)::Float
>
>    (3)  10.4807282172 29327573
>                                                                   Type:
> Float
>                          Time: 5.02 (EV) + 1.22 (GC) = 6.23 sec
>
> ----------
>
> Float is the domain of finite precision floating point numbers and
> DoubleFloat is the domain of hardware support floating point numbers.
> The last computes an exact fraction (rational number) with a final
> conversion to Float.
>
> Maybe they provide good examples for your students?
>
> Regards,
> Bill Page.
>

------=_Part_35783_25748589.1181796663793
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Thanks Bill - all of those examples work fine.&nbsp; Pity about the slow list, though.<br><br>-Alasdair<br><br><div><span class="gmail_quote">On 6/14/07, <b class="gmail_sendername">Bill Page</b> &lt;<a href="mailto:bill.page@newsynthesis.org">
bill.page@newsynthesis.org</a>&gt; wrote:</span><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">Of course these also make some sense :-)<br>
<br>(1) -&gt; sum(1/x,x=1.0..20000.0)<br><br>&nbsp;&nbsp; (1)&nbsp;&nbsp;10.4807282172 29327571<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Type: Union(Expression Float,...)<br> Time: 0.02 (IN) + 3.10 (EV) + 0.02 (OT) + 0.32 (GC) = 3.45 sec<br><br>
(2) -&gt; sum(1/x,x=(1.0..20000.0)$Segment DoubleFloat)<br><br>&nbsp;&nbsp; (2)&nbsp;&nbsp;10.480728217229315<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Type: Union(Expression DoubleFloat,...)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Time: 1.77 (EV) + 0.23 (GC) = 2.00
 sec<br><br>(3) -&gt; sum(1/x,x=1..20000)::Float<br><br>&nbsp;&nbsp; (3)&nbsp;&nbsp;10.4807282172 29327573<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Type: Float<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Time: 5.02 (EV) + 1.22 (GC) = 
6.23 sec<br><br>----------<br><br>Float is the domain of finite precision floating point numbers and<br>DoubleFloat is the domain of hardware support floating point numbers.<br>The last computes an exact fraction (rational number) with a final
<br>conversion to Float.<br><br>Maybe they provide good examples for your students?<br><br>Regards,<br>Bill Page.<br></blockquote></div><br>

------=_Part_35783_25748589.1181796663793--



From MAILER-DAEMON Thu Jun 14 09:09:51 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hyp5D-0001iH-4J
	for mharc-axiom-mail@gnu.org; Thu, 14 Jun 2007 09:09:51 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hyp5B-0001i2-7A
	for axiom-mail@nongnu.org; Thu, 14 Jun 2007 09:09:49 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hyp58-0001hq-Pw
	for axiom-mail@nongnu.org; Thu, 14 Jun 2007 09:09:47 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hyp58-0001hn-Je
	for axiom-mail@nongnu.org; Thu, 14 Jun 2007 09:09:46 -0400
Received: from ug-out-1314.google.com ([66.249.92.173])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <amca01@gmail.com>) id 1Hyp58-0005dm-3s
	for axiom-mail@nongnu.org; Thu, 14 Jun 2007 09:09:46 -0400
Received: by ug-out-1314.google.com with SMTP id a2so618293ugf
	for <axiom-mail@nongnu.org>; Thu, 14 Jun 2007 06:09:44 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed; d=gmail.com; s=beta;
	h=domainkey-signature:received:received:message-id:date:from:to:subject:mime-version:content-type;
	b=rIywmx15NSVDWsQsy6ZLHSpWVHTGVs8HyDrMZtC3SUOt6UYW2zE7IVUgCY3IdX81fOg85ec3Cdwa0Q6GtZYW8dO58Ki27U0mqsnWVP/SDVSJ9dinsYHum0qeYwdQbcjGq+mHFB3/4gNIm2FpXYmDWsq/vAZmzwVvySXfkXCtWQo=
DomainKey-Signature: a=rsa-sha1; c=nofws; d=gmail.com; s=beta;
	h=received:message-id:date:from:to:subject:mime-version:content-type;
	b=fZixC7ZPJRpdwekrPACY/IcSx6heELRAB69eniQUwIXSG2topejfYhPlzhbvjuClAwxxfHvD4voiOcXm1rMf0R+jDBjXKD/areL+f/zHg4OmPLrIlLU7QdcW9ADZ0qBAf+cd7mNdvPD5UCWofeHnCLJPEXmhkdr9B8GBbIPhnzg=
Received: by 10.67.32.16 with SMTP id k16mr2025447ugj.1181826584490;
	Thu, 14 Jun 2007 06:09:44 -0700 (PDT)
Received: by 10.67.15.14 with HTTP; Thu, 14 Jun 2007 06:09:44 -0700 (PDT)
Message-ID: <1d67a53c0706140609m74fa67aflc8f1f1ee8586ed8b@mail.gmail.com>
Date: Thu, 14 Jun 2007 23:09:44 +1000
From: "Alasdair McAndrew" <amca01@gmail.com>
To: axiom-mail@nongnu.org
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_39458_25058373.1181826584461"
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Subject: [Axiom-mail] Axiom under windows - curious error
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 14 Jun 2007 13:09:49 -0000

------=_Part_39458_25058373.1181826584461
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

I've installed Axiom 0.1.4 on an oldish machine running Win 2000 Pro.  It
starts and works fine, but when I switch users and try to start it again, I
am told:

"Error: Cannot open the file
C:/msys/1.0/home/bpage/axiom--windows--1/mnt/window
/algebra/compress.daase.
Fast links are on: do (si::use-fast-links nil) for debugging
Error signalled by SYSTEM:TOP-LEVEL.
Broken at APPLY.  Type :H for Help.
BOOT>>"

What is going on?  I installed the entire Axiom tree in drive F:, far away
from users' home directories, and both users are administrators.  I suppose,
Bill, that "bpage" is you?  Then it's all YOUR fault!  (Just kidding).  But
I would like to know how to get around this behaviour.

Thanks,
Alasdair

------=_Part_39458_25058373.1181826584461
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

I&#39;ve installed Axiom 0.1.4 on an oldish machine running Win 2000 Pro.&nbsp; It starts and works fine, but when I switch users and try to start it again, I am told:<br><br>&quot;Error: Cannot open the file C:/msys/1.0/home/bpage/axiom--windows--1/mnt/window
<br>/algebra/compress.daase.<br>Fast links are on: do (si::use-fast-links nil) for debugging<br>Error signalled by SYSTEM:TOP-LEVEL.<br>Broken at APPLY.&nbsp; Type :H for Help.<br>BOOT&gt;&gt;&quot;<br><br>What is going on?&nbsp; I installed the entire Axiom tree in drive F:, far away from users&#39; home directories, and both users are administrators.&nbsp; I suppose, Bill, that &quot;bpage&quot; is you?&nbsp; Then it&#39;s all YOUR fault!&nbsp; (Just kidding).&nbsp; But I would like to know how to get around this behaviour.
<br><br>Thanks,<br>Alasdair<br>

------=_Part_39458_25058373.1181826584461--



From MAILER-DAEMON Thu Jun 14 12:10:36 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Hyru8-0005Rh-Ll
	for mharc-axiom-mail@gnu.org; Thu, 14 Jun 2007 12:10:36 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Hyru8-0005RR-4j
	for axiom-mail@nongnu.org; Thu, 14 Jun 2007 12:10:36 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Hyru6-0005PX-IJ
	for axiom-mail@nongnu.org; Thu, 14 Jun 2007 12:10:35 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Hyru6-0005PP-0k
	for axiom-mail@nongnu.org; Thu, 14 Jun 2007 12:10:34 -0400
Received: from py-out-1112.google.com ([64.233.166.183])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1Hyru5-0000Qg-L2
	for axiom-mail@nongnu.org; Thu, 14 Jun 2007 12:10:33 -0400
Received: by py-out-1112.google.com with SMTP id y77so1142375pyg
	for <axiom-mail@nongnu.org>; Thu, 14 Jun 2007 09:10:30 -0700 (PDT)
Received: by 10.65.84.5 with SMTP id m5mr3445060qbl.1181837429335;
	Thu, 14 Jun 2007 09:10:29 -0700 (PDT)
Received: by 10.64.251.15 with HTTP; Thu, 14 Jun 2007 09:10:29 -0700 (PDT)
Message-ID: <fbcd16d40706140910n10ca2e23g93ca1987fd4748c3@mail.gmail.com>
Date: Thu, 14 Jun 2007 12:10:29 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: "Alasdair McAndrew" <amca01@gmail.com>
Subject: Re: [Axiom-mail] Axiom under windows - curious error
In-Reply-To: <1d67a53c0706140609m74fa67aflc8f1f1ee8586ed8b@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <1d67a53c0706140609m74fa67aflc8f1f1ee8586ed8b@mail.gmail.com>
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 14 Jun 2007 16:10:36 -0000

Alasdair,

Maybe the following axiom-developer email thread will help?

http://lists.nongnu.org/archive/html/axiom-developer/2007-02/msg00062.html

I think you should check the location of the definition of the AXIOM
environment variable as suggested in that thread. It needs to be
defined for all users who access Axiom. If you want it can be defined
at the system level for all users. To test log in as the new user and
start a "Command Prompt" windows. Type:

  echo %PATH%

and check that

  C:\Program Files\axiom2\mnt\windows\bin;

is in the list.

I think the reason why

   C:/msys/1.0/home/bpage/axiom--windows--1/mnt/window

is appearing in your error message is that Axiom rather stupidly
defaults to the original build directory if it does not find a local
definition of the AXIOM environment variable. (Of course it should
give a reasonable error message - not default to something that is
certain to no longer exist and then complain ... :-)

Let me know if this helps.

Regards,
Bill Page.

On 6/14/07, Alasdair McAndrew <amca01@gmail.com> wrote:
> I've installed Axiom 0.1.4 on an oldish machine running Win 2000 Pro.  It
> starts and works fine, but when I switch users and try to start it again, I
> am told:
>
> "Error: Cannot open the file
> C:/msys/1.0/home/bpage/axiom--windows--1/mnt/window
> /algebra/compress.daase.
> Fast links are on: do (si::use-fast-links nil) for debugging
> Error signalled by SYSTEM:TOP-LEVEL.
> Broken at APPLY.  Type :H for Help.
> BOOT>>"
>
> What is going on?  I installed the entire Axiom tree in drive F:, far away
> from users' home directories, and both users are administrators.  I suppose,
> Bill, that "bpage" is you?  Then it's all YOUR fault!  (Just kidding).  But
> I would like to know how to get around this behaviour.
>
> Thanks,
> Alasdair
>
> _______________________________________________
> Axiom-mail mailing list
> Axiom-mail@nongnu.org
> http://lists.nongnu.org/mailman/listinfo/axiom-mail
>
>



From MAILER-DAEMON Sat Jun 16 16:21:42 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1HzemE-0005sb-AM
	for mharc-axiom-mail@gnu.org; Sat, 16 Jun 2007 16:21:42 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1HzemC-0005rx-Lg
	for axiom-mail@nongnu.org; Sat, 16 Jun 2007 16:21:40 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1HzemB-0005rg-Co
	for axiom-mail@nongnu.org; Sat, 16 Jun 2007 16:21:39 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43)
	id 1Hzem9-0005rB-Lb; Sat, 16 Jun 2007 16:21:37 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1Hzem9-0005dv-18; Sat, 16 Jun 2007 16:21:37 -0400
Received: from joan.univie.ac.at ([131.130.3.110] helo=joan.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1Hzem4-0002bB-Dd; Sat, 16 Jun 2007 22:21:32 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by joan.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1Hzem4-0002gX-CE; Sat, 16 Jun 2007 22:21:32 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: axiom-mail <axiom-mail@nongnu.org>,
	axiom-devel <axiom-developer@nongnu.org>
References: <9q1wgk3l2x.fsf@aquin.mat.univie.ac.at>
	<9qfy50xoen.fsf@aquin.mat.univie.ac.at>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 16 Jun 2007 22:21:31 +0200
Message-ID: <9qir9n8xbo.fsf@aquin.mat.univie.ac.at>
Lines: 47
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: 
Subject: [Axiom-mail] [ANN] version 16-06-2007 of axiom.el
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 16 Jun 2007 20:21:40 -0000

Again a new version of axiom.el.pamphlet, uploaded to MathAction:

http://wiki.axiom-developer.org/AxiomEmacsMode

You need to untangle the file and load it into emacs with 

  M-x load-file Ret axiom.el Ret

Changes:

* implemented repositioning of the process-mark consistently and safely,

* rearranged the defuns a little so that they are easier to locate in the
  documentation,

* axiom-reset now actually works (useful if for some reason some other process
  has written something into your *axiom* buffer.

* axiom-process is not set to nil anymore, when some buffer is killed.

> Missing:
> 
> * xemacs port
> 
> * allow lisp debugger to be entered, I.e., track when the prompt may change.
>   How does shell mode do this?
> 
> * clean up initialisation routines.

    In particular, I'd like to have the following behaviour:
    
    [[M-x axiom]] should switch to the buffer [[*axiom*]], if it exists and if
    it is an "axiom buffer".  (I guess that should be a buffer in
    [[axiom-mode]], with a running axiom process.)
     
    If there is no such buffer, it should create a new buffer and a new axiom
    process.
     
    [[(add-hook 'axiom-mode-hook (lambda () (rename-uniquely)))]] should
    rename the buffer.  I do not know what else one could use
    [[shell-mode-hook]] (and therefore [[axiom-mode-hook]]) for.

  * update the documentation and make it more concise.



Martin




From MAILER-DAEMON Wed Jun 20 18:42:16 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1I18sS-0003cj-Ks
	for mharc-axiom-mail@gnu.org; Wed, 20 Jun 2007 18:42:16 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1I17op-0007cN-3Z
	for axiom-mail@nongnu.org; Wed, 20 Jun 2007 17:34:27 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1I17oj-0007bw-QE
	for axiom-mail@nongnu.org; Wed, 20 Jun 2007 17:34:26 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1I17oj-0007bt-Ip
	for axiom-mail@nongnu.org; Wed, 20 Jun 2007 17:34:21 -0400
Received: from mail80.messagelabs.com ([195.245.230.163])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <alan.hutchinson@kcl.ac.uk>) id 1I17oh-0004bG-Ka
	for axiom-mail@nongnu.org; Wed, 20 Jun 2007 17:34:20 -0400
X-VirusChecked: Checked
X-Env-Sender: alan.hutchinson@kcl.ac.uk
X-Msg-Ref: server-7.tower-80.messagelabs.com!1182375231!49602981!1
X-StarScan-Version: 5.5.12.11; banners=-,-,-
X-Originating-IP: [137.73.2.214]
Received: (qmail 17198 invoked from network); 20 Jun 2007 21:33:51 -0000
Received: from outbound.kcl.ac.uk (HELO outbound.kcl.ac.uk) (137.73.2.214)
	by server-7.tower-80.messagelabs.com with AES256-SHA encrypted SMTP;
	20 Jun 2007 21:33:51 -0000
Received: from relay1.kcl.ac.uk ([137.73.2.212] helo=elder)
	by outbound.kcl.ac.uk outbound with esmtp
	(TLSv1:DHE-RSA-AES256-SHA:256) id 1I17nx-0004tr-MO
	for axiom-mail@nongnu.org; Wed, 20 Jun 2007 22:33:33 +0100
Received: from [212.248.151.180] (helo=[212.248.151.180])
	by elder mx with asmtp (TLSv1:DHE-RSA-AES256-SHA:256)
	id 1I17ne-00005d-Iq
	for axiom-mail@nongnu.org; Wed, 20 Jun 2007 22:33:18 +0100
Message-ID: <46799995.5080004@kcl.ac.uk>
Date: Wed, 20 Jun 2007 21:18:13 +0000
From: Alan Hutchinson <alan.hutchinson@kcl.ac.uk>
User-Agent: Thunderbird 1.5 (X11/20051201)
MIME-Version: 1.0
To: axiom-mail@nongnu.org
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-KCLAuthenticatedUser: stpv0523+1182375194+349/d9f46c07c06558e1642bdcbcea1d0a23
X-KCLSpamScore: 23
X-KCLRealSpamScore: 2.3
X-KCLZStatus: 23
X-KCLSpamBar: ++
X-KCLSpamReport: DEAR_SOMETHING=2.299
X-KCL-MailScanner: Found to be clean
X-MailScanner-From: alan.hutchinson@kcl.ac.uk
X-detected-kernel: Linux 2.4-2.6
X-Mailman-Approved-At: Wed, 20 Jun 2007 18:42:16 -0400
Subject: [Axiom-mail] AXIOM documentation
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 20 Jun 2007 21:34:27 -0000

Dear Sirs
I have downloaded and installed the precompiled form of Axiom on Linux.
Thank you for it.

I am trying to understand the documentation.  Below are some notes
based on Chapter 5 of the book.  The system seems to be based on a
directed graph whose nodes are Axiom objects and whose edges are of
two sorts which could be called
member
   a is a member of b if b is a domain (or subdomain?) and a's type is b
refines
   c refines d if all members of c are members of d and in addition
                  all operations of c are operations of d.
Is this right?
Probably not quite, since c may have operations with the same names as
operations in d but different interpretations, in which case c would
not refine d.

In the book, Figure 1 shows a bit of this graph for the "refines"
relation and for some basic domains of algebra.  Could someone please
draw a similar graph with nodes including
   Type
   Category
   Domain
   Any
   SetCategory
   Symbol
   Variable ?
These are the obscurest objects.  Someone has tried to explain them
in bookvol1 Chapter 5, but it is hard.  See the notes below.

The next issue is how to extend this graph.  It seems easy to add a
new node X with "member" edges:
   if X is to be a domain of class C then use C's natural constructor:
     X := C(...)
   if X is any other type of object of some type T then declare
     X : T := ...
I have not yet worked out how to refine a domain.  There is a hint on
page 14 of the book: Complex(R) defines its exports with
   "Ring with ... if R has Field then Field ..."
The precompiled distribution doesn't seem to include source code for
built-in categories such as Complex, and I don't know how to get much
further.  I haven't yet found a full account of the syntax used to
declare a category such as Complex.  The word
   with
does not have an entry in the Glossary or in bookvol1's index.

Please forgive me if these matters have simple answers.  I haven't
read all the documentation, but I have looked at it for a day or so.
This looks like a really powerful package, but learning how to take
full advantage of it is not simple.
Best wishes
Alan Hutchinson

------------------

DOMAINS, CATEGORIES
===================
from "bookvol1" section 5.1

An object which is a class (with attributes?) of objects is called
a "domain" or "subdomain".

Each basic object is a member of a unique domain
called its "type". (p 169)
-- What does "basic" mean?
    Note: the polynomial (x+3) is a member of a domain. (p 169)
A "subdomain" S of a domain D is
the subclass (with all the attributes of D plus others?)
of objects in D satisfying a certain "membership predicate",
say p_S. (p 171)
-- This implies that most subdomains are not domains, since
    every member x of S is also a member of D but (if x is "basic"?)
    x is a member of just one unique domain.
-- Note: the terms "object" and "basic" are not in the index.

Each (sub)domain is an object.
There is a domain of all domains and subdomains.  It is called TYPE.

A type whose objects are domains is called a "category". (p 172)
-- surely, this should be
    A type each of whose objects is a domain or a subdomain
    is called a "category".

A function whose values are domains is called a "constructor".

Each (sub)domain has a name.  The name begins with a capital letter.
This name is also the name of a constructor function which constructs
(sub?)domains of the (sub)domain with this name.

The "has" operator is true of a domain D and a category C iff D is a 
member of C
.
-- might D be a subdomain? (p 173)

(13) -> Object has Type
  13) ->
    Object is not a valid type.
(13) -> SetCategory has Type
(13) ->
    (13)  true
                                                                 Type: 
Boolean
(14) -> SetCategory has SetCategory
(14) ->
    (14)  true
                                                                 Type: 
Boolean
(15) -> Type has SetCategory
(15) ->
    (15)  false
                                                                 Type: 
Boolean
(16) -> )show SetCategory
  SetCategory  is a category constructor
  Abbreviation for SetCategory is SETCAT
  This constructor is exposed in this frame.
  Issue )edit /home/axiom/mnt/linux/../../src/algebra/SETCAT.spad to see 
algebra
source code for SETCAT

------------------------------- Operations --------------------------------
  ?=? : (%,%) -> Boolean                coerce : % -> OutputForm
  hash : % -> SingleInteger             latex : % -> String
  ?~=? : (%,%) -> Boolean

So it seems that SetCategory is a category of all domains whose members
can be printed and which can be tested for equality; and furthermore
all such domains can be printed and tested for equality.
Type is not such a domain.
Are there any others?

(16) -> File(SetCategory) has SetCategory
  16) ->
    File SetCategory is not a valid type.
(16) -> File(Type) has SetCategory
  16) ->
    File Type is not a valid type.
(16) -> File(Polynomial(Integer)) has SetCategory
    (16)  true
                                                                 Type: 
Boolean
(17) -> )show File
  File S: SetCategory  is a domain constructor
  Abbreviation for File is FILE
  This constructor is exposed in this frame.
  Issue )edit /home/axiom/mnt/linux/../../src/algebra/FILE.spad to see 
algebra so
urce code for FILE

------------------------------- Operations --------------------------------
  ?=? : (%,%) -> Boolean                close! : % -> %
  coerce : % -> OutputForm              hash : % -> SingleInteger
  iomode : % -> String                  latex : % -> String
  name : % -> FileName                  open : (FileName,String) -> %
  open : FileName -> %                  read! : % -> S
  reopen! : (%,String) -> %             write! : (%,S) -> S
  ?~=? : (%,%) -> Boolean
  readIfCan! : % -> Union(S,"failed")

Correction:
files can be printed and tested for equality but File(S) is not a 
SetCategory.
Conjecture:
SetCategory is the category of domains whos objects all have
complete internal representations within Axiom.
Note:
if this is so then the predicate ?=? may fail.

The type of all categories is "Category" (p 174) but
(19) -> )show Category
       ...
               Category is not the name of a known type constructor.
(19) -> )show Type
  Type  is a category constructor
  Abbreviation for Type is TYPE
  ...
------------------------------- Operations --------------------------------
  ... (None) ...




From MAILER-DAEMON Wed Jun 20 20:51:10 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1I1AtC-0005BC-JO
	for mharc-axiom-mail@gnu.org; Wed, 20 Jun 2007 20:51:10 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1I1AtA-0005Ar-BR
	for axiom-mail@nongnu.org; Wed, 20 Jun 2007 20:51:08 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1I1At9-0005Ae-PJ
	for axiom-mail@nongnu.org; Wed, 20 Jun 2007 20:51:08 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1I1At9-0005Ab-Gt
	for axiom-mail@nongnu.org; Wed, 20 Jun 2007 20:51:07 -0400
Received: from py-out-1112.google.com ([64.233.166.183])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1I1At8-00008m-UI
	for axiom-mail@nongnu.org; Wed, 20 Jun 2007 20:51:07 -0400
Received: by py-out-1112.google.com with SMTP id y77so754134pyg
	for <axiom-mail@nongnu.org>; Wed, 20 Jun 2007 17:51:05 -0700 (PDT)
Received: by 10.65.153.10 with SMTP id f10mr2520705qbo.1182387064501;
	Wed, 20 Jun 2007 17:51:04 -0700 (PDT)
Received: by 10.64.251.15 with HTTP; Wed, 20 Jun 2007 17:51:04 -0700 (PDT)
Message-ID: <fbcd16d40706201751t694db4b6hcb466fb73f1088ad@mail.gmail.com>
Date: Wed, 20 Jun 2007 20:51:04 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: "Alan Hutchinson" <alan.hutchinson@kcl.ac.uk>
Subject: Re: [Axiom-mail] AXIOM documentation
In-Reply-To: <46799995.5080004@kcl.ac.uk>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <46799995.5080004@kcl.ac.uk>
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Cc: axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 21 Jun 2007 00:51:08 -0000

On 6/20/07, Alan Hutchinson wrote:
> ...
> I am trying to understand the documentation.  Below are some notes
> based on Chapter 5 of the book.  The system seems to be based on a
> directed graph whose nodes are Axiom objects and whose edges are of
> two sorts which could be called
> member
>    a is a member of b if b is a domain (or subdomain?) and a's type is b
> refines
>    c refines d if all members of c are members of d and in addition
>                   all operations of c are operations of d.
> Is this right?

That is a very good start. I am glad that you are taking the time to
understand Axiom at this level. Many people start with Axiom thinking
that it is just another computer algebra system (like, Maxima, Maple,
Mathematica, etc.) but that can lead to a lot of initial confusion. I
have come to believe that it is probably better to emphasis Axiom's
type and object system right from the beginning (during the first few
experimental computations). I think itis essential to get a basic
understanding of these concepts if one is going to progress beyond the
first few pages of any tutorial.

I personally find most of the Axiom book a little confused (or at
least written in a confusing manner) when it discusses types. If you
have a computer sciense background or a high tolerance for a terse but
accurate description of the Axiom language, then I think the Aldor
User's Guide:

http://www.aldor.org/mediawiki/index.php/Aldor_Documentation

is a great place to start. In so doing you are essentially starting at
the end (or a least the latter phase) of the original Axiom
development while it was still a research project at IBM. One of the
design ojbectives of Aldor was to bring some order and conclusion to
the system and programming language design that was a result of the
earlier research and experimentation. So even though Aldor is not (at
least not yet :) a part of the Axiom open source release and though
you may not be planning to program in Aldor, I think it is a good
place to start because it distills many of the concepts implemented in
Axiom to their essense and presents them in a more rigorous manner
than in Axiom itself.

In particular you should pay particular attention to Chapters 7: Types
and 13: Language-defined types

http://aldor.org/docs/HTML/chap7.html
http://aldor.org/docs/HTML/chap13.html

Pay particularly close attention to the concept of "type
satisfaction". Once you understand something about types, I think it
much easier to appreciate the kind of things that the Axiom
interpreter tries to do to relieve you of the burden of always having
to be specific about types and the relationships between objects.

> Probably not quite, since c may have operations with the same names as
> operations in d but different interpretations, in which case c would
> not refine d.
>

Actually that is also true. Some thing that is important to remember
is that domains members of named categories by *assertion* - not just
because they implement a certain set of operations with common
signatures. See:

A First Course on Aldor with libaldor
http://www-sop.inria.fr/cafe/Manuel.Bronstein/libaldor/tutorial.pdf

It is also interesting to read:

Domains of data and domains of terms in AXIOM
by BROWN, R. & DRECKMANN, W

in http://www.informatics.bangor.ac.uk/public/math/research/preprints/95/algtop95.html
or
http://portal.axiom-developer.org/refs/articles/brown-free-c-g.pdf/file_view

This is at least in part what gives the concept of "category" in Axiom
it's expressive power since the name that we give to categories often
stand of mathematical axioms.

> In the book, Figure 1 shows a bit of this graph for the "refines"
> relation and for some basic domains of algebra.  Could someone please
> draw a similar graph with nodes including
>    Type
>    Category
>    Domain
>    Any
>    SetCategory
>    Symbol
>    Variable ?
> These are the obscurest objects.  Someone has tried to explain them
> in bookvol1 Chapter 5, but it is hard.  See the notes below.

As the Aldor documentation points out, the relationship between
categories is different from the relationship between domains and
categories and form the relationship of objects to domains. Both
Categories and Domains are Types (Axiom has a "two-level" type
system.). Things like Monoid, Ring, Field, and IntegralDomain are
categories, while Any, SetCategory, Symbol and Variable are all
domains.

If you have some experience with object-oriented programming than it
is useful to realize that domains are like "classes". Categories are a
little different and more abstract. They help to express generic
programming in Axiom - that is a generalized specification for
algorithms that apply over a very wide range of data types.

>
> The next issue is how to extend this graph.  It seems easy to add a
> new node X with "member" edges:
>    if X is to be a domain of class C then use C's natural constructor:
>      X := C(...)
>    if X is any other type of object of some type T then declare
>      X : T := ...

I am afraid you might be defining new and mixing old terminology here
without making this much clearer. I recommend trying to use the terms
as defined in the Aldor documentation.

> I have not yet worked out how to refine a domain.  There is a hint on
> page 14 of the book: Complex(R) defines its exports with
>    "Ring with ... if R has Field then Field ..."

Complex is a domain constructor, i.e. a function that returns a domain
as a result.

> The precompiled distribution doesn't seem to include source code for
> built-in categories such as Complex, and I don't know how to get much
> further.  I haven't yet found a full account of the syntax used to
> declare a category such as Complex.

You should have a 'src' directory that was unpacked when you installed
the binary version of Axiom. If you don't find it, please tell us
exactly what binary version of Axiom you are using and where you
downloaded it.

You might also be interesting in view the Axiom source code on line.
You can do that here:

http://wiki.axiom-developer.org/axiom--test--1

For the Complex domain see:

http://wiki.axiom-developer.org/axiom--test--1/src/algebra/GaussianSpad

>  The word
>    with
> does not have an entry in the Glossary or in bookvol1's index.
>

You will find this clearly defined in the Aldor documentation.

> Please forgive me if these matters have simple answers.  I haven't
> read all the documentation, but I have looked at it for a day or so.
> This looks like a really powerful package, but learning how to take
> full advantage of it is not simple.

I think you are right on both points!

Thank you for sending your notes. I will try to get time to review
them in a little more depth later.

Regards,
Bill Page.



From MAILER-DAEMON Thu Jun 21 04:40:20 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1I1IDE-0004EG-Ie
	for mharc-axiom-mail@gnu.org; Thu, 21 Jun 2007 04:40:20 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1I1IDD-0004Dm-3i
	for axiom-mail@nongnu.org; Thu, 21 Jun 2007 04:40:19 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1I1IDC-0004Da-5c
	for axiom-mail@nongnu.org; Thu, 21 Jun 2007 04:40:18 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1I1IDB-0004DX-W6
	for axiom-mail@nongnu.org; Thu, 21 Jun 2007 04:40:18 -0400
Received: from mo-p07-ob.rzone.de ([81.169.146.188])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1I1IDB-0000M2-FV
	for axiom-mail@nongnu.org; Thu, 21 Jun 2007 04:40:17 -0400
Received: from [193.170.38.119]
	(woodpecker.risc.uni-linz.ac.at [193.170.38.119])
	by post.webmailer.de (fruni mo34) (RZmta 7.5)
	with ESMTP id j0165bj5L88D8B ; Thu, 21 Jun 2007 10:40:15 +0200 (MEST)
Message-ID: <467A396D.6090002@hemmecke.de>
Date: Thu, 21 Jun 2007 10:40:13 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.4 (X11/20070604)
MIME-Version: 1.0
To: Bill Page <bill.page@newsynthesis.org>
Subject: Re: [Axiom-mail] AXIOM documentation
References: <46799995.5080004@kcl.ac.uk>
	<fbcd16d40706201751t694db4b6hcb466fb73f1088ad@mail.gmail.com>
In-Reply-To: <fbcd16d40706201751t694db4b6hcb466fb73f1088ad@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-RZG-AUTH: kNFH2zO1gYIaN0yGuAImCzqpyKmhtxH+j8dRrTCCWfiOhoFueWBldT699TA=
X-RZG-CLASS-ID: mo07
X-detected-kernel: Solaris 10 (beta)
Cc: axiom-mail@nongnu.org, Alan Hutchinson <alan.hutchinson@kcl.ac.uk>
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 21 Jun 2007 08:40:19 -0000

Welcome Alan,

The first thing I'd like to support is Bill's suggestion that you should 
look at Aldor in order to understand the programming language. Axiom's 
SPAD (its compiler language) is a little different, but if you encounter 
differences and don't understand them, then it is probably better to ask 
again at the list (and maybe then write down some notes so that these 
differences become explicit --- best to do on a page at the MathAction 
(the Axiom wiki) http://wiki.axiom-developer.org/FrontPage . Replace 
"FrontPage" by some reasonable term and create that page. If you first 
would like to experiment with the wiki then start you term with Sandbox...

>> I am trying to understand the documentation.  Below are some notes
>> based on Chapter 5 of the book.  The system seems to be based on a
>> directed graph whose nodes are Axiom objects and whose edges are of
>> two sorts which could be called
>> member
>>    a is a member of b if b is a domain (or subdomain?) and a's type is b
>> refines
>>    c refines d if all members of c are members of d and in addition
>>                   all operations of c are operations of d.
>> Is this right?

[snip]

>> In the book, Figure 1 shows a bit of this graph for the "refines"
>> relation and for some basic domains of algebra.  Could someone please
>> draw a similar graph with nodes including
>>    Type
>>    Category
>>    Domain
>>    Any
>>    SetCategory
>>    Symbol
>>    Variable ?
>> These are the obscurest objects.  Someone has tried to explain them
>> in bookvol1 Chapter 5, but it is hard.  See the notes below.

As you will find in the Aldor User Guide everything has a type.
You can see at Aldor as a language that has 3 levels of things (well, I 
wanted to say "object", but that gets easily confused with that concept 
in OOP.

(Before anybody wants to complain that I am not totally correct, I'd 
like to say that I did this by intention in order to simplify the first 
steps for a new user/developer.)

Example (I don't refer to Axiom but rather to the library LibAldor so 
the names might not be know to Axiom):

1st level:  42              (is of type Integer)
2nd level:  Integer         (is of type IntegerType)
3rd level:  IntegerType     (is of type Category)

The first level I'd like to call "simple objects" (but they are 
*definitely not* objects in the OO sense).
The things at the second level are called "domains". (A "package" is a 
special domain.)
The things at the third level are called "categories".
The name "Category" is a special built-in name that denotes the type of 
a category (i.e. the type of things at third level).

The things at second level are formed using the "add {...}" construction.
The things at third level are formed using the "with {...}" construction.

The things at second and third level are called types.
The identifier "Type" is builtin. It is the type of any type, (Something 
like the set of all sets---don't think about Russel's paradox here.)

Think of the things at third level as something comparable to JAVA 
interfaces. (That is not completely exact, but quite near to my taste.)

There are different ways of inheritance.
Second level: single inheritance.

MyDom: with {
   0: %;
   foo: % -> %;
} == Integer add {
   foo(x: %): % == x;
}

The domain "MyDom" exports exactly 2 things, the constant 0 and a 
function foo. As you can see, I have not given a definition for the 
implementation of 0. That implementation is inherited from the domain 
Integer.

Third level. Since that is not connected to implementations, but rather 
only signatures of functions, multiple inheritance is allowed.

So if you have

define CatA: with {foo: %->%, bar: %->()}
define CatB: with {foo: (%, %)->%; bar: %->()}
define CatC: Join(CatA, CatB} with {baz: () -> %}

then the last definition is (nearly) equivalent to

define CatD: with {
   foo: %->%;
   foo: (%,%)->%;
   bar: %->();
   baz: () -> %
}

It simply forms the (non-disjoint) union of all the signatures.
I said "nearly" because in the definition

define CatC: Join(CatA, CatB} with {baz: () -> %}

CatC remembers that it inherits from CatA and CatB while in the second 
definition, there is no relation to CatA and CatB.

So if you define domains

DomC: CatC == add {...}
DomD: CatD == add {...}

and later use constructs like

   if DomC has CatA then ...

   if DomD has CatA then ...

then "DomC has CatA" is true while "DomD has CatA" is false.

Does this help a bit?

>> I have not yet worked out how to refine a domain.  There is a hint on
>> page 14 of the book: Complex(R) defines its exports with
>>    "Ring with ... if R has Field then Field ..."
> 
> Complex is a domain constructor, i.e. a function that returns a domain
> as a result.

Yes, and it should be emphasized that things of first, second, and third 
level are all "first class citizens", i.e. each of them can appear as an 
argument to a function. For example "Complex" is such a function. It 
takes a domain (something of level 2) as argument and returns a domain.

In Aldor, you could also write something like

#include "algebra"
#include "aldorio"
mygcd(R: EuclideanDomain)(a: R, b: R): R == {
   R has Field => if zero? a and zero? b then 0 else 1;
   while not zero? b repeat { (a, b) := (b, a rem b) }
   return a;
}
Q ==> Fraction Integer;
import from Integer, Q;
g := mygcd Integer;
stdout << g(4,6) << newline;
stdout << mygcd(Q)(4::Q,6::Q) << newline;

Let me explain.

The signature of mygcd is

   (R: EuclideanDomain) -> ((R, R) -> R)

so it is actually a function that takes as input something of level 2 
and returns a function (something of level 1) whose type is

   (R, R) -> R

As you can see, the type of the output cannot be written down without 
knowing R. But R in this case is the *value* of the argument. Only the 
type of R is clear at compiletime (which is EuclideanDomain---something 
of level 3). The type of "mygcd" is called a "dependent type".

Note also the definition and use of g. g is a variable that has a 
function value, i.e. its signature is

   (Integer, Integer) -> Integer

and since that is a function type g can be applied to a pair of integers 
(4,6).

>> Please forgive me if these matters have simple answers.

Definitely not a problem. We all know that Axiom/Aldor *is* hard to 
learn. But when you come over the first hurdles you'll love the concepts 
that distinguish Axiom from all other CASs.

Ralf



From MAILER-DAEMON Sat Jun 23 12:23:39 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1I28Oh-00053u-Lk
	for mharc-axiom-mail@gnu.org; Sat, 23 Jun 2007 12:23:39 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1I28Og-00053p-GM
	for axiom-mail@nongnu.org; Sat, 23 Jun 2007 12:23:38 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1I28Of-00053d-Qq
	for axiom-mail@nongnu.org; Sat, 23 Jun 2007 12:23:38 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1I28Of-00053a-Hi
	for axiom-mail@nongnu.org; Sat, 23 Jun 2007 12:23:37 -0400
Received: from smtp-vbr7.xs4all.nl ([194.109.24.27])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <soemraws@xs4all.nl>) id 1I28Oe-0007OB-Sq
	for axiom-mail@nongnu.org; Sat, 23 Jun 2007 12:23:37 -0400
Received: from blackstar (oemrawsingh.xs4all.nl [213.84.4.243])
	by smtp-vbr7.xs4all.nl (8.13.8/8.13.8) with SMTP id l5NGNWkO056636
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <axiom-mail@nongnu.org>; Sat, 23 Jun 2007 18:23:33 +0200 (CEST)
	(envelope-from soemraws@xs4all.nl)
Received: by blackstar (sSMTP sendmail emulation);
	Sat, 23 Jun 2007 18:23:32 +0200
From: "Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl>
Date: Sat, 23 Jun 2007 18:23:32 +0200
To: axiom-mail@nongnu.org
Subject: Re: [Axiom-mail]  Defining piece-wise functions and drawing,
	integrating, ...
Message-ID: <20070623162332.GA7282@blackstar.oemrawsingh.xs4all.nl>
Mail-Followup-To: axiom-mail@nongnu.org
References: <20070603022127.GA28590@blackstar.oemrawsingh.xs4all.nl>
	<01ce01c7a5a4$fba96230$6900a8c0@asus>
	<20070605184956.GA18938@blackstar.oemrawsingh.xs4all.nl>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20070605184956.GA18938@blackstar.oemrawsingh.xs4all.nl>
User-Agent: Mutt/1.5.13 (2006-08-11)
X-Virus-Scanned: by XS4ALL Virus Scanner
X-detected-kernel: FreeBSD 4.6-4.9
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 23 Jun 2007 16:23:38 -0000

Hi guys,

I recently had some time to try some axiom stuff again. I've tried to get
the piecewise functions to work.

First thing I did, was try with a heaviside function:

(1) -> h(k,x)==1/2 + 1/%pi * atan(k*x)
h(k,x)==1/2 + 1/%pi * atan(k*x)
                                                                   Type: Void

Now, in the limit of k->infinity, this is exactly the heaviside function. As
such, it is possible to write a piecewise function using this:

(2) -> f(k,x)==x**2 * (h(k,x)-h(k,-x))
f(k,x)==x**2 * (h(k,x)-h(k,-x))
                                                                   Type: Void

which gives exactly the results that are expected:

(3) -> draw(limit(f(k,x),k=%plusInfinity),x=-5..5)
draw(limit(f(k,x),k=%plusInfinity),x=-5..5)
   Compiling function h with type (Variable k,Variable x) -> Expression
      Integer 
   Compiling function h with type (Variable k,Polynomial Integer) -> 
      Expression Integer 
   Compiling function f with type (Variable k,Variable x) -> Expression
      Integer 
   Compiling function %A with type DoubleFloat -> DoubleFloat 
   Graph data being transmitted to the viewport manager...
   AXIOM2D data being transmitted to the viewport manager...

   (3)  TwoDimensionalViewport: "x*DABS(x)"
                                                 Type: TwoDimensionalViewport


However, integration still doesn't work, which is rather odd:

(4) -> g(x)==limit(f(k,x),k=%plusInfinity)
g(x)==limit(f(k,x),k=%plusInfinity)
                                                                   Type: Void
(5) -> integrate(g(x),x=-1..1)
integrate(g(x),x=-1..1)
   Compiling function g with type Variable x -> Union(OrderedCompletion
      Expression Integer,Record(leftHandLimit: Union(OrderedCompletion 
      Expression Integer,"failed"),rightHandLimit: Union(
      OrderedCompletion Expression Integer,"failed")),"failed") 

   (5)  potentialPole
                                         Type: Union(pole: potentialPole,...)
(6) -> integrate(g(x),x=-1..1,"noPole")
integrate(g(x),x=-1..1,"noPole")
(6) -> 
   (6)  "failed"
                                                Type: Union(fail: failed,...)

What I would think is that, since g(x) is a sum of two functions, the
integral would split up into a sum of integrals as well. Naturally, the
integral over the heaviside function itself also doesn't work, as there is a
pole in the path of integration at x=0.

Now, since the heaviside function is special in a way, that we can remove
the function from the integration, as long as we adjust the boundaries
appropriately, I would like to somehow implement this. Or at least,
integration over a piecewise defined function should automatically perform
this adjustment of the integration boundaries.

Closely linked to that is integration over the function abs(x). Apparently,
there is a potential pole there as well. In a sense, abs(x) can be written
using heaviside functions as well (or the other way around, as I did
previously). Thus, integration over a function like abs(x) should work
properly by splitting the integration into two separate integrals, when x=0
is in the integration domain.

So I've been looking a bit into how this could be done in spad. But I've not
been able to understand where and how the functionality of such special
functions is or can be implemented, or if I somehow would have to extend the
definition or workings of the integrate function itself.

I also have difficulty finding some sort of example of how to do these types
of things in spad; the book and other materials I found on the web don't
really explain how to extend the algebraic functionality, or I haven't
looked in the proper places... So any pointers (web-wise or source-wise)
would be greatly appreciated. If I can calculate the integral of such
simple, piecewise functions by hand, I find that axiom should be able to do
so as well (symbolically).

Regards,

Sumant




On Tue, Jun 05, 2007 at 08:49:56PM +0200, Sumant S.R. Oemrawsingh wrote:
> Hi Bill,
> 
> Thanks for your elaborate and clarifying answers. I agree with you that I
> will probably have to help build what I want. I don't have much time to
> spend on it, but I am looking at it currently and will hopefully be
> contributing something in time.
> 
> Regards,
> 
> Sumant
> 
> On Sun, Jun 03, 2007 at 02:03:50AM -0400, Bill Page wrote:
> > On June 2, 2007 10:21 PM Sumant S.R. Oemrawsingh wrote:
> > > 
> > > Thanks for your answer. It is now more clear to me what 
> > > happens. As I am completely new to Axiom, I probably don't
> > > understand the full philosophy behind it yet, so I wish to
> > > ask a bit more on this, if you don't mind.
> > 
> > That is the purpose of this email list. Everyone is free to
> > ask and to answer questions here but if we discuss philosophy
> > I am afraid not everyone will agree. I believe that Axiom was
> > designed with a certain overall philosophy but that it was
> > not necessarily always applied consistently or in the same
> > manner by different people. For sure not everyone is going
> > to agree with my personal opinions about exact what this
> > "Axiom philosophy" is. I think that to properly discuss some
> > issues of philosophy requires a deep and thorough understanding
> > of the subject but not everyone has the patience or skill to
> > work at this level. Many people have very pragmatic reasons
> > for wanting to use a computer for doing mathematics - they have
> > some job they want to do and do not care too much about the
> > subject from an abstract "computer science" point of view. But
> > in my opinion the designers of Axiom did try very hard to take
> > the more general view while the designers of most other
> > superficially similar systems (e.g. reduce, maxima, maple,
> > mathematica, etc.) did not.
> > 
> > > 
> > > > You said you expected the 'f(x)' would represent some kind
> > > > of expression defined in a piecewise manner, but Axiom does
> > > > not currently have any expressions of this kind.
> > > 
> > > This is very strange, since in the Axiom book, there is a 
> > > whole section on piece-wise functions. Why have them, if
> > > they are not supported, so to say?
> > 
> > You have a very good point. Yes Axiom does have piece-wise
> > defined *functions* but it does not have piece-wise *expressions*.
> > It is important to make the distinction between function and
> > expression. In fact going deeper one can see that Axiom uses
> > the concept of "expression" in two different ways. In my
> > opinion understanding this is also an important part of the
> > Axiom philosophy.
> > 
> > For example in Axiom you can write the expression:
> > 
> >   (1) -> if x>0 then 1 else 0
> > 
> >     (1)  1
> >                               Type: PositiveInteger
> > 
> > The result of evaluating this expression depends on the value
> > assigned to x. This is a "piece-wise" expression in the sense
> > we have been discussing *BUT* this is a part of the Axiom
> > programming language - it is not part of any mathematical
> > object currently implemented in the Axiom library. The Axiom
> > library includes things like polynomials and even the domain
> > 'Expression' containing expressions like 'x+1' or 'sin(1)'
> > but there is currently no domain in which we can find an
> > expression like 'if x>0 then 1 else 0'.
> > 
> > > If it can be defined and yields correct answers when called 
> > > with integers or even expressions yielding specific values
> > > (say, sqrt(5) or cos(1/2)), why can't it be integrated over
> > > a domain where the variable takes on specific values for
> > > which all the definitions are required to be evaluated?
> > > 
> > 
> > Do you understand the difference between writing?
> > 
> >   draw(sin(x),x=-5..5)
> > 
> > and
> > 
> >   draw(sin, -5..5)
> > 
> > Martin showed how you could use draw in this way to display a
> > piecewise defined function. Unfortunately Axiom's symbol
> > integration operator does not currently allow a function as
> > argument but Martin did gave an example of using 'Romberg' to
> > do numerical integration of functions.
> > 
> > In principle it would be possible to extend Axiom's integration
> > and differentiation operators to work symbolically on functions
> > but this is a non-trivial problem. I believe one Axiom developer
> > (Gabriel Dos Reis one of his students) has done some work on
> > symbol differentiation of functions.
> > 
> > It is also possible in principle to deal with piece-wise
> > expressions as mathematical objects in Axiom. Tim Daly has
> > discussed the development of a general "proviso" feature in
> > Axiom that would make this possible. But even fairly extensions
> > of the existing 'Expression' domain could probably handle
> > simple cases of piece-wise expressions of the sort you have
> > discussed so far.
> > 
> > > Thanks to your explanation, I understand why x < 0 (Variable, 
> > > Polynomial Integer, Symbol,...) *does not* return true, but
> > > I do not understand why it *should* not return true (from a
> > > design point of view).
> > 
> > Perhaps you are objecting to the decision of the Axiom library
> > developers to define '<' in terms of lexical ordering for
> > polynomials. Although this is natural in a certain context,
> > I agree that that was probably a poor choice on their part.
> > 
> > > But from a mathematical point of view (imho), the expression
> > > x < 0 should not be false; it should be true by default,
> > > unless it has been specified that x is an element of some
> > > set, since if it is *not* defined, it can have *any* value,
> > > also negative. Therefore, when one expects to test the
> > > domain of x, such as in an expression like this, it should
> > > be true by default.
> > 
> > I strongly disagree with this. Most people would read 'x<0'
> > as a logical predicate. It is true or false depending on
> > the value and/or quantification associated with x. You are
> > right to be concerned about the domain of x but unfortunately
> > Axiom currently has no way to evaluate logical predicates of
> > that kind.
> > 
> > > 
> > > So, I wish to tell axiom that x is an element of, say, R.
> > > I understand that I should declare the type, in my example
> > > Float -> Float, like so:
> > > 
> > > (1) -> f: (Float) -> Float
> > >                                                               
> > >      Type: Void
> > > (2) -> f(x|x<=0)==-x**2   
> > >                                                               
> > >      Type: Void
> > > (3) -> f(x|x>0)==x**2     
> > >                                                               
> > >      Type: Void
> > > (4) -> f(5)
> > >    Compiling function f with type Float -> Float 
> > > 
> > >    (4)  - 25.0
> > > 
> > > (5) -> f(5**(1/3))
> > 
> > >    (5)  2.9240177382 128660655
> > >                                                               
> > >     Type: Float
> > >
> > 
> > Right.
> >  
> > > How do I get a symbolic answer now? I don't care what the 
> > > answer up to n digits is, I want to know the actual, exact
> > > answer.
> > 
> > But you specified the domain 'Float' that is a domain where
> > numbers are represented by an approximation. If you want
> > symbolic answers you need to specify a different domain,
> > e.g. Expression Integer.
> > 
> > > This is even worse:
> > > 
> > > (6) -> draw(f(x),x=-1..1)
> > >    Conversion failed in the compiled user function f .
> > >  
> > >    Cannot convert from type Symbol to Float for value
> > >    x
> > > 
> > 
> > Write it this way:
> > 
> >   draw(f,-1..1)
> > 
> > When you write 'f(x)' you are asking for a piece-wise
> > expression but that is not currently possible in Axiom. But
> > if you operate directly on the piece-wise function then you
> > can get what you want.
> > 
> > > (6) -> integrate(f(x),x=-1..1)
> > >    Conversion failed in the compiled user function f .
> > >  
> > >    Cannot convert from type Symbol to Float for value
> > >    x
> > >
> > 
> > Unfortunately you can not currently write:
> > 
> >   integrate(f, -1..1)
> > 
> > except in the case where you would like to do numerical
> > integration (e.g. Romberg).
> >  
> > > Granted, I really don't care that much about drawing the 
> > > function. It is more of a visual aid to see that I defined
> > > my function correctly. For the example, this is not really
> > > necessary, but some of the functions I wish to perform
> > > calculations with, have some wild definitions, with many
> > > pieces.
> > 
> > For drawing that is ok.
> > 
> > > However, integration is very important, since that is what
> > > I really want to do in the end. Even if it manages to give
> > > me an answer of the integral, I still don't want to know
> > > the answer estimated to n digits, I would like the exact
> > > answer.
> > >
> > 
> > I think that exact integration of piece-wise functions in
> > general is a rather difficult problem.
> >  
> > > So the real question I would like to ask is, how can I
> > > tell axiom that, during function definition, my variable
> > > belongs to R (or C), while all operations still remain
> > > symbolic?
> > 
> > Right now there is no way to do this in Axiom but that is
> > (more or less) what Tim Daly means by a 'proviso'. This is
> > still a research topic in Axiom.
> > 
> > > How can I get it to first evaluate the value of x, figure
> > > out which function to use, and then return the value
> > > symbolically again?
> > > 
> > 
> > I don't know.
> > 
> > > I have tried by using "numeric(x) > 0" in the conditions,
> > > but then integration won't work since numeric won't work on
> > > symbols etc. Thanks to your explanation, I already expected
> > > that before I even tried it. On a side note, f(%pi) will
> > > work correctly then.
> > > 
> > > Which leads me to the following: why is %e fundamentally 
> > > different from %pi? Or, since Martin sort of answered that
> > > question already, I should ask: why *should* %e be
> > > fundamentally different from %pi? 
> > 
> > I don't think it should be. This is just an accident of a
> > series of separate design decisions. As Martin said, this
> > should probably be corrected by a more or less complete
> > redesign of how Axiom handles constants. This would amount
> > to another Axiom research project.
> > 
> > > 
> > > But I digress. The most important question is, how to define
> > > a function such that it first evaluates the value of x, then
> > > chooses which case to use and then perform the action?
> > > 
> > > In integrate(), I would expect it would look at the limits,
> > > perform an indefinite integral of the relevant cases, and
> > > then fill in the limits for each case correctly.
> > 
> > Perhaps you could describe this algorithm in more detail.
> > Can you write some Axiom scripts that perform this sort
> > of computation?
> > 
> > > For draw, I would expect something similar.
> > > 
> > > I've been doing some other stuff with axiom (no problems 
> > > there!), and think it is really amazing. That is also the
> > > reason that I find this particular point so frustrating. So
> > > if you or any one could help, I would be very much obliged.
> > > 
> > 
> > I hope this reply is of some help even though for the most
> > part it is saying that what you want from Axiom you will
> > probably have to help build for yourself. :-)
> > 
> > Regards,
> > Bill Page
> > 
> > 
> 
> -- 
> Sumant S. R. Oemrawsingh
> soemraws@xs4all.nl
> 
> 
> _______________________________________________
> Axiom-mail mailing list
> Axiom-mail@nongnu.org
> http://lists.nongnu.org/mailman/listinfo/axiom-mail

-- 
Sumant S. R. Oemrawsingh
soemraws@xs4all.nl



From MAILER-DAEMON Sat Jun 23 15:24:00 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1I2BDE-00016R-Ce
	for mharc-axiom-mail@gnu.org; Sat, 23 Jun 2007 15:24:00 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1I2BDB-00013H-M9
	for axiom-mail@nongnu.org; Sat, 23 Jun 2007 15:23:57 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1I2BDB-00012b-4e
	for axiom-mail@nongnu.org; Sat, 23 Jun 2007 15:23:57 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43)
	id 1I2BD9-000115-Az; Sat, 23 Jun 2007 15:23:55 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1I2BD8-0006sL-Pj; Sat, 23 Jun 2007 15:23:55 -0400
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1I2BD7-0006aH-EQ; Sat, 23 Jun 2007 21:23:53 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.67)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1I2BD7-0005C3-DF; Sat, 23 Jun 2007 21:23:53 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: "Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl>
Subject: Re: [Axiom-mail]  Defining piece-wise functions and drawing,
	integrating, ...
References: <20070603022127.GA28590@blackstar.oemrawsingh.xs4all.nl>
	<01ce01c7a5a4$fba96230$6900a8c0@asus>
	<20070605184956.GA18938@blackstar.oemrawsingh.xs4all.nl>
	<20070623162332.GA7282@blackstar.oemrawsingh.xs4all.nl>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 23 Jun 2007 21:23:53 +0200
In-Reply-To: <20070623162332.GA7282@blackstar.oemrawsingh.xs4all.nl>
Message-ID: <9qbqf6o4om.fsf@aquin.mat.univie.ac.at>
Lines: 48
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-devel <axiom-developer@nongnu.org>, axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 23 Jun 2007 19:23:58 -0000

Dear Sumant,

"Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl> writes:


> (1) -> h(k,x)==1/2 + 1/%pi * atan(k*x)

> (2) -> f(k,x)==x**2 * (h(k,x)-h(k,-x))

> (4) -> g(x)==limit(f(k,x),k=%plusInfinity)

> What I would think is that, since g(x) is a sum of two functions, the
> integral would split up into a sum of integrals as well.

Hm, why should g(x) be a sum of two functions? My axiom gives me upon issueing
g x

 x abs(x)

> (6) -> integrate(g(x),x=-1..1,"noPole")
> integrate(g(x),x=-1..1,"noPole")
> (6) -> 
>    (6)  "failed"
>                                                 Type: Union(fail: failed,...)

This just says that axiom couldn't do the integral.  In particular, bugs aside,
it is a "proof" that it not expressible as an elementary function.  (The Risch
algorithm is more or less completely implemented in axiom, and axiom will spit
out an error message if you hit an unimplemented branch.)

> So I've been looking a bit into how this could be done in spad. But I've not
> been able to understand where and how the functionality of such special
> functions is or can be implemented, or if I somehow would have to extend the
> definition or workings of the integrate function itself.

For a start, I'd think it is easier to split up integration boundaries
semi-automatically, as I indicated in a previous email.

If you are really interested in the internals, I think that intpm.spad is for
you, it tells axiom some pattern matching rules.  In my opinion, we should go
the mupad way here, the source of axiom is a horror, while the one of mupad is
extremely easy to grasp and to extend.

But that's way beyond my (computer algebra) skills.

All the best,

Martin




From MAILER-DAEMON Sat Jun 23 17:21:18 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1I2D2j-0002RO-Ue
	for mharc-axiom-mail@gnu.org; Sat, 23 Jun 2007 17:21:17 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1I2D2i-0002Qv-GD
	for axiom-mail@nongnu.org; Sat, 23 Jun 2007 17:21:16 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1I2D2h-0002Qf-Ud
	for axiom-mail@nongnu.org; Sat, 23 Jun 2007 17:21:16 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43)
	id 1I2D2h-0002QN-3k; Sat, 23 Jun 2007 17:21:15 -0400
Received: from hera.math.uni.wroc.pl ([156.17.86.1])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <hebisch@math.uni.wroc.pl>)
	id 1I2D2g-0004Ll-KI; Sat, 23 Jun 2007 17:21:14 -0400
Received: from hebisch by hera.math.uni.wroc.pl with local (Exim 3.36 #1
	(Debian)) id 1I2D2P-0000CC-00; Sat, 23 Jun 2007 23:20:57 +0200
Subject: Re: [Axiom-developer] Re: [Axiom-mail] Defining piece-wise functions
	and drawing, integrating, ...
In-Reply-To: <9qbqf6o4om.fsf@aquin.mat.univie.ac.at>
To: Martin Rubey <martin.rubey@univie.ac.at>
Date: Sat, 23 Jun 2007 23:20:57 +0200 (CEST)
X-Mailer: ELM [version 2.4ME+ PL100 (25)]
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain; charset=US-ASCII
Message-Id: <E1I2D2P-0000CC-00@hera.math.uni.wroc.pl>
From: Waldek Hebisch <hebisch@math.uni.wroc.pl>
X-detected-kernel: Linux 2.6 (newer, 1)
Cc: axiom-devel <axiom-developer@nongnu.org>, axiom-mail@nongnu.org
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 23 Jun 2007 21:21:16 -0000

Martin Rubey wrote:
> Dear Sumant,
> 
> "Sumant S.R. Oemrawsingh" <soemraws@xs4all.nl> writes:
> 
> 
> > (1) -> h(k,x)==1/2 + 1/%pi * atan(k*x)
> 
> > (2) -> f(k,x)==x**2 * (h(k,x)-h(k,-x))
> 
> > (4) -> g(x)==limit(f(k,x),k=%plusInfinity)
> 
> > What I would think is that, since g(x) is a sum of two functions, the
> > integral would split up into a sum of integrals as well.
> 
> Hm, why should g(x) be a sum of two functions? My axiom gives me upon issueing
> g x
> 
>  x abs(x)
> 
> > (6) -> integrate(g(x),x=-1..1,"noPole")
> > integrate(g(x),x=-1..1,"noPole")
> > (6) -> 
> >    (6)  "failed"
> >                                                 Type: Union(fail: failed,...)
> 
> This just says that axiom couldn't do the integral.  In particular, bugs aside,
> it is a "proof" that it not expressible as an elementary function.  (The Risch
> algorithm is more or less completely implemented in axiom, and axiom will spit
> out an error message if you hit an unimplemented branch.)
> 

Note, that from Axiom point of view x*abs(x) is _not_ an elementary
function, so Risch algorithm immediatly gives up.

> > So I've been looking a bit into how this could be done in spad. But I've not
> > been able to understand where and how the functionality of such special
> > functions is or can be implemented, or if I somehow would have to extend the
> > definition or workings of the integrate function itself.
> 
> For a start, I'd think it is easier to split up integration boundaries
> semi-automatically, as I indicated in a previous email.
> 
> If you are really interested in the internals, I think that intpm.spad is for
> you, it tells axiom some pattern matching rules.  In my opinion, we should go
> the mupad way here, the source of axiom is a horror, while the one of mupad is
> extremely easy to grasp and to extend.
> 

I do not understand the comment about mupad.  I did not see mupad code,
but source of Axiom integrator is very clear: it implements Risch
algorithm very much as described in research articles.  Basically
the only extra difficulty is due to use of overloading: somethimes
one have to spend some time to discover domain from which given
operation comes.  The algorithm (and expecially math behind it) is
complex, so anybody who does not know the algorithm may easily get
lost.  But given complexity of math I doubt that that it can be
written much clearer.

Concerning integration of piecewise functions: there is an
algorithm which handles a buch of interesting cases. See:

D. J. Jeffrey,  G. Labahn,  M. v. Mohrenschildt,  A. D. Rich,
Integration of the signum, piecewise and related Functions
http://citeseer.ist.psu.edu/jeffrey97integration.html

and

D. J. Jeffrey,  A. D. Rich,   Recursive integration  of
piecewise-continuous functions
http://citeseer.ist.psu.edu/jeffrey97recursive.html

If one wants to implement something similar in Axiom the
first thing to do is to define a domain of piecewise
continuous functions.  Why?  Normal Axiom expressions form
a field, piecewise continuous functions have zero divisors,
so they only form a ring.  Zero divisors, if unhandled
will cause various nonsense results.

In general I belive that people who want to change Axiom
should quickly define their own category/domain/package
and work there.  Once such code is mature we will try
to integrate it.  It would be good to have some
examples for such extensions.  While defining new domains
looks easy one can hit problems very quickly.  For
example, a little package that tries to model adding
special functions:

)abbrev package EPAK MiscFunctions
MiscFunctions() : Exports == Implementation where
  F == Expression Integer
  Exports ==> with
     HypergeomF : (List F, List F, F) -> F
  Implementation ==> add
     ophypergeom := operator("HypergomF"::Symbol)$CommonOperators
     oplist := operator("%list"::Symbol)$CommonOperators
     HypergeomF(a, b, z) == ophypergeom [oplist a, oplist b, z]


One problem is that Axiom operats want expressions as arguments.
But here is natural to allow lists -- othewise one would be
forced to put arbitrary limit on the number of parameters and
define bunch of functions which differ only in the number
of paramters they accept.  Above I "solved" this using
atificial "%list" operator, but this has a drawback that
when I type:

HypergeomF([0, 1, 2], [2, 3], 3)

I get back:

HypergomF(%list(0,1,2),%list(2,3),3)

(and I would prefer list in square brackets).  It also seems
that this definitions will cause problems with derivatives
with respect to parameters...

-- 
                              Waldek Hebisch
hebisch@math.uni.wroc.pl 



From MAILER-DAEMON Tue Jun 26 08:59:24 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1I3Adf-0003Rw-QP
	for mharc-axiom-mail@gnu.org; Tue, 26 Jun 2007 08:59:23 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1I3Add-0003Oz-6Y
	for axiom-mail@nongnu.org; Tue, 26 Jun 2007 08:59:21 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1I3Adb-0003N3-G3
	for axiom-mail@nongnu.org; Tue, 26 Jun 2007 08:59:20 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1I3Adb-0003Mo-6X
	for axiom-mail@nongnu.org; Tue, 26 Jun 2007 08:59:19 -0400
Received: from ug-out-1314.google.com ([66.249.92.174])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <amca01@gmail.com>) id 1I3Adb-0006VL-0C
	for axiom-mail@nongnu.org; Tue, 26 Jun 2007 08:59:19 -0400
Received: by ug-out-1314.google.com with SMTP id a2so78761ugf
	for <axiom-mail@nongnu.org>; Tue, 26 Jun 2007 05:59:17 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed; d=gmail.com; s=beta;
	h=domainkey-signature:received:received:message-id:date:from:to:subject:mime-version:content-type;
	b=mnlrazLppdELDZCo3Mh2YvWD3dZUksqQvnyqL1L76PEnTKS4adVIsbVNVAQhVu/wzUuF0auQ3Xk1nme5JAoa037p+/74rsMLQz43FAGLrtPlcBCTDiCRWVpG6OvltOwjT/VnYtHo/pIpIz65yHSHhOVyz77yuc7hWMdHszdSFLk=
DomainKey-Signature: a=rsa-sha1; c=nofws; d=gmail.com; s=beta;
	h=received:message-id:date:from:to:subject:mime-version:content-type;
	b=V7KScx6H0XCyOhb95T/evek/6gYVY1LtFkyx4CXP4aoecZEb9Mo7nDSN5g0Wiw3Rv2YodICn+3Rbe7NeMvwHjQRxX7l8FPXct+cGZr6UaDG2uHx4GUkVprJYw4TJxxw1A2nb5R7C3bbZKLA3U6xy8nEB7g81PCV2e0Lzl09RDeU=
Received: by 10.66.243.4 with SMTP id q4mr386645ugh.1182862757338;
	Tue, 26 Jun 2007 05:59:17 -0700 (PDT)
Received: by 10.66.254.5 with HTTP; Tue, 26 Jun 2007 05:59:17 -0700 (PDT)
Message-ID: <1d67a53c0706260559m1407c874o96b6a4db1502587b@mail.gmail.com>
Date: Tue, 26 Jun 2007 22:59:17 +1000
From: "Alasdair McAndrew" <amca01@gmail.com>
To: axiom-mail@nongnu.org
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_43668_23510186.1182862757317"
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Subject: [Axiom-mail] Any computational number theorists here?
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 26 Jun 2007 12:59:21 -0000

------=_Part_43668_23510186.1182862757317
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

I'm trying to implement Lenstra's elliptic curve method for factorization;
so far I have implemented "phase 1" using two methods: the standard
projective coordinate system; and the Montgomery-Suyama parameterization.
I'd like to get the latter working, but at the moment it works very poorly.
The first method seems to work OK.

Does anybody know enough about this area to give me a hand?  Then we could
add it to the integer factorization routine, which is pretty under-powered.

Thanks,
Alasdair

------=_Part_43668_23510186.1182862757317
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

I&#39;m trying to implement Lenstra&#39;s elliptic curve method for factorization; so far I have implemented &quot;phase 1&quot; using two methods: the standard projective coordinate system; and the Montgomery-Suyama parameterization.&nbsp; I&#39;d like to get the latter working, but at the moment it works very poorly.&nbsp; The first method seems to work OK.
<br><br>Does anybody know enough about this area to give me a hand?&nbsp; Then we could add it to the integer factorization routine, which is pretty under-powered.<br><br>Thanks,<br>Alasdair<br>

------=_Part_43668_23510186.1182862757317--



From MAILER-DAEMON Tue Jun 26 09:10:09 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1I3Ao5-0006ni-Ls
	for mharc-axiom-mail@gnu.org; Tue, 26 Jun 2007 09:10:09 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1I3Ao4-0006mg-BP
	for axiom-mail@nongnu.org; Tue, 26 Jun 2007 09:10:08 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1I3Ao1-0006iT-Vb
	for axiom-mail@nongnu.org; Tue, 26 Jun 2007 09:10:08 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1I3Ao1-0006iO-HQ
	for axiom-mail@nongnu.org; Tue, 26 Jun 2007 09:10:05 -0400
Received: from mail35.messagelabs.com ([62.231.131.195])
	by monty-python.gnu.org with smtp (Exim 4.60)
	(envelope-from <themos@nag.co.uk>) id 1I3Ao0-0008I0-Vn
	for axiom-mail@nongnu.org; Tue, 26 Jun 2007 09:10:05 -0400
X-VirusChecked: Checked
X-Env-Sender: themos@nag.co.uk
X-Msg-Ref: server-10.tower-35.messagelabs.com!1182863400!6887624!1
X-StarScan-Version: 5.5.12.11; banners=nag.co.uk,-,-
X-Originating-IP: [62.231.145.242]
Received: (qmail 7456 invoked from network); 26 Jun 2007 13:10:00 -0000
Received: from nagmx1.nag.co.uk (HELO nagmx1.nag.co.uk) (62.231.145.242)
	by server-10.tower-35.messagelabs.com with SMTP;
	26 Jun 2007 13:10:00 -0000
Received: from loanamd6.nag.co.uk (loanamd6.nag.co.uk [192.156.217.152])
	by nagmx1.nag.co.uk (Postfix) with ESMTP id 9C6D112015F
	for <axiom-mail@nongnu.org>; Tue, 26 Jun 2007 14:10:01 +0100 (BST)
From: Themos Tsikas <themos@nag.co.uk>
Organization: NAG Ltd
To: axiom-mail@nongnu.org
Subject: Re: [Axiom-mail] Any computational number theorists here?
Date: Tue, 26 Jun 2007 14:09:58 +0100
User-Agent: KMail/1.9.1
References: <1d67a53c0706260559m1407c874o96b6a4db1502587b@mail.gmail.com>
In-Reply-To: <1d67a53c0706260559m1407c874o96b6a4db1502587b@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-15"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200706261409.58967.themos@nag.co.uk>
X-detected-kernel: Linux 2.4-2.6
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: themos@nag.co.uk
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 26 Jun 2007 13:10:08 -0000

On Tuesday 26 June 2007 13:59, Alasdair McAndrew wrote:
> I'm trying to implement Lenstra's elliptic curve method for factorization;
> so far I have implemented "phase 1" using two methods: the standard
> projective coordinate system; and the Montgomery-Suyama parameterization.
> I'd like to get the latter working, but at the moment it works very poorly.
> The first method seems to work OK.
>
> Does anybody know enough about this area to give me a hand?  Then we could
> add it to the integer factorization routine, which is pretty under-powered.
>
> Thanks,
> Alasdair

Google "ecfact.as" for an Aldor implementation.

________________________________________________________________________
The Numerical Algorithms Group Ltd is a company registered in England
and Wales with company number 1249803. The registered office is:
Wilkinson House, Jordan Hill Road, Oxford OX2 8DR, United Kingdom.

This e-mail has been scanned for all viruses by Star. The service is
powered by MessageLabs. 
________________________________________________________________________



From MAILER-DAEMON Tue Jun 26 09:19:40 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1I3AxI-0004mz-O9
	for mharc-axiom-mail@gnu.org; Tue, 26 Jun 2007 09:19:40 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1I3AxG-0004mp-UI
	for axiom-mail@nongnu.org; Tue, 26 Jun 2007 09:19:38 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1I3AxF-0004mc-H7
	for axiom-mail@nongnu.org; Tue, 26 Jun 2007 09:19:37 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1I3AxF-0004mZ-9t
	for axiom-mail@nongnu.org; Tue, 26 Jun 2007 09:19:37 -0400
Received: from ug-out-1314.google.com ([66.249.92.169])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <amca01@gmail.com>) id 1I3AxE-0001U2-PW
	for axiom-mail@nongnu.org; Tue, 26 Jun 2007 09:19:37 -0400
Received: by ug-out-1314.google.com with SMTP id a2so82606ugf
	for <axiom-mail@nongnu.org>; Tue, 26 Jun 2007 06:19:36 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed; d=gmail.com; s=beta;
	h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=qizcAzHmnq8PNcz+m6oc2+tF9Sp68avA5FNJZtaX5n3Tyle8FR8SsW5vZzCKi0qMihCFfdm5Y9RfwZ0699KSRFihpAdifEANpwcOllPIN5hTz1CSqugfo/MSwQZpeZzbwKvc0QBo3RFDqiBQFgFXn4O8WYbkS6QpKpSOT0hEQ5g=
DomainKey-Signature: a=rsa-sha1; c=nofws; d=gmail.com; s=beta;
	h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
	b=WzqBh/zKV5PciRbRh9Im3M2pTqzyWqao3o45hvUr0EHK55BWI1UpYfBs3ScNd9GKi9aIgIEuy+IwL+Dht7fdNu8TyS1EtaGNS3jK7yLF/8X4FwKgLzWDnaei5CgtpwH7RbuW6dyl655DfC8dZyOuKbQRBAYl2kOSODw6g1O7tgs=
Received: by 10.66.240.12 with SMTP id n12mr372696ugh.1182863975609;
	Tue, 26 Jun 2007 06:19:35 -0700 (PDT)
Received: by 10.66.254.5 with HTTP; Tue, 26 Jun 2007 06:19:35 -0700 (PDT)
Message-ID: <1d67a53c0706260619p63ffe340u64557e4ae65165e@mail.gmail.com>
Date: Tue, 26 Jun 2007 23:19:35 +1000
From: "Alasdair McAndrew" <amca01@gmail.com>
To: themos@nag.co.uk, axiom-mail@nongnu.org
Subject: Re: [Axiom-mail] Any computational number theorists here?
In-Reply-To: <200706261409.58967.themos@nag.co.uk>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_43940_7435506.1182863975559"
References: <1d67a53c0706260559m1407c874o96b6a4db1502587b@mail.gmail.com>
	<200706261409.58967.themos@nag.co.uk>
X-detected-kernel: Linux 2.4-2.6 (Google crawlbot)
Cc: 
X-BeenThere: axiom-mail@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-mail.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-mail>
List-Post: <mailto:axiom-mail@nongnu.org>
List-Help: <mailto:axiom-mail-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-mail>,
	<mailto:axiom-mail-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 26 Jun 2007 13:19:39 -0000

------=_Part_43940_7435506.1182863975559
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Thanks Themos.  That saves me a LOT of work!  How can this code be added to
axiom so that "factor(n)" uses this code as well as the standard methods
implemented in intfact.spad?

-Alasdair

On 6/26/07, Themos Tsikas <themos@nag.co.uk> wrote:
>
> On Tuesday 26 June 2007 13:59, Alasdair McAndrew wrote:
> > I'm trying to implement Lenstra's elliptic curve method for
> factorization;
> > so far I have implemented "phase 1" using two methods: the standard
> > projective coordinate system; and the Montgomery-Suyama
> parameterization.
> > I'd like to get the latter working, but at the moment it works very
> poorly.
> > The first method seems to work OK.
> >
> > Does anybody know enough about this area to give me a hand?  Then we
> could
> > add it to the integer factorization routine, which is pretty
> under-powered.
> >
> > Thanks,
> > Alasdair
>
> Google "ecfact.as" for an Aldor implementation.
>
> ________________________________________________________________________
> The Numerical Algorithms Group Ltd is a company registered in England
> and Wales with company number 1249803. The registered office is:
> Wilkinson House, Jordan Hill Road, Oxford OX2 8DR, United Kingdom.
>
> This e-mail has been scanned for all viruses by Star. The service is
> powered by MessageLabs.
> ________________________________________________________________________
>
>
> _______________________________________________
> Axiom-mail mailing list
> Axiom-mail@nongnu.org
> http://lists.nongnu.org/mailman/listinfo/axiom-mail
>

------=_Part_43940_7435506.1182863975559
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Thanks Themos.&nbsp; That saves me a LOT of work!&nbsp; How can this code be added to axiom so that &quot;factor(n)&quot; uses this code as well as the standard methods implemented in intfact.spad?<br><br>-Alasdair<br><br><div><span class="gmail_quote">
On 6/26/07, <b class="gmail_sendername">Themos Tsikas</b> &lt;<a href="mailto:themos@nag.co.uk">themos@nag.co.uk</a>&gt; wrote:</span><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
On Tuesday 26 June 2007 13:59, Alasdair McAndrew wrote:<br>&gt; I&#39;m trying to implement Lenstra&#39;s elliptic curve method for factorization;<br>&gt; so far I have implemented &quot;phase 1&quot; using two methods: the standard
<br>&gt; projective coordinate system; and the Montgomery-Suyama parameterization.<br>&gt; I&#39;d like to get the latter working, but at the moment it works very poorly.<br>&gt; The first method seems to work OK.<br>&gt;
<br>&gt; Does anybody know enough about this area to give me a hand?&nbsp;&nbsp;Then we could<br>&gt; add it to the integer factorization routine, which is pretty under-powered.<br>&gt;<br>&gt; Thanks,<br>&gt; Alasdair<br><br>Google &quot;
<a href="http://ecfact.as">ecfact.as</a>&quot; for an Aldor implementation.<br><br>________________________________________________________________________<br>The Numerical Algorithms Group Ltd is a company registered in England
<br>and Wales with company number 1249803. The registered office is:<br>Wilkinson House, Jordan Hill Road, Oxford OX2 8DR, United Kingdom.<br><br>This e-mail has been scanned for all viruses by Star. The service is<br>powered by MessageLabs.
<br>________________________________________________________________________<br><br><br>_______________________________________________<br>Axiom-mail mailing list<br><a href="mailto:Axiom-mail@nongnu.org">Axiom-mail@nongnu.org
</a><br><a href="http://lists.nongnu.org/mailman/listinfo/axiom-mail">http://lists.nongnu.org/mailman/listinfo/axiom-mail</a><br></blockquote></div><br>

------=_Part_43940_7435506.1182863975559--



