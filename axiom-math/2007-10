From MAILER-DAEMON Mon Oct 01 02:12:23 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IcEVz-0004zs-Pq
	for mharc-axiom-math@gnu.org; Mon, 01 Oct 2007 02:12:23 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IcEVx-0004y6-MF
	for axiom-math@nongnu.org; Mon, 01 Oct 2007 02:12:21 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IcEVv-0004wj-TD
	for axiom-math@nongnu.org; Mon, 01 Oct 2007 02:12:20 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43)
	id 1IcEVv-0004wa-Pm; Mon, 01 Oct 2007 02:12:19 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1IcEVv-0007lV-Bq; Mon, 01 Oct 2007 02:12:19 -0400
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.68)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1IcEVq-0003Ro-OC; Mon, 01 Oct 2007 08:12:14 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.68)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1IcEVq-00052H-NH; Mon, 01 Oct 2007 08:12:14 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: daly@axiom-developer.org
References: <200709272256.l8RMu2HD015739@axiom-developer.org>
	<9qfy0zmhol.fsf@aquin.mat.univie.ac.at>
	<200709280646.l8S6kZU30652@localhost.localdomain>
	<9q641ty4k7.fsf_-_@aquin.mat.univie.ac.at>
	<200709291543.l8TFhXk31748@localhost.localdomain>
	<9q641ta24s.fsf@aquin.mat.univie.ac.at>
	<200709291647.l8TGlJB31812@localhost.localdomain>
	<9qmyv55s3q.fsf@aquin.mat.univie.ac.at>
	<200709291710.l8THABB31834@localhost.localdomain>
	<9qve9tpdgo.fsf@aquin.mat.univie.ac.at>
	<200709292332.l8TNWos31904@localhost.localdomain>
	<9q3awx2c24.fsf_-_@aquin.mat.univie.ac.at>
	<200709300232.l8U2WO131964@localhost.localdomain>
	<9qd4w0ljho.fsf@aquin.mat.univie.ac.at>
	<200709302340.l8UNeVP07393@localhost.localdomain>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 01 Oct 2007 08:12:14 +0200
In-Reply-To: <200709302340.l8UNeVP07393@localhost.localdomain>
Message-ID: <9q1wcfgy81.fsf@aquin.mat.univie.ac.at>
Lines: 17
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Detected-Kernel: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-developer@nongnu.org, axiom-math@nongnu.org
Subject: [Axiom-math] Re: pfaffian.input.pamphlet
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 01 Oct 2007 06:12:21 -0000

root <daly@axiom-developer.org> writes:

> Martin,
> 
> I've been writing some pfaffian examples. Should the PfChar code read:
> 
> PfChar(lambda, A) ==
>   n := nrows A
> 
> PfChar(lambda, A) ==
>   n := nrows A
>   odd? n => 0

I didn't check for odd n since I didn't check for skew-symmetry either.  Yes,
one should, in a production environment.

Martin




From MAILER-DAEMON Thu Oct 04 08:16:41 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IdPdB-0008SQ-GC
	for mharc-axiom-math@gnu.org; Thu, 04 Oct 2007 08:16:41 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IdPdA-0008RK-35
	for axiom-math@nongnu.org; Thu, 04 Oct 2007 08:16:40 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IdPd9-0008Po-0D
	for axiom-math@nongnu.org; Thu, 04 Oct 2007 08:16:39 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43)
	id 1IdPd7-0008Ni-By; Thu, 04 Oct 2007 08:16:37 -0400
Received: from ctb-mesg8.saix.net ([196.25.240.78])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <cfrangos@telkomsa.net>)
	id 1IdPd6-00044F-Qh; Thu, 04 Oct 2007 08:16:37 -0400
Received: from zeta (tsil-ip-nas-1-p136.telkom-ipnet.co.za [155.239.188.136])
	by ctb-mesg8.saix.net (Postfix) with SMTP id 2EBA43D2E;
	Thu,  4 Oct 2007 14:16:23 +0200 (SAST)
Content-Type: text/plain;
  charset="us-ascii"
From: C. Frangos <cfrangos@telkomsa.net>
To: axiom-developer@nongnu.org
Date: Thu, 4 Oct 2007 13:04:32 +0200
X-Mailer: KMail [version 1.2]
MIME-Version: 1.0
Message-Id: <07100413043200.03874@zeta>
Content-Transfer-Encoding: quoted-printable
X-Detected-Kernel: Solaris 9
Cc: axiom-math@nongnu.org
Subject: [Axiom-math] Axiom: Matrix manipulations
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: cfrangos@telkomsa.net
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 04 Oct 2007 12:16:40 -0000



I have tried to read in the file test.input pasted below. However,=20
I am getting continuously error messages re. the matrix Acon, and have be=
en=20
unable to make progress.

Any assistance would be appreciated.

Thanks very much.

C. Frangos.


--file test.input

--)read expandsincos.input

Acon :=3D matrix([[1 , 0 , Lo1*sin(phi) , -sin(phi)*a , 0 , 0 , 0 , 0 , 0=
],_
[0 , 1 , -Lo1*cos(phi) , a*cos(phi) , 0 , 0 , 0 , 0 , 0],_
[1 , 0 , -Lo1*sin(phi) , 0 , -a*sin(phi), 0 , 0 , 0 , 0],-
[0 , 1 , Lo1*cos(phi) , 0 , a*cos(phi) , 0 , 0 , 0 , 0],_
[1,0,-Lc*cos(phi)+Lo1*sin(phi),0,0,0,-a*sin(phi)*cos(delta3)_
-a*cos(phi)*sin(delta3),0,0],_
[0,1,-Lc*sin(phi)-Lo1*cos(phi),0,0,0,a*cos(phi)*cos(delta3)_
-a*sin(phi)*sin(delta3),0,0],_=20
[1,-Lc*cos(phi)-Lo1*sin(phi),0,0,(-2*sin(phi)*Lo1*sin(delta3)-sin(phi)*_
Lc*cos(delta3)-cos(phi)*Lc*sin(delta3))*a/sqrt(4*Lo1^2*sin(delta3)^2+_
4*Lo1*sin(delta3)*Lc*cos(delta3)+Lc^2*cos(delta3)^2+Lc^2*sin(delta3)^2),0=
,0,0],_=20
[0,1,-Lc*sin(phi)+Lo1*cos(phi),0,0,a*(2*cos(phi)*Lo1*sin(delta3)+_
cos(phi)*Lc*cos(delta3)-sin(phi)*Lc*sin(delta3))/sqrt(4*Lo1^2*sin(delta3)=
^2+_
4*Lo1*sin(delta3)*Lc*cos(delta3)+Lc^2*cos(delta3)^2+Lc^2*sin(delta3)^2),0=
,0,0],_
[0 , 0 , 0 , 0 , 0 , 1 , 1 , 0 , -k]])

rankAcon :=3D rank(Acon)

nullityAcon :=3D nullity(Acon)

Aconre :=3D rowEchelon(Acon)

Aconnull :=3D nullSpace(Acon)


--end of file.





From MAILER-DAEMON Thu Oct 04 09:07:47 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IdQQc-00087K-KV
	for mharc-axiom-math@gnu.org; Thu, 04 Oct 2007 09:07:46 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IdQQa-00086o-Gv
	for axiom-math@nongnu.org; Thu, 04 Oct 2007 09:07:44 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IdQQV-00084i-75
	for axiom-math@nongnu.org; Thu, 04 Oct 2007 09:07:43 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IdQQU-00084e-RX
	for axiom-math@nongnu.org; Thu, 04 Oct 2007 09:07:39 -0400
Received: from smtp-104-thursday.nerim.net ([62.4.16.104] helo=kraid.nerim.net)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <fmaltey@nerim.fr>) id 1IdQQT-0000Y0-Rn
	for axiom-math@nongnu.org; Thu, 04 Oct 2007 09:07:38 -0400
Received: from localhost (fmaltey.net0.nerim.net [213.41.170.4])
	by kraid.nerim.net (Postfix) with ESMTP id 8CAE3CF0A3;
	Thu,  4 Oct 2007 15:07:32 +0200 (CEST)
Received: from fmy by localhost with local (Exim 4.63)
	(envelope-from <fmaltey@nerim.fr>)
	id 1IdQQN-0001Gt-Lt; Thu, 04 Oct 2007 15:07:32 +0200
To: cfrangos@telkomsa.net
Subject: Re: [Axiom-math] Axiom: Matrix manipulations
References: <07100413043200.03874@zeta>
From: Francois Maltey <fmaltey@nerim.fr>
Date: 04 Oct 2007 15:07:31 +0200
In-Reply-To: <07100413043200.03874@zeta>
Message-ID: <87hcl7koz0.fsf@nerim.fr>
Lines: 51
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Detected-Kernel: FreeBSD 6.x (1)
Cc: axiom-math@nongnu.org
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 04 Oct 2007 13:07:44 -0000

Hi C. ! 

What is your expandsincos.input file. 

First you read this file of axiom command. But for me it's a mysterious file.

> --file test.input
> 
> --)read expandsincos.input

You might create line after line the matrix :
I can't read all the charecters, it's too complex for me.
Perhaps the a term is missing at L7, its length is 8 and not 9.

Do you know how to study this matrix, I don't know it.
Any cas is more powerfull when the user know the reponse...
So he can suggest the right calculus way.

Have a nice day !

F. in France.

L1 := [1 , 0 , Lo1*sin(phi) , -sin(phi)*a , 0 , 0 , 0 , 0 , 0] 
L2 := [0 , 1 , -Lo1*cos(phi) , a*cos(phi) , 0 , 0 , 0 , 0 , 0] 
L3 := [1 , 0 , -Lo1*sin(phi) , 0 , -a*sin(phi), 0 , 0 , 0 , 0]
L4 := [0 , 1 , Lo1*cos(phi) , 0 , a*cos(phi) , 0 , 0 , 0 , 0]
L5 := [1,0,-Lc*cos(phi)+Lo1*sin(phi),0,0,0,-a*sin(phi)*cos(delta3)_
      -a*cos(phi)*sin(delta3),0,0] 
L6 := [0,1,-Lc*sin(phi)-Lo1*cos(phi),0,0,0,a*cos(phi)*cos(delta3)_
      -a*sin(phi)*sin(delta3),0,0]
L7 := [1,-Lc*cos(phi)-Lo1*sin(phi),0,0,(-2*sin(phi)*Lo1*sin(delta3)-sin(phi)*_
      Lc*cos(delta3)-cos(phi)*Lc*sin(delta3))*a/sqrt(4*Lo1^2*sin(delta3)^2+_
      4*Lo1*sin(delta3)*Lc*cos(delta3)+Lc^2*cos(delta3)^2+Lc^2*sin(delta3)^2),_
      0,0,0]
L8 := [0,1,-Lc*sin(phi)+Lo1*cos(phi),0,0,a*(2*cos(phi)*Lo1*sin(delta3)+_
      cos(phi)*Lc*cos(delta3)-sin(phi)*Lc*sin(delta3))/sqrt(4*Lo1^2*_
      sin(delta3)^2+4*Lo1*sin(delta3)*Lc*cos(delta3)+Lc^2*cos(delta3)^2+_
      Lc^2*sin(delta3)^2),0,0,0]
L9 :=  [0 , 0 , 0 , 0 , 0 , 1 , 1 , 0 , -k]

[#L1, #L2, #L3, #L4, #L5, L6, #L7, #L8, #L9]
Acon := matrix [L1,L2,L3,L4,L5,L6,L7,L8,L9]
 
rankAcon := rank(Acon)

nullityAcon := nullity(Acon)

Aconre := rowEchelon(Acon)

Aconnull := nullSpace(Acon)




From MAILER-DAEMON Thu Oct 04 18:57:54 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IdZdi-0005ST-IP
	for mharc-axiom-math@gnu.org; Thu, 04 Oct 2007 18:57:54 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IdZIW-0001NS-LE
	for axiom-math@nongnu.org; Thu, 04 Oct 2007 18:36:00 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IdZIU-0001Js-S9
	for axiom-math@nongnu.org; Thu, 04 Oct 2007 18:36:00 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43)
	id 1IdZIT-0001Fs-0t; Thu, 04 Oct 2007 18:35:57 -0400
Received: from hera.math.uni.wroc.pl ([156.17.86.1])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <hebisch@math.uni.wroc.pl>)
	id 1IdZIS-00061D-KX; Thu, 04 Oct 2007 18:35:56 -0400
Received: from hebisch by hera.math.uni.wroc.pl with local (Exim 3.36 #1
	(Debian)) id 1IdZIH-0000gx-00; Fri, 05 Oct 2007 00:35:45 +0200
In-Reply-To: <07100413043200.03874@zeta>
To: cfrangos@telkomsa.net
Date: Fri, 5 Oct 2007 00:35:45 +0200 (CEST)
X-Mailer: ELM [version 2.4ME+ PL100 (25)]
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain; charset=US-ASCII
Message-Id: <E1IdZIH-0000gx-00@hera.math.uni.wroc.pl>
From: Waldek Hebisch <hebisch@math.uni.wroc.pl>
X-Detected-Kernel: Linux 2.6 (newer, 1)
X-Mailman-Approved-At: Thu, 04 Oct 2007 18:57:53 -0400
Cc: axiom-developer@nongnu.org, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [Axiom-developer] Axiom: Matrix manipulations
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 04 Oct 2007 22:36:01 -0000

C. Frangos wrote:
> I have tried to read in the file test.input pasted below. However, 
> I am getting continuously error messages re. the matrix Acon, and have been 
> unable to make progress.
> 

> --file test.input
> 
> --)read expandsincos.input
> 
> Acon := matrix([[1 , 0 , Lo1*sin(phi) , -sin(phi)*a , 0 , 0 , 0 , 0 , 0],_
> [0 , 1 , -Lo1*cos(phi) , a*cos(phi) , 0 , 0 , 0 , 0 , 0],_
> [1 , 0 , -Lo1*sin(phi) , 0 , -a*sin(phi), 0 , 0 , 0 , 0],-
                                                           ^
You need underscore here.
> [0 , 1 , Lo1*cos(phi) , 0 , a*cos(phi) , 0 , 0 , 0 , 0],_
> [1,0,-Lc*cos(phi)+Lo1*sin(phi),0,0,0,-a*sin(phi)*cos(delta3)_
> -a*cos(phi)*sin(delta3),0,0],_
> [0,1,-Lc*sin(phi)-Lo1*cos(phi),0,0,0,a*cos(phi)*cos(delta3)_
> -a*sin(phi)*sin(delta3),0,0],_ 
> [1,-Lc*cos(phi)-Lo1*sin(phi),0,0,(-2*sin(phi)*Lo1*sin(delta3)-sin(phi)*_
> Lc*cos(delta3)-cos(phi)*Lc*sin(delta3))*a/sqrt(4*Lo1^2*sin(delta3)^2+_
> 4*Lo1*sin(delta3)*Lc*cos(delta3)+Lc^2*cos(delta3)^2+Lc^2*sin(delta3)^2),0,0,0],_ 

The row above has only 8 entries.

> [0,1,-Lc*sin(phi)+Lo1*cos(phi),0,0,a*(2*cos(phi)*Lo1*sin(delta3)+_
> cos(phi)*Lc*cos(delta3)-sin(phi)*Lc*sin(delta3))/sqrt(4*Lo1^2*sin(delta3)^2+_
> 4*Lo1*sin(delta3)*Lc*cos(delta3)+Lc^2*cos(delta3)^2+Lc^2*sin(delta3)^2),0,0,0],_
> [0 , 0 , 0 , 0 , 0 , 1 , 1 , 0 , -k]])
> 
> rankAcon := rank(Acon)
> 
> nullityAcon := nullity(Acon)
> 
> Aconre := rowEchelon(Acon)
> 
> Aconnull := nullSpace(Acon)
> 
> 

After correcting the two problems above (I added leading 0 to
the short row) I get rank 8 and [[0,0,0,0,0,0,0,1,0]] as
nullSpace.


-- 
                              Waldek Hebisch
hebisch@math.uni.wroc.pl 



From MAILER-DAEMON Wed Oct 17 23:19:36 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IiLv5-0003jE-TO
	for mharc-axiom-math@gnu.org; Wed, 17 Oct 2007 23:19:35 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IiLv2-0003iq-8H
	for axiom-math@nongnu.org; Wed, 17 Oct 2007 23:19:32 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IiLuz-0003ie-OF
	for axiom-math@nongnu.org; Wed, 17 Oct 2007 23:19:30 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IiLuz-0003ia-Hr
	for axiom-math@nongnu.org; Wed, 17 Oct 2007 23:19:29 -0400
Received: from nf-out-0910.google.com ([64.233.182.185])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1IiLuy-00066r-Tk
	for axiom-math@nongnu.org; Wed, 17 Oct 2007 23:19:29 -0400
Received: by nf-out-0910.google.com with SMTP id 30so37483nfu
	for <axiom-math@nongnu.org>; Wed, 17 Oct 2007 20:19:28 -0700 (PDT)
Received: by 10.86.53.8 with SMTP id b8mr51597fga.1192677567914;
	Wed, 17 Oct 2007 20:19:27 -0700 (PDT)
Received: by 10.86.77.14 with HTTP; Wed, 17 Oct 2007 20:19:27 -0700 (PDT)
Message-ID: <fbcd16d40710172019h60520e59r2efc72558fcfe80@mail.gmail.com>
Date: Wed, 17 Oct 2007 23:19:27 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: fricas-devel@googlegroups.com, open-axiom-devel@lists.sf.net
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_6959_11238674.1192677567907"
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: axiom-math@nongnu.org
Subject: [Axiom-math] missing exports in Finite DirectProduct and Product
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 18 Oct 2007 03:19:32 -0000

------=_Part_6959_11238674.1192677567907
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Axiom Developers;

If the components of the cartesian product Product or DirectProduct
are domains in the category Finite then the product domain has Finite.
Unfortunately the current Axiom library code does not define all of
the required exports of Finite. For example:

(1) -> index(1)$DirectProduct(2,IntegerMod(3))
   Internal Error
   The function index with signature hashcode is missing from domain
      DirectProduct2(IntegerMod 3)

(1) -> index(1)$Product(OVAR [a,b],IntegerMod(3))
   Internal Error
   The function index with signature hashcode is missing from domain
      Product(OrderedVariableList (a b))(IntegerMod 3)

(1) -> DirectProduct(2,IntegerMod(3)) has Finite

   (1)  true
                                                                Type: Boolean

The attached file contains a patch against FriCAS Revision: 112 that
adds the missing operations 'index', 'lookup', and 'hash'.  The
operation 'size' is already available as a default.

Having 'index' available for products allows one to iterate over the
elements of a cross product like this:

  X:=Product(OVAR [a,b],IntegerMod(3))
  [index(i::PI)$X for i in 1..size()$X]

Note: Coercion to PositiveInteger (PI) is required because 'size'
returns an NonNegativeInteger (NNI) so i is of type NNI but index
expects an argument >= 1. Since the products export operations allow
acces to the components it is easy to write functions that map over
such lists.

Writing this made me think that it was also desirable the domains in
Finite also enumerate there members in a more functional manner so
because FriCAS now allows us to easily make fairly deep changes in the
algebra code, as an exercise I decided to define the following new
export of Finite

  expand: () -> List %

  expand() == [index(i::PositiveInteger) for i in 1..size()]

So with this patch one can write for example:

(1) -> map(x+->(selectsecond(x)::Symbol)^(selectfirst(x)::Integer), _
         expand()$Product(ZMOD(3),OVAR [a,b]))

              2  2
   (1)  [a,b,a ,b ,1,1]
                                                Type: List Expression Integer

------

I would be interested in your opinions about this approach to
providing Cartesian products for the Axiom library.

I think it is interesting to see how domains in the category Finite
able to participate like "sets" in the language. Of course it is also
possible to represent countably infinite sets in Axiom via the Stream
domain. This suggests the that the category constructor StepThrough
could also usefully be provided with an export that expands to such
Stream. Perhaps the underlying Spad language should support this sort
of expansion of Finite and countably infinite domains as a standard
form of iterator in the [ ... for i in ... ] construction?

Of course Aldor already has implemented some basic abstractions of
this kind but it is not entirely obvious to me how best to extend
Axiom's library and still stay within the limitations of the current
Spad language.

Regards,
Bill Page.

------=_Part_6959_11238674.1192677567907
Content-Type: application/octet-stream; name=missing-finite-exports.patch
Content-Transfer-Encoding: base64
X-Attachment-Id: f_f7wovqtx
Content-Disposition: attachment; filename=missing-finite-exports.patch

SW5kZXg6IHNyYy9hbGdlYnJhL2NhdGRlZi5zcGFkLnBhbXBobGV0DQo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQotLS0g
c3JjL2FsZ2VicmEvY2F0ZGVmLnNwYWQucGFtcGhsZXQJKHJldmlzaW9uIDExMikNCisrKyBzcmMv
YWxnZWJyYS9jYXRkZWYuc3BhZC5wYW1waGxldAkod29ya2luZyBjb3B5KQ0KQEAgLTc5NSw3ICs3
OTUsMTAgQEANCiAgICAgICAgICsrIGxvb2t1cCh4KSByZXR1cm5zIGEgcG9zaXRpdmUgaW50ZWdl
ciBzdWNoIHRoYXQKICAgICAgICAgKysgXHNwYWR7eCA9IGluZGV4IGxvb2t1cCB4fS4KICAgICAg
IHJhbmRvbTogKCkgLT4gJQotICAgICAgICArKyByYW5kb20oKSByZXR1cm5zIGEgcmFuZG9tIGVs
ZW1lbnQgZnJvbSB0aGUgc2V0LgorICAgICAgICArKyByYW5kb20oKSByZXR1cm5zIGEgcmFuZG9t
IGVsZW1lbnQgZnJvbSB0aGUgc2V0CisgICAgICBleHBhbmQ6ICgpIC0+IExpc3QgJQorICBhZGQK
KyAgICAgIGV4cGFuZCgpID09IFtpbmRleChpOjpQb3NpdGl2ZUludGVnZXIpIGZvciBpIGluIDEu
LnNpemUoKV0KIAogQAogXHNlY3Rpb257Y2F0ZWdvcnkgRkxJTkVYUCBGdWxseUxpbmVhcmx5RXhw
bGljaXRSaW5nT3Zlcn0KSW5kZXg6IHNyYy9hbGdlYnJhL3Byb2R1Y3Quc3BhZC5wYW1waGxldA0K
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PQ0KLS0tIHNyYy9hbGdlYnJhL3Byb2R1Y3Quc3BhZC5wYW1waGxldAkocmV2aXNp
b24gMTEyKQ0KKysrIHNyYy9hbGdlYnJhL3Byb2R1Y3Quc3BhZC5wYW1waGxldAkod29ya2luZyBj
b3B5KQ0KQEAgLTUsNiArNSwxMCBAQA0KIFxhdXRob3J7VGhlIEF4aW9tIFRlYW19CiBcbWFrZXRp
dGxlCiBcYmVnaW57YWJzdHJhY3R9CitUaGlzIGRvbWFpbiBpbXBsZW1lbnRzIGNhcnRlc2lhbiBw
cm9kdWN0IGZvciBhIHBhaXIgb2YgKHBvc3NpYmx5IGRpZmZlcmVudCkgZG9tYWlucy4KK0lmIHRo
ZSB1bmRlcmx5aW5nIGRvbWFpbnMgYXJlIGJvdGggRmluaXRlIHRoZW4gdGhlIHJlc3VsdGluZyBQ
cm9kdWN0IGlzIGFsc28gRmluaXRlCithbmQgY2FuIGJlIGVudW1lcmF0ZWQgdmlhIHNpemUoKSwg
aW5kZXgoKSwgbG9jYXRpb24oKSwgZXRjLiBUaGUgaW5kZXggb2YgdGhlIHNlY29uZAorY29tcG9u
ZW50IChCKSB2YXJpZXMgbW9zdCBxdWlja2x5LgogXGVuZHthYnN0cmFjdH0KIFxlamVjdAogXHRh
Ymxlb2Zjb250ZW50cwpAQCAtNjQsOSArNjgsMTUgQEANCiAgICAgICAgICAgMSA9PSBbMSRBLDEk
Ql0KICAgICAgICAgICB4ICogeSA9PSBbeC5hY29tcCAqIHkuYWNvbXAseC5iY29tcCAqIHkuYmNv
bXBdCiAgICAgICAgICAgeCAqKiBwID09IFt4LmFjb21wICoqIHAgLHguYmNvbXAgKiogcF0KLSAK
KwogICAgICAgIGlmIEEgaGFzIEZpbml0ZSBhbmQgQiBoYXMgRmluaXRlIHRoZW4KLSAgICAgICAg
ICBzaXplID09IHNpemUkQSAoKSAqIHNpemUkQiAoKQorICAgICAgICAgIHNpemUgPT0gc2l6ZSRB
ICogc2l6ZSRCCisgICAgICAgICAgaW5kZXgobikgPT0gW2luZGV4KCgoKG46OkludGVnZXItMSkg
cXVvIHNpemUkQiApKzEpOjpQb3NpdGl2ZUludGVnZXIpJEEsCisgICAgICAgICAgICAgICAgICAg
ICAgIGluZGV4KCgoKG46OkludGVnZXItMSkgcmVtIHNpemUkQiApKzEpOjpQb3NpdGl2ZUludGVn
ZXIpJEJdCisgICAgICAgICAgcmFuZG9tKCkgPT0gW3JhbmRvbSgpJEEscmFuZG9tKCkkQl0KKyAg
ICAgICAgICBsb29rdXAoeCkgPT0gKChsb29rdXAoeC5hY29tcCkkQTo6SW50ZWdlci0xKSAqIHNp
emUkQjo6SW50ZWdlciArCisgICAgICAgICAgICAgICAgICAgICAgICBsb29rdXAoeC5iY29tcCkk
Qjo6SW50ZWdlcik6OlBvc2l0aXZlSW50ZWdlcgorICAgICAgICAgIGhhc2goeCkgPT0gaGFzaCh4
LmFjb21wKSRBICogc2l6ZSRCOjpTaW5nbGVJbnRlZ2VyICsgaGFzaCh4LmJjb21wKSRCCiAgCiAg
ICAgICAgaWYgQSBoYXMgR3JvdXAgYW5kIEIgaGFzIEdyb3VwIHRoZW4KICAgICAgICAgICBpbnYo
eCkgPT0gW2ludih4LmFjb21wKSxpbnYoeC5iY29tcCldCkluZGV4OiBzcmMvYWxnZWJyYS9NYWtl
ZmlsZS5wYW1waGxldA0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQ0KLS0tIHNyYy9hbGdlYnJhL01ha2VmaWxlLnBhbXBo
bGV0CShyZXZpc2lvbiAxMTIpDQorKysgc3JjL2FsZ2VicmEvTWFrZWZpbGUucGFtcGhsZXQJKHdv
cmtpbmcgY29weSkNCkBAIC0zODQsNyArMzg0LDcgQEANCiAgICAgICAgIEFUUklHIEJBU1RZUEUg
QkdBR0cgQlJBR0cgQlRBR0cgQlRDQVQgQ0xBR0cgQ09NUENBVCBESUFHRyBcCiAgICAgICAgIERJ
RkVYVCBESUZSSU5HIERJT1BTIERJUlBDQVQgRElWUklORyBEUE9MQ0FUIERWQVJDQVQgRUxBR0cg
XAogICAgICAgICBFTEVNRlVOIEVMVEFHRyBFUyBFVUNET00gRVZBTEFCIEZBTVIgRkFYRiBGRElW
Q0FUIEZFVkFMQUIgXAotICAgICAgICBGRkNBVCBGRklFTERDIEZJRUxEIEZJTkFBTEcgRklOUkFM
RyBGTEFHRyBGTElORVhQIEZQQyBGUFMgXAorICAgICAgICBGRkNBVCBGRklFTERDIEZJRUxEIEZJ
TkFBTEcgRklOSVRFIEZJTlJBTEcgRkxBR0cgRkxJTkVYUCBGUEMgRlBTIFwKICAgICAgICAgRlJB
TUFMRyBGUkVUUkNUIEZSTkFBTEcgRlNBR0cgRlMgR0NERE9NIEdSQUxHIEdSTU9EIEdST1VQIFwK
ICAgICAgICAgSE9BR0cgSFlQQ0FUIElFVkFMQUIgSU5TIElOVERPTSBJWEFHRyBLREFHRyBMQUxH
IExJRUNBVCBMTkFHRyBcCiAgICAgICAgIExPRE9DQVQgTE9HSUMgTFNBR0cgTFpTVEFHRyBNQVRD
QVQgTU9EVUxFIE1PTkFEIE1PTkFEV1UgXApJbmRleDogc3JjL2FsZ2VicmEvTWFrZWZpbGUuaW4N
Cj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT0NCi0tLSBzcmMvYWxnZWJyYS9NYWtlZmlsZS5pbgkocmV2aXNpb24gMTEyKQ0K
KysrIHNyYy9hbGdlYnJhL01ha2VmaWxlLmluCSh3b3JraW5nIGNvcHkpDQpAQCAtMjkzLDcgKzI5
Myw3IEBADQogICAgICAgICBBVFJJRyBCQVNUWVBFIEJHQUdHIEJSQUdHIEJUQUdHIEJUQ0FUIENM
QUdHIENPTVBDQVQgRElBR0cgXAogICAgICAgICBESUZFWFQgRElGUklORyBESU9QUyBESVJQQ0FU
IERJVlJJTkcgRFBPTENBVCBEVkFSQ0FUIEVMQUdHIFwKICAgICAgICAgRUxFTUZVTiBFTFRBR0cg
RVMgRVVDRE9NIEVWQUxBQiBGQU1SIEZBWEYgRkRJVkNBVCBGRVZBTEFCIFwKLSAgICAgICAgRkZD
QVQgRkZJRUxEQyBGSUVMRCBGSU5BQUxHIEZJTlJBTEcgRkxBR0cgRkxJTkVYUCBGUEMgRlBTIFwK
KyAgICAgICAgRkZDQVQgRkZJRUxEQyBGSUVMRCBGSU5BQUxHIEZJTklURSBGSU5SQUxHIEZMQUdH
IEZMSU5FWFAgRlBDIEZQUyBcCiAgICAgICAgIEZSQU1BTEcgRlJFVFJDVCBGUk5BQUxHIEZTQUdH
IEZTIEdDRERPTSBHUkFMRyBHUk1PRCBHUk9VUCBcCiAgICAgICAgIEhPQUdHIEhZUENBVCBJRVZB
TEFCIElOUyBJTlRET00gSVhBR0cgS0RBR0cgTEFMRyBMSUVDQVQgTE5BR0cgXAogICAgICAgICBM
T0RPQ0FUIExPR0lDIExTQUdHIExaU1RBR0cgTUFUQ0FUIE1PRFVMRSBNT05BRCBNT05BRFdVIFwK
SW5kZXg6IHNyYy9hbGdlYnJhL3ZlY3Rvci5zcGFkLnBhbXBobGV0DQo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQotLS0g
c3JjL2FsZ2VicmEvdmVjdG9yLnNwYWQucGFtcGhsZXQJKHJldmlzaW9uIDExMikNCisrKyBzcmMv
YWxnZWJyYS92ZWN0b3Iuc3BhZC5wYW1waGxldAkod29ya2luZyBjb3B5KQ0KQEAgLTUsNiArNSwz
NyBAQA0KIFxhdXRob3J7VGhlIEF4aW9tIFRlYW19CiBcbWFrZXRpdGxlCiBcYmVnaW57YWJzdHJh
Y3R9CitWZWN0b3JDYXRlZ29yeSwgRGlyZWN0UHJvZHVjdENhdGVnb3J5LCBWZWN0b3IsIEluZGV4
ZWRWZWN0b3IsIERpcmVjdFByb2R1Y3QKKworXHNwYWR0eXBle1ZlY3RvckNhdGVnb3J5fSByZXBy
ZXNlbnRzIHRoZSB0eXBlIG9mIHZlY3RvciBsaWtlIG9iamVjdHMsCitpLmUuIGZpbml0ZSBzZXF1
ZW5jZXMgaW5kZXhlZCBieSBzb21lIGZpbml0ZSBzZWdtZW50IG9mIHRoZQoraW50ZWdlcnMuIFRo
ZSBvcGVyYXRpb25zIGF2YWlsYWJsZSBvbiB2ZWN0b3JzIGRlcGVuZCBvbiB0aGUgc3RydWN0dXJl
CitvZiB0aGUgdW5kZXJseWluZyBjb21wb25lbnRzLiBNYW55IG9wZXJhdGlvbnMgZnJvbSB0aGUg
Y29tcG9uZW50IGRvbWFpbgorYXJlIGRlZmluZWQgZm9yIHZlY3RvcnMgY29tcG9uZW50d2lzZS4g
SXQgY2FuIGJ5IGFzc3VtZWQgdGhhdCBleHRyYWN0aW9uIG9yCit1cGRhdGluZyBjb21wb25lbnRz
IGNhbiBiZSBkb25lIGluIGNvbnN0YW50IHRpbWUuCisKK1xzcGFkdHlwZXtJbmRleGVkVmVjdG9y
fSByZXByZXNlbnRzIHZlY3RvciBsaWtlIG9iamVjdHMgd2l0aCB2YXJ5aW5nIGxlbmd0aHMKK2Fu
ZCBhIHVzZXItc3BlY2lmaWVkIGluaXRpYWwgaW5kZXguCisKK1xzcGFkdHlwZXtWZWN0b3J9IHJl
cHJlc2VudHMgdmVjdG9yIGxpa2Ugb2JqZWN0cyB3aXRoIHZhcnlpbmcgbGVuZ3RocworYW5kIGlu
ZGV4ZWQgYnkgYSBmaW5pdGUgc2VnbWVudCBvZiBpbnRlZ2VycyBzdGFydGluZyBhdCAxLgorCitc
c3BhZHR5cGV7RGlyZWN0UHJvZHVjdENhdGVnb3J5fSByZXByZXNlbnRzIGEgZmluaXRlIGNhcnRl
c2lhbiBwcm9kdWN0IG9mCithIGdpdmVuIHR5cGUuIE1hbnkgY2F0ZWdvcmljYWwgcHJvcGVydGll
cyBhcmUgcHJlc2VydmVkIHVuZGVyIHRoaXMgY29uc3RydWN0aW9uLgorCitcc3BhZHR5cGV7RGly
ZWN0UHJvZHVjdH0gcmVwcmVzZW50cyB0aGUgZmluaXRlIGRpcmVjdCBvciBjYXJ0ZXNpYW4gcHJv
ZHVjdAorb2YgYW4gdW5kZXJseWluZyBjb21wb25lbnQgdHlwZS4gVGhpcyBjb250cmFzdHMgd2l0
aCBzaW1wbGUgdmVjdG9ycyBpbiB0aGF0Cit0aGUgbWVtYmVycyBjYW4gYmUgdmlld2VkIGFzIGhh
dmluZyBjb25zdGFudCBsZW5ndGguIFRodXMgbWFueQorY2F0ZWdvcmljYWwgcHJvcGVydGllcyBj
YW4gYnkgbGlmdGVkIGZyb20gdGhlIHVuZGVybHlpbmcgY29tcG9uZW50IHR5cGUuCitDb21wb25l
bnQgZXh0cmFjdGlvbiBvcGVyYXRpb25zIGFyZSBwcm92aWRlZCBidXQgbm8gdXBkYXRpbmcgb3Bl
cmF0aW9ucy4KK1RodXMgbmV3IGRpcmVjdCBwcm9kdWN0IGVsZW1lbnRzIGNhbiBlaXRoZXIgYmUg
Y3JlYXRlZCBieSBjb252ZXJ0aW5nCit2ZWN0b3IgZWxlbWVudHMgdXNpbmcgdGhlIFxzcGFkZnVu
e2RpcmVjdFByb2R1Y3R9IGZ1bmN0aW9uCitvciBieSB0YWtpbmcgYXBwcm9wcmlhdGUgbGluZWFy
IGNvbWJpbmF0aW9ucyBvZiBiYXNpcyB2ZWN0b3JzIHByb3ZpZGVkCitieSB0aGUgXHNwYWR7dW5p
dFZlY3Rvcn0gb3BlcmF0aW9uLgorCitJZiB0aGUgdW5kZXJseWluZyBjb21wb25lbnQgdHlwZSBp
cyBGaW5pdGUgdGhlbiB0aGUgRGlyZWN0UHJvZHVjdAoraXRzZWxmIGlzIEZpbml0ZSBhbmQgbWF5
IGJlIGVudW1lcmF0ZWQgdmlhIHNpemUoKSBhbmQgaW5kZXgoKS4gSW4gdGhpcworZW51bWVyYXRp
b24gdGhlIGluZGV4IG9mIHRoZSBsZWZ0bW9zdCAobnRoKWNvbXBvbmVudCB2YXJpZXMgbW9zdCBx
dWlja2x5LgogXGVuZHthYnN0cmFjdH0KIFxlamVjdAogXHRhYmxlb2Zjb250ZW50cwpAQCAtMjk1
LDggKzMyNiw2IEBADQogICAgICAgICAgICAgICBjb2x1bW4ocmgsIG1pbkNvbEluZGV4IHJoKQog
ICAgICAgICAgICAgW3JlZHVjZWRTeXN0ZW0obSlATWF0cml4KFIpLCB2aF0KICAKLSAgICAgIGlm
IFIgaGFzIEZpbml0ZSB0aGVuIHNpemUgPT0gc2l6ZSRSICoqIGRpbQotIAogICAgICAgaWYgUiBo
YXMgRmllbGQgdGhlbgogICAgICAgICB4IC8gYiAgICAgICA9PSB4ICogaW52IGIKICAgICAgICAg
ZGltZW5zaW9uKCkgPT0gZGltOjpDYXJkaW5hbE51bWJlcgpAQCAtMzU3LDggKzM4NiwzMSBAQA0K
ICAgICAgICAgcmV0cmFjdElmQ2FuKHo6JSk6VW5pb24oUiwgImZhaWxlZCIpID09CiAgICAgICAg
ICAgc2FtZT8geiA9PiB6KG1pbkluZGV4IHopCiAgICAgICAgICAgImZhaWxlZCIKKworICAgICAg
aWYgUiBoYXMgRmluaXRlIHRoZW4KKyAgICAgICAgICBzaXplID09IHNpemUkUiAqKiBkaW0KKyAg
ICAgICAgICBpbmRleChuOlBvc2l0aXZlSW50ZWdlcik6JSA9PQorICAgICAgICAgICAgTjpJbnRl
Z2VyIDo9IHNpemUkUgorICAgICAgICAgICAgcDpJbnRlZ2VyIDo9IG4tMQorICAgICAgICAgICAg
TDpMaXN0IFIgOj0gW2luZGV4KCgocCByZW0gTikgKyAxKTo6UG9zaXRpdmVJbnRlZ2VyKSRSXQor
ICAgICAgICAgICAgZm9yIGkgaW4gMi4uZGltIHJlcGVhdAorICAgICAgICAgICAgICBwIDo9IHAg
cXVvIE4KKyAgICAgICAgICAgICAgTDo9Y29ucyhpbmRleCgoKHAgcmVtIE4pICsgMSk6OlBvc2l0
aXZlSW50ZWdlcikkUiwgTCkKKyAgICAgICAgICAgIHZlY3RvcihMKQorICAgICAgICAgIHJhbmRv
bSgpID09IFtyYW5kb20oKSRSIGZvciBpIGluIDEuLmRpbV0KKyAgICAgICAgICBsb29rdXAoeCkg
PT0KKyAgICAgICAgICAgIE46SW50ZWdlciA6PSBzaXplJFIKKyAgICAgICAgICAgIEw6SW50ZWdl
ciA6PSBsb29rdXAoeC4xKS0xCisgICAgICAgICAgICBmb3IgaSBpbiAyLi5kaW0gcmVwZWF0Cisg
ICAgICAgICAgICAgIEw6PUwqTitsb29rdXAoeC5pKS0xCisgICAgICAgICAgICAoTCsxKTo6UG9z
aXRpdmVJbnRlZ2VyCisgICAgICAgICAgaGFzaCh4KSA9PQorICAgICAgICAgICAgTiA6PSBzaXpl
JFI6OlNpbmdsZUludGVnZXIKKyAgICAgICAgICAgIEwgOj0gaGFzaCh4LjEpCisgICAgICAgICAg
ICBmb3IgaSBpbiAyLi5kaW0gcmVwZWF0CisgICAgICAgICAgICAgIEw6PUwqTitoYXNoKHguaSkK
KyAgICAgICAgICAgIEwgCiAgCi0gCiAgICAgICBpZiBSIGhhcyBBYmVsaWFuU2VtaUdyb3VwIHRo
ZW4KICAgICAgICAgdTolICsgdjolID09IG1hcChfKyAsIHUsIHYpJFJlcAogIAo=
------=_Part_6959_11238674.1192677567907--



From MAILER-DAEMON Thu Oct 18 02:39:13 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IiP2G-00082T-TU
	for mharc-axiom-math@gnu.org; Thu, 18 Oct 2007 02:39:13 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IiP2F-000813-93
	for axiom-math@nongnu.org; Thu, 18 Oct 2007 02:39:11 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IiP2E-000804-9F
	for axiom-math@nongnu.org; Thu, 18 Oct 2007 02:39:10 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IiP2E-0007zr-5S
	for axiom-math@nongnu.org; Thu, 18 Oct 2007 02:39:10 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1IiP2D-00066m-DE
	for axiom-math@nongnu.org; Thu, 18 Oct 2007 02:39:09 -0400
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.68)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1IiP2B-0003eT-9G; Thu, 18 Oct 2007 08:39:07 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.68)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1IiP2B-0008Q3-84; Thu, 18 Oct 2007 08:39:07 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: "Bill Page" <bill.page@newsynthesis.org>
Subject: Re: [Axiom-math] missing exports in Finite DirectProduct and Product
References: <fbcd16d40710172019h60520e59r2efc72558fcfe80@mail.gmail.com>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 18 Oct 2007 08:39:06 +0200
In-Reply-To: <fbcd16d40710172019h60520e59r2efc72558fcfe80@mail.gmail.com>
Message-ID: <9q8x619bat.fsf@aquin.mat.univie.ac.at>
Lines: 32
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: by monty-python.gnu.org: Linux 2.6, seldom 2.4 (older, 4)
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sf.net
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 18 Oct 2007 06:39:11 -0000

"Bill Page" <bill.page@newsynthesis.org> writes:

> I would be interested in your opinions about this approach to
> providing Cartesian products for the Axiom library.

I think you did something quite interesting.  Unfortunately, I'm very busy
right now, but you might be interested in digging up a proposal of mine I made
a year ago or so, concerning StepThrough.  It was rejected back then (for good
theoretic reasons), but I still have the feeling that the behaviour I
critisized should be changed.  The following also goes into that direction:

> I think it is interesting to see how domains in the category Finite able to
> participate like "sets" in the language. Of course it is also possible to
> represent countably infinite sets in Axiom via the Stream domain. This
> suggests the that the category constructor StepThrough could also usefully be
> provided with an export that expands to such Stream. Perhaps the underlying
> Spad language should support this sort of expansion of Finite and countably
> infinite domains as a standard form of iterator in the [ ... for i in ... ]
> construction?

> Of course Aldor already has implemented some basic abstractions of this kind
> but it is not entirely obvious to me how best to extend Axiom's library and
> still stay within the limitations of the current Spad language.

Really, what is missing are generators.  I do not think that adding them to
SPAD in a naive manner would be too difficult, but I never tried.


Many thanks for your effort,

Martin





From MAILER-DAEMON Thu Oct 18 09:30:19 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IiVS6-0002sC-PQ
	for mharc-axiom-math@gnu.org; Thu, 18 Oct 2007 09:30:18 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IiVS4-0002ra-Vr
	for axiom-math@nongnu.org; Thu, 18 Oct 2007 09:30:17 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IiVS4-0002rH-36
	for axiom-math@nongnu.org; Thu, 18 Oct 2007 09:30:16 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IiVS3-0002rD-Na
	for axiom-math@nongnu.org; Thu, 18 Oct 2007 09:30:15 -0400
Received: from smtp-104-thursday.noc.nerim.net ([62.4.17.104]
	helo=mallaury.nerim.net)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <fmaltey@nerim.fr>) id 1IiVRz-0000yZ-UU
	for axiom-math@nongnu.org; Thu, 18 Oct 2007 09:30:13 -0400
Received: from localhost (fmaltey.net0.nerim.net [213.41.170.4])
	by mallaury.nerim.net (Postfix) with ESMTP id 55D064F489;
	Thu, 18 Oct 2007 15:30:00 +0200 (CEST)
Received: from fmy by localhost with local (Exim 4.63)
	(envelope-from <fmaltey@nerim.fr>)
	id 1IiVRu-0001Ty-Ss; Thu, 18 Oct 2007 15:30:07 +0200
To: "Bill Page" <bill.page@newsynthesis.org>
References: <fbcd16d40710172019h60520e59r2efc72558fcfe80@mail.gmail.com>
From: Francois Maltey <fmaltey@nerim.fr>
Date: 18 Oct 2007 15:30:06 +0200
In-Reply-To: <fbcd16d40710172019h60520e59r2efc72558fcfe80@mail.gmail.com>
Message-ID: <87przcy2ht.fsf@nerim.fr>
Lines: 101
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: by monty-python.gnu.org: FreeBSD 4.6-4.9
Cc: axiom-math@nongnu.org, open-axiom-devel@lists.sf.net
Subject: [Axiom-math] Re: [open-axiom-devel] missing exports in Finite
	DirectProduct and Product
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 18 Oct 2007 13:30:17 -0000

Dear Bill, and others.

About Product (i.e. cartesian product) and DirectProduct over finite domains.

You add 'index', 'lookup', and 'hash'.
> The operation 'size' is already available as a default.

> Having 'index' available for products allows one to iterate over the
> elements of a cross product like this:
> 
>   X:=Product(OVAR [a,b],IntegerMod(3))
>   [index(i::PI)$X for i in 1..size()$X]

Right, axiom searchs for the congruent integer with index and lookup.

But is it possible to have an intrinsic loop than an integer loop ?

Dom := OVAR [aa,bb,cc,dd,ee,ff,gg,hh,ii,jj,kk,ll]
[i for i in dd..ee]

> Writing this made me think that it was also desirable the domains in
> Finite also enumerate there members in a more functional manner so
> because FriCAS now allows us to easily make fairly deep changes in the
> algebra code, as an exercise I decided to define the following new
> export of Finite
> 
>   expand: () -> List %
>   expand() == [index(i::PositiveInteger) for i in 1..size()]

A good primitive. The expand name looks as expand (100..110).

For finite domains you enumerate all the cases, not a subset of cases.
I don't find any expand functions in others finite domain.
Others systems uses expand for expanding calculus only.

So I prefer an enumerate function to an expand function, 
and add an enumerate in all the finite structure  
enumerate@OVAR[aa,bb,cc,dd,ee,ff,gg,hh,ii,jj,kk,ll] responds
[aa,bb,cc,dd,ee,ff,gg,hh,ii,jj,kk,ll]

So I see 2 functions :

    enumerate without arguments for all the cases.
and expand with a interval for subset.
Is it possible to get this after an expand (5..7, aa..cc) ?

[[5,aa],[6,aa],[7,aa],[5,bb],[6,bb],[7,bb],[5,cc],[6,cc],[7,cc]]

I don't see how to type this expand. 

> So with this patch one can write for example:
> 
> (1) -> map(x+->(selectsecond(x)::Symbol)^(selectfirst(x)::Integer), _
>          expand()$Product(ZMOD(3),OVAR [a,b]))
>               2  2
>    (1)  [a,b,a ,b ,1,1]

It's a progress to allow this map, but it isn't too serviceable.

Why not a 
map (x +-> x.1::Symbol^x.2::Integer 
                     for x in enumerate()$Product(ZMOD(3),OVAR [a,b]))
map (x +-> x.1::Symbol^x.2::Integer 
                     for x in expand(1..2,a..b)$Product(ZMOD(3),OVAR [a,b]))

So axiom has record and cartesian products, 
but the must use of makeprod(,)@... or news(,)@.... isn't friendly.

Mathematics use so often cartesian product it's penalizing to
have to declare a cartesian product with new or makeprod.
Other languages allow lists for this uses because they aren't typed.

A new constructor as [|...,...|] should be a great progress in the
interface. By example caml uses [1;2;3] for lists and [|1;2;3|] for array.

> I would be interested in your opinions about this approach to
> providing Cartesian products for the Axiom library.

A really good idea for finite domains.
 
> I think it is interesting to see how domains in the category Finite
> able to participate like "sets" in the language. 

What are the commom functions in this cases ?

index, lookup, hash, are they present in all finite domains ?

Enumerate in a list all the elements is a good idea.
It may be interesting to expand? a sub-interval.

For cartesian product in general a short constructor will be a 
serious avantage. output [|n, (X-1)^n|] will work.

> Of course Aldor already has implemented some basic abstractions of
> this kind but it is not entirely obvious to me how best to extend
> Axiom's library and still stay within the limitations of the current
> Spad language.

Will axiom interpreter include aldor or not in the future ?

F.



From MAILER-DAEMON Fri Oct 19 01:19:54 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IikH3-0003Zc-Pu
	for mharc-axiom-math@gnu.org; Fri, 19 Oct 2007 01:19:53 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IikH2-0003Z1-BL
	for axiom-math@nongnu.org; Fri, 19 Oct 2007 01:19:52 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IikH1-0003Yp-1l
	for axiom-math@nongnu.org; Fri, 19 Oct 2007 01:19:51 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IikH0-0003Ym-Qa
	for axiom-math@nongnu.org; Fri, 19 Oct 2007 01:19:50 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39]
	helo=smtpauthhost.risc.uni-linz.ac.at)
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1IikH0-0007sK-Cd
	for axiom-math@nongnu.org; Fri, 19 Oct 2007 01:19:50 -0400
Received: from [193.170.38.119] (hemmecke@woodpecker.risc.uni-linz.ac.at
	[193.170.38.119]) (authenticated bits=0)
	by smtpauthhost.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with
	ESMTP id l9J5JZTo020426
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Fri, 19 Oct 2007 07:19:38 +0200
Message-ID: <471786D0.1090004@hemmecke.de>
Date: Thu, 18 Oct 2007 18:16:16 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.6 (X11/20070728)
MIME-Version: 1.0
To: Francois Maltey <fmaltey@nerim.fr>
References: <fbcd16d40710172019h60520e59r2efc72558fcfe80@mail.gmail.com>
	<87przcy2ht.fsf@nerim.fr>
In-Reply-To: <87przcy2ht.fsf@nerim.fr>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: by monty-python.gnu.org: Linux 2.4-2.6
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [open-axiom-devel] missing exports in Finite
 DirectProduct and Product
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Fri, 19 Oct 2007 05:19:52 -0000

Hi Francois,

> But is it possible to have an intrinsic loop than an integer loop ?
> 
> Dom := OVAR [aa,bb,cc,dd,ee,ff,gg,hh,ii,jj,kk,ll]
> [i for i in dd..ee]

What a question...

Your problem is only because you are struggeling with Axiom.
In Aldor there is only *one* "for" construction and that looks like

   for x in g

where g is of type Generator(Something).
Don't be misled if you see something like

   for x in 1..10

in Aldor. If the object after "in" is not a Generator(?) then the 
compiler throws in the function "generator". So the above is actually 
the same as

   for x in generator(1..10)

Voila, again a Generator(Integer). The question now is whether there is 
a function

   generator: Segment(Integer) -> Generator(Integer)

Of course there is. (OK, in LibAldor, it is actually IntegerSegment.)

So what you see here is that you would have to implement something of 
that provides a function

   ..

Right. "Two dots" is a library *function* and not a built-in thing.
This now equally applies to SPAD and the Axiom library. You find the 
definition of ".." in seg.spad.pamphlet.

Well, maybe that doesn't help you too much.

Ralf




From MAILER-DAEMON Mon Oct 22 10:53:17 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ijyeb-0007gN-JK
	for mharc-axiom-math@gnu.org; Mon, 22 Oct 2007 10:53:17 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ijyea-0007dS-7I
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 10:53:16 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IjyeZ-0007au-8Z
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 10:53:15 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IjyeZ-0007aZ-4P
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 10:53:15 -0400
Received: from wr-out-0506.google.com ([64.233.184.233])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1IjyeX-0004b0-Vx
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 10:53:14 -0400
Received: by wr-out-0506.google.com with SMTP id c38so1793301wra
	for <axiom-math@nongnu.org>; Mon, 22 Oct 2007 07:53:11 -0700 (PDT)
Received: by 10.86.95.20 with SMTP id s20mr3610602fgb.1193064790539;
	Mon, 22 Oct 2007 07:53:10 -0700 (PDT)
Received: by 10.86.77.14 with HTTP; Mon, 22 Oct 2007 07:53:10 -0700 (PDT)
Message-ID: <fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
Date: Mon, 22 Oct 2007 10:53:10 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: "Martin Rubey" <martin.rubey@univie.ac.at>
In-Reply-To: <9qfy0374yd.fsf@aquin.mat.univie.ac.at>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<9qzlyca6yz.fsf@aquin.mat.univie.ac.at> <87myucgwhl.fsf_-_@nerim.fr>
	<9qk5pfr6nt.fsf@aquin.mat.univie.ac.at> <871wbnlco2.fsf@nerim.fr>
	<9qejfn5vb0.fsf@aquin.mat.univie.ac.at> <87fy03jt67.fsf_-_@nerim.fr>
	<9qfy0374yd.fsf@aquin.mat.univie.ac.at>
X-detected-kernel: by monty-python.gnu.org: Linux 2.4-2.6 (Google crawlbot)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org,
	fricas-devel@googlegroups.com
Subject: [Axiom-math] Re: [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 22 Oct 2007 14:53:16 -0000

On 22 Oct 2007 13:40:26 +0200, Martin Rubey wrote:
>
> Francois Maltey writes:
>
> > >   [matrix [[a,b,15-a-b],[c,d,15-c-d]] _
> > >    for (a,b,c,d) in CartesianProduct([1..9, 1..9, 1..9, 1..9])]
>
>
> > But what is the signature of this function CartesianProduct ?
>
> Sorry, I didn't bother to think about a good way to specify the Cartesian
> product itself, but I think what Bill showed was quite good.
>

I would like to consider what is?

  1..9

Right now in Axiom this is evaluated as a member of 'Segment
PositiveInteger', i.e. the domain of all such segments. But in general
I think I would prefer if '1..9' actually denoted a domain - a subset
of the Positive Integers - with members 1, 2, 3 ... etc.

I am having a little trouble actually articulating the difference
between these two. It seems somewhat artificially imposed by Axiom's
type hierarchy that does not easily allow domains to be members of
domains. (Domains belong to categories, not other domains.). We want
to be able to write:

  DirectProduct(4,1..9)

but this does not work because '1..9' is not a type - it is an object
of 'Segment PositiveInteger'.

Another example of this in Axiom that *does* work right now is:

  DirectProduct(4,OrderedVariableList [a,b,c])

OrderedVariableList is a domain constructor that takes something of
List Symbol as a parameter. In order to introduce '1..9' as a domain
it would be possible to introduce new domain constructor like

   )abbrev domain INTS IntegerSegment
   IntegerSegment(S:Segment Integer): with Finite ...

that takes something of 'Segment Integer' as a parameter. Do we want
'IntegerSegment' to also be a subdomain of Integer?. In any case,
then we could write:

  DirectProduct(4,IntegerSegment 1..9)

But somehow the distinction between '1..9' and 'IntegerSegment 1..9'
and '[a,b,c]' and 'OrderedVariableList [a,b,c]' seems artificial.

It occurs to me that one might like at least the Axiom interpreter to
perform some kind of automatic coercion from 'x' in a domain like
'Segment Integer' into the *category* consisting of domains
'IntegerSegment(x)'.

I think Gaby recently referred to this preference for things like
'1..9' and [a,b,c] to also
represent domains as a more "categorical" approach.

What do other people think?

Regards,
Bill Page.



From MAILER-DAEMON Mon Oct 22 11:06:57 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ijyrp-0003kc-L8
	for mharc-axiom-math@gnu.org; Mon, 22 Oct 2007 11:06:57 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ijyrn-0003jB-0S
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 11:06:55 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ijyri-0003gq-HM
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 11:06:54 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ijyri-0003gN-06
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 11:06:50 -0400
Received: from smtp.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Ijyrg-00019h-GU
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 11:06:49 -0400
Received: from soliton.cs.tamu.edu (vpn-42.cs.tamu.edu [128.194.150.42])
	by postal.cs.tamu.edu (Postfix) with ESMTP id 5F99746DE06;
	Mon, 22 Oct 2007 10:06:40 -0500 (CDT)
Received: by soliton.cs.tamu.edu (Postfix, from userid 1000)
	id BC35C1AB06; Mon, 22 Oct 2007 10:16:33 -0500 (CDT)
Sender: gdr@cs.tamu.edu
To: "Bill Page" <bill.page@newsynthesis.org>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<9qzlyca6yz.fsf@aquin.mat.univie.ac.at> <87myucgwhl.fsf_-_@nerim.fr>
	<9qk5pfr6nt.fsf@aquin.mat.univie.ac.at> <871wbnlco2.fsf@nerim.fr>
	<9qejfn5vb0.fsf@aquin.mat.univie.ac.at> <87fy03jt67.fsf_-_@nerim.fr>
	<9qfy0374yd.fsf@aquin.mat.univie.ac.at>
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
In-Reply-To: <fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
Organization: Texas A&M University, Department of Computer Science
Date: 22 Oct 2007 10:16:33 -0500
Message-ID: <87tzojxjqm.fsf@soliton.cs.tamu.edu>
Lines: 87
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: axiom-math@nongnu.org, open-axiom-devel@lists.sourceforge.net,
	fricas-devel@googlegroups.com
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re: iterators
	and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 22 Oct 2007 15:06:55 -0000

"Bill Page" <bill.page@newsynthesis.org> writes:

| On 22 Oct 2007 13:40:26 +0200, Martin Rubey wrote:
| >
| > Francois Maltey writes:
| >
| > > >   [matrix [[a,b,15-a-b],[c,d,15-c-d]] _
| > > >    for (a,b,c,d) in CartesianProduct([1..9, 1..9, 1..9, 1..9])]
| >
| >
| > > But what is the signature of this function CartesianProduct ?
| >
| > Sorry, I didn't bother to think about a good way to specify the Cartesian
| > product itself, but I think what Bill showed was quite good.
| >
| 
| I would like to consider what is?
| 
|   1..9
| 
| Right now in Axiom this is evaluated as a member of 'Segment
| PositiveInteger', i.e. the domain of all such segments. But in general
| I think I would prefer if '1..9' actually denoted a domain - a subset
| of the Positive Integers - with members 1, 2, 3 ... etc.

Couold you elaborate on why `1..9' should denote a domain, and what
the benefits would be?

| I am having a little trouble actually articulating the difference
| between these two. It seems somewhat artificially imposed by Axiom's
| type hierarchy that does not easily allow domains to be members of
| domains. (Domains belong to categories, not other domains.). 

In fact, that is not so clear. If you ask the interpreter what is the
type of Domain, it would answer 'SubDomain Domain'.  And don't go query
the type of SubDomain Domain :-/

| We want to be able to write:
| 
|   DirectProduct(4,1..9)
| 
| but this does not work because '1..9' is not a type - it is an object
| of 'Segment PositiveInteger'.

If it worked, what would you have liked the mathematical meaning to
be, and why?

[I'm not being facetious, I'm trying to understand your perspectives]

| Another example of this in Axiom that *does* work right now is:
| 
|   DirectProduct(4,OrderedVariableList [a,b,c])
| 
| OrderedVariableList is a domain constructor that takes something of
| List Symbol as a parameter. In order to introduce '1..9' as a domain
| it would be possible to introduce new domain constructor like
| 
|    )abbrev domain INTS IntegerSegment
|    IntegerSegment(S:Segment Integer): with Finite ...
| 
| that takes something of 'Segment Integer' as a parameter. Do we want
| 'IntegerSegment' to also be a subdomain of Integer?. In any case,
| then we could write:

I do not see obvious reasons why I would want IntegerSegment to be a
subdomain of Integer.

|   DirectProduct(4,IntegerSegment 1..9)
| 
| But somehow the distinction between '1..9' and 'IntegerSegment 1..9'
| and '[a,b,c]' and 'OrderedVariableList [a,b,c]' seems artificial.
| 
| It occurs to me that one might like at least the Axiom interpreter to
| perform some kind of automatic coercion from 'x' in a domain like
| 'Segment Integer' into the *category* consisting of domains
| 'IntegerSegment(x)'.
| 
| I think Gaby recently referred to this preference for things like
| '1..9' and [a,b,c] to also
| represent domains as a more "categorical" approach.

In general, I would like OpenAxiom to take a more categorial approach
to almost everything -- in particular `cross'.
However, I'm interested in some of you ideas here.  Please, could you
elaborate, and if possible, give some use cases?

-- Gaby



From MAILER-DAEMON Mon Oct 22 11:19:52 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ijz4K-0002E5-Jv
	for mharc-axiom-math@gnu.org; Mon, 22 Oct 2007 11:19:52 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ijz4I-0002D9-Rh
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 11:19:50 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ijz4H-0002Bn-1H
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 11:19:50 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ijz4G-0002Bj-Pq
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 11:19:48 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1Ijz4G-0006HQ-3W
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 11:19:48 -0400
Received: from joan.univie.ac.at ([131.130.3.110] helo=joan.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.68)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1Ijz47-0005h2-Ck; Mon, 22 Oct 2007 17:19:39 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by joan.univie.ac.at with esmtp (Exim 4.68)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1Ijz47-0000jZ-Ba; Mon, 22 Oct 2007 17:19:39 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: "Bill Page" <bill.page@newsynthesis.org>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<9qzlyca6yz.fsf@aquin.mat.univie.ac.at> <87myucgwhl.fsf_-_@nerim.fr>
	<9qk5pfr6nt.fsf@aquin.mat.univie.ac.at> <871wbnlco2.fsf@nerim.fr>
	<9qejfn5vb0.fsf@aquin.mat.univie.ac.at> <87fy03jt67.fsf_-_@nerim.fr>
	<9qfy0374yd.fsf@aquin.mat.univie.ac.at>
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 22 Oct 2007 17:19:35 +0200
In-Reply-To: <fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
Message-ID: <9qk5pfuqgo.fsf@aquin.mat.univie.ac.at>
Lines: 82
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: by monty-python.gnu.org: Linux 2.6, seldom 2.4 (older, 4)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org,
	fricas-devel@googlegroups.com
Subject: [Axiom-math] Re: [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 22 Oct 2007 15:19:51 -0000

"Bill Page" <bill.page@newsynthesis.org> writes:

> It seems somewhat artificially imposed by Axiom's type hierarchy that does
> not easily allow domains to be members of domains. (Domains belong to
> categories, not other domains.).

Aldor does not have this problem at all.  As far as I remember, even axiom's
interpreter understands such constructions, if they are implemented in Aldor.

I.e., in Aldor, you can have

define CombinatorialSpecies(L: LabelType): Category == with {
        <<exports: CombinatorialSpecies>>
    default {
        <<defaults: CombinatorialSpecies>>
    }
}

CS == (L: LabelType) -> CombinatorialSpecies L;
CombinatorialSpeciesAlgebra: with {
        1: %;
        X: %;
        +: (%, %) -> %;
        coerce: CS -> %;
        coerce: % -> CS;
} == add {
        Rep == CS;
        coerce(cs: CS): % == per cs;
        coerce(x: %): CS == rep x;
        1: % == per EmptySetSpecies;
        X: % == per SingletonSpecies;
        (x: %) + (y: %): % == per Plus(rep x, rep y);
}

> In order to introduce '1..9' as a domain it would be possible to introduce
> new domain constructor like
> 
>    )abbrev domain INTS IntegerSegment
>    IntegerSegment(S:Segment Integer): with Finite ...
> 
> that takes something of 'Segment Integer' as a parameter. Do we want
> 'IntegerSegment' to also be a subdomain of Integer?. In any case, then we
> could write:
> 
>   DirectProduct(4,IntegerSegment 1..9)
> 
> But somehow the distinction between '1..9' and 'IntegerSegment 1..9'
> and '[a,b,c]' and 'OrderedVariableList [a,b,c]' seems artificial.

I think it's OK.

> It occurs to me that one might like at least the Axiom interpreter to perform
> some kind of automatic coercion from 'x' in a domain like 'Segment Integer'
> into the *category* consisting of domains 'IntegerSegment(x)'.

You could do this with dependent types:

coerce: (s: Segment Integer) -> IntegerSegment s;

This problem pops up in many many many places: look at the series operations:

    series(sin x, x=0)

we really would like to have something like (I substitute values for parameters
of the package for clarity)

    series: (EXPR INT, eq: EQ EXPR INT) -> UPXS(EXPR INT, lhs eq, rhs eq)

instead we have 

    series: (EXPR INT, eq: EQ EXPR INT) -> Any

I'd also like to have a retraction from Matrix to RectangularMatrix:

   retractIfCan: (m: Matrix INT) -> Union("failed", SquareMatrix(INT, nrows m)

instead, this retraction seems to be built into the interpreter, and cannot be
used in SPAD code.



Martin




From MAILER-DAEMON Mon Oct 22 12:03:56 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ijzkx-0000L2-TP
	for mharc-axiom-math@gnu.org; Mon, 22 Oct 2007 12:03:55 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ijzkw-0000JQ-Kf
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 12:03:54 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ijzkv-0000HP-IN
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 12:03:54 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ijzkv-0000H6-EF
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 12:03:53 -0400
Received: from ik-out-1112.google.com ([66.249.90.180])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1Ijzku-0007kr-Pi
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 12:03:53 -0400
Received: by ik-out-1112.google.com with SMTP id c29so586025ika
	for <axiom-math@nongnu.org>; Mon, 22 Oct 2007 09:03:51 -0700 (PDT)
Received: by 10.86.91.12 with SMTP id o12mr3266963fgb.1193069031031;
	Mon, 22 Oct 2007 09:03:51 -0700 (PDT)
Received: by 10.86.77.14 with HTTP; Mon, 22 Oct 2007 09:03:50 -0700 (PDT)
Message-ID: <fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
Date: Mon, 22 Oct 2007 12:03:50 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: "Gabriel Dos Reis" <gdr@cs.tamu.edu>
In-Reply-To: <87tzojxjqm.fsf@soliton.cs.tamu.edu>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<9qzlyca6yz.fsf@aquin.mat.univie.ac.at> <87myucgwhl.fsf_-_@nerim.fr>
	<9qk5pfr6nt.fsf@aquin.mat.univie.ac.at> <871wbnlco2.fsf@nerim.fr>
	<9qejfn5vb0.fsf@aquin.mat.univie.ac.at> <87fy03jt67.fsf_-_@nerim.fr>
	<9qfy0374yd.fsf@aquin.mat.univie.ac.at>
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: axiom-math@nongnu.org, open-axiom-devel@lists.sourceforge.net,
	fricas-devel@googlegroups.com
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re: iterators
	and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 22 Oct 2007 16:03:54 -0000

On 22 Oct 2007 10:16:33 -0500, wrote:
> Bill Page writes:
> ...
> |
> | I would like to consider what is?
> |
> |   1..9
> |
> | Right now in Axiom this is evaluated as a member of 'Segment
> | PositiveInteger', i.e. the domain of all such segments. But in general
> | I think I would prefer if '1..9' actually denoted a domain - a subset
> | of the Positive Integers - with members 1, 2, 3 ... etc.
>
> Couold you elaborate on why `1..9' should denote a domain, and what
> the benefits would be?
>

Well, for one I could then write the cross-product of such domains:

  Product(1..9,1..4)

and iterate over them like this

  for i in expand()$Product(1..9,1..4)

where 'expand' (or whatever we decide we want to call this operator
from the category Finite). Or even better if the generator 'expand'
also is implicit for any domain in Finite so that we could write:

  for i in Prooduct(1..9,1..4)

Of course we could also simply define some new 'CrossProduct' domain
constructor that takes as argument something of type 'Segment Integer'
but this seems considerably less general.

> | I am having a little trouble actually articulating the difference
> | between these two. It seems somewhat artificially imposed by Axiom's
> | type hierarchy that does not easily allow domains to be members of
> | domains. (Domains belong to categories, not other domains.).
>
> In fact, that is not so clear. If you ask the interpreter what is the
> type of Domain, it would answer 'SubDomain Domain'.  And don't go query
> the type of SubDomain Domain :-/
>

Yes. As I have said several times before (e.g. in an exchange a few
years with Peter Broadbery), I think this upper part of the Axiom
domain/category type system is a little messed up. I believe Aldor
presents one possible solution to these problems but there may be
other solutions.

> | We want to be able to write:
> |
> |   DirectProduct(4,1..9)
> |
> | but this does not work because '1..9' is not a type - it is an object
> | of 'Segment PositiveInteger'.
>
> If it worked, what would you have liked the mathematical meaning to
> be, and why?
>

I would like the result to be a finite domain. More interesting
perhaps is if I wrote

  DirectProduct(4, PrimeField 7)

and then the result domain inherits a lot of structure from such fields.

> [I'm not being facetious, I'm trying to understand your perspectives]
>

Good! :-)

> | Another example of this in Axiom that *does* work right now is:
> |
> |   DirectProduct(4,OrderedVariableList [a,b,c])
> |
> | OrderedVariableList is a domain constructor that takes something of
> | List Symbol as a parameter. In order to introduce '1..9' as a domain
> | it would be possible to introduce new domain constructor like
> |
> |    )abbrev domain INTS IntegerSegment
> |    IntegerSegment(S:Segment Integer): with Finite ...
> |
> | that takes something of 'Segment Integer' as a parameter. Do we want
> | 'IntegerSegment' to also be a subdomain of Integer?. In any case,
> | then we could write:
>
> I do not see obvious reasons why I would want IntegerSegment to be a
> subdomain of Integer.
>

Well for example, maybe I would want to write:

  x:IntegerSegment 1..9
  y:=x + 1

where the type of 'y' might be Union(IntegerSegment 1..9,"failed").

> |   DirectProduct(4,IntegerSegment 1..9)
> |
> | But somehow the distinction between '1..9' and 'IntegerSegment 1..9'
> | and '[a,b,c]' and 'OrderedVariableList [a,b,c]' seems artificial.
> |
> | It occurs to me that one might like at least the Axiom interpreter to
> | perform some kind of automatic coercion from 'x' in a domain like
> | 'Segment Integer' into the *category* consisting of domains
> | 'IntegerSegment(x)'.
> |
> | I think Gaby recently referred to this preference for things like
> | '1..9' and [a,b,c] to also
> | represent domains as a more "categorical" approach.
>
> In general, I would like OpenAxiom to take a more categorial approach
> to almost everything -- in particular `cross'.

Great. One should probably try to be more specific here about what one
means by a "categorical approach". You could mean for example trying
to provide mathematical semantics based on category theory. I have
discussed before how one really should define 'cross' as a categorial
limit in terms of the existence of the unique (universal) operation:

  product: (A:Type, A->X,A->Y) -> (A->%)

See: http://wiki.axiom-developer.org/SandBoxLimitsAndColimits

> However, I'm interested in some of you ideas here.  Please, could you
> elaborate, and if possible, give some use cases?
>

Do you mean use cases for operations like 'product' above or use cases
of the domain 'Product' or use cases of the domain 'IntegerSegment'?
:-)

Regards,
Bill Page.



From MAILER-DAEMON Mon Oct 22 12:21:25 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ik01s-0007xa-T8
	for mharc-axiom-math@gnu.org; Mon, 22 Oct 2007 12:21:24 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ik01r-0007vA-Le
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 12:21:23 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ik01q-0007tp-Tv
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 12:21:23 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ik01q-0007tF-A5
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 12:21:22 -0400
Received: from smtp.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Ik01p-0005pK-R8
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 12:21:22 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id D662846DE07;
	Mon, 22 Oct 2007 11:21:19 -0500 (CDT)
Date: Mon, 22 Oct 2007 11:20:16 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: fricas-devel@googlegroups.com
In-Reply-To: <fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<9qzlyca6yz.fsf@aquin.mat.univie.ac.at>
	<87myucgwhl.fsf_-_@nerim.fr> <9qk5pfr6nt.fsf@aquin.mat.univie.ac.at>
	<871wbnlco2.fsf@nerim.fr> <9qejfn5vb0.fsf@aquin.mat.univie.ac.at>
	<87fy03jt67.fsf_-_@nerim.fr> <9qfy0374yd.fsf@aquin.mat.univie.ac.at>
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: axiom-math@nongnu.org, open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 22 Oct 2007 16:21:23 -0000

On Mon, 22 Oct 2007, Bill Page wrote:

| 
| On 22 Oct 2007 10:16:33 -0500, wrote:
| > Bill Page writes:
| > ...
| > |
| > | I would like to consider what is?
| > |
| > |   1..9
| > |
| > | Right now in Axiom this is evaluated as a member of 'Segment
| > | PositiveInteger', i.e. the domain of all such segments. But in general
| > | I think I would prefer if '1..9' actually denoted a domain - a subset
| > | of the Positive Integers - with members 1, 2, 3 ... etc.
| >
| > Couold you elaborate on why `1..9' should denote a domain, and what
| > the benefits would be?
| >
| 
| Well, for one I could then write the cross-product of such domains:
| 
|   Product(1..9,1..4)

What would be its meaning?
The reason I'm after the meaning is that once I figured out what you
really want to express -- not the syntax -- then I can figure out
how to work on the syntax.

| and iterate over them like this
| 
|   for i in expand()$Product(1..9,1..4)
| 
| where 'expand' (or whatever we decide we want to call this operator
| from the category Finite). Or even better if the generator 'expand'
| also is implicit for any domain in Finite so that we could write:
| 
|   for i in Prooduct(1..9,1..4)
| 
| Of course we could also simply define some new 'CrossProduct' domain
| constructor that takes as argument something of type 'Segment Integer'
| but this seems considerably less general.

If we introduce a Cross domain, I would expect it to take a sequence
(e.g. List) of domain as argument.  Why would that be less general?

| > | I am having a little trouble actually articulating the difference
| > | between these two. It seems somewhat artificially imposed by Axiom's
| > | type hierarchy that does not easily allow domains to be members of
| > | domains. (Domains belong to categories, not other domains.).
| >
| > In fact, that is not so clear. If you ask the interpreter what is the
| > type of Domain, it would answer 'SubDomain Domain'.  And don't go query
| > the type of SubDomain Domain :-/
| >
| 
| Yes. As I have said several times before (e.g. in an exchange a few
| years with Peter Broadbery), I think this upper part of the Axiom
| domain/category type system is a little messed up. I believe Aldor
| presents one possible solution to these problems but there may be
| other solutions.

Well, my own opinions are not definite yet, but I do see some value to
the `domain theoretic' approach to this matter.  In that scheme
`Categories' are left to just to ensure the availability of certain
operators to help the compiler in semantics analysis and efficient
code-generation.  From that perspective, asking the question `what is
the type of this domain' is an ill-posed problem.  Rather, one should
be asking the question `does this domain satisfy that category?'.

Indeed, once you've queried the type of a domain, what do you do with it?

| > | We want to be able to write:
| > |
| > |   DirectProduct(4,1..9)
| > |
| > | but this does not work because '1..9' is not a type - it is an object
| > | of 'Segment PositiveInteger'.
| >
| > If it worked, what would you have liked the mathematical meaning to
| > be, and why?
| >
| 
| I would like the result to be a finite domain.

that says what property the result would have, but it does not tell me
what the meaning of the result is.  I would like to underdstand 
the mathematical meaning.

[...]

| > | Another example of this in Axiom that *does* work right now is:
| > |
| > |   DirectProduct(4,OrderedVariableList [a,b,c])
| > |
| > | OrderedVariableList is a domain constructor that takes something of
| > | List Symbol as a parameter. In order to introduce '1..9' as a domain
| > | it would be possible to introduce new domain constructor like
| > |
| > |    )abbrev domain INTS IntegerSegment
| > |    IntegerSegment(S:Segment Integer): with Finite ...
| > |
| > | that takes something of 'Segment Integer' as a parameter. Do we want
| > | 'IntegerSegment' to also be a subdomain of Integer?. In any case,
| > | then we could write:
| >
| > I do not see obvious reasons why I would want IntegerSegment to be a
| > subdomain of Integer.
| >
| 
| Well for example, maybe I would want to write:
| 
|   x:IntegerSegment 1..9
|   y:=x + 1
| 
| where the type of 'y' might be Union(IntegerSegment 1..9,"failed").

So, you are actually after a domain that constrains all operations on
the values of its objects to deliver a value in a specified bound.  I
can be persuaded that IntegerSegment convays such meaning, but I'm not
sure the notation `1..9' is intuitive to me, given its other existing
meaning.

| > |   DirectProduct(4,IntegerSegment 1..9)
| > |
| > | But somehow the distinction between '1..9' and 'IntegerSegment 1..9'
| > | and '[a,b,c]' and 'OrderedVariableList [a,b,c]' seems artificial.
| > |
| > | It occurs to me that one might like at least the Axiom interpreter to
| > | perform some kind of automatic coercion from 'x' in a domain like
| > | 'Segment Integer' into the *category* consisting of domains
| > | 'IntegerSegment(x)'.
| > |
| > | I think Gaby recently referred to this preference for things like
| > | '1..9' and [a,b,c] to also
| > | represent domains as a more "categorical" approach.
| >
| > In general, I would like OpenAxiom to take a more categorial approach
| > to almost everything -- in particular `cross'.
| 
| Great. One should probably try to be more specific here about what one
| means by a "categorical approach". You could mean for example trying
| to provide mathematical semantics based on category theory. I have
| discussed before how one really should define 'cross' as a categorial
| limit in terms of the existence of the unique (universal) operation:
| 
|   product: (A:Type, A->X,A->Y) -> (A->%)
| 
| See: http://wiki.axiom-developer.org/SandBoxLimitsAndColimits
| 
| > However, I'm interested in some of you ideas here.  Please, could you
| > elaborate, and if possible, give some use cases?
| >
| 
| Do you mean use cases for operations like 'product' above or use cases
| of the domain 'Product' or use cases of the domain 'IntegerSegment'?
| :-)

I'm specifically after `1..9' that you would want to be a domain
and the various constructs you based on it.

-- Gaby



From MAILER-DAEMON Mon Oct 22 12:31:22 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ik0BW-0003SM-PR
	for mharc-axiom-math@gnu.org; Mon, 22 Oct 2007 12:31:22 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ik0BU-0003Q3-EQ
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 12:31:20 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ik0BS-0003Ns-Oy
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 12:31:19 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ik0BS-0003Nc-AS
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 12:31:18 -0400
Received: from smtp-101-monday.noc.nerim.net ([62.4.17.101]
	helo=mallaury.nerim.net)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <fmaltey@nerim.fr>) id 1Ik0BR-0001eN-Tc
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 12:31:18 -0400
Received: from localhost (fmaltey.net0.nerim.net [213.41.170.4])
	by mallaury.nerim.net (Postfix) with ESMTP id A845F4F3C1;
	Mon, 22 Oct 2007 18:31:05 +0200 (CEST)
Received: from fmy by localhost with local (Exim 4.63)
	(envelope-from <fmaltey@nerim.fr>)
	id 1Ik0BN-0001jq-Oz; Mon, 22 Oct 2007 18:31:13 +0200
To: fricas-devel@googlegroups.com, "Bill Page" <bill.page@newsynthesis.org>,
	"Martin Rubey" <martin.rubey@univie.ac.at>,
	open-axiom-devel@lists.sourceforge.net,  axiom-math@nongnu.org
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<9qzlyca6yz.fsf@aquin.mat.univie.ac.at> <87myucgwhl.fsf_-_@nerim.fr>
	<9qk5pfr6nt.fsf@aquin.mat.univie.ac.at> <871wbnlco2.fsf@nerim.fr>
	<9qejfn5vb0.fsf@aquin.mat.univie.ac.at> <87fy03jt67.fsf_-_@nerim.fr>
	<9qfy0374yd.fsf@aquin.mat.univie.ac.at>
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>
From: Francois Maltey <fmaltey@nerim.fr>
Date: 22 Oct 2007 18:31:13 +0200
In-Reply-To: <87tzojxjqm.fsf@soliton.cs.tamu.edu>
Message-ID: <87oderru0e.fsf_-_@nerim.fr>
Lines: 83
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: by monty-python.gnu.org: FreeBSD 4.6-4.9
Cc: 
Subject: [Axiom-math] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 22 Oct 2007 16:31:20 -0000

> I'm not being facetious, I'm trying to understand your perspectives :

For me it's an exercice I give to my students in maple :
create the list of all matrices which can be magic. 
They are a subset of this list :

[matrix [[a,b,15-a-b],[c,d,15-c-d],[15-a-c,15-b-d,15-a-d]] 
  for << all the (a,b,c,d) in 2..8 x 1..9 x 1..9 x 2..8 >> ]

My first query was about this real exercice : create this list of matrices.
(and then extract the magic ones)

mupad syntax is 
[matrix [[a,b,15-a-b],[c,d,15-c-d],[15-a-c,15-b-d,15-a-d]] 
  $a=2..8 $b=1..9 $c=1..9 $d=2..8]

maple syntax is 
['''matrix [[a,b,15-a-b],[c,d,15-c-d],[15-a-c,15-b-d,15-a-d]] 
  $a=2..8' $b=1..9' $c=1..9' $d=2..8]

So I'm looking for a pretty syntax in order to enumerate a cartesian Product
of lists or of segments.

There are 3 possible methods :

// A //

Today we can use

L := [1,3,5,7,9]
concat [concat [[100*a+10*b+c for a in 1..2] for b in 0..9] for c in L]

I don't find fair many concat.

Of corse 
   Union_{c in C} (Union_{b in B} {F(a,b,c) for c in C}) 
=  {F(a,b,c) for (a,b,c) in AxBxC} 

I write the second terms in mathematics,
and so I prefer to have this second syntax in axiom, 
and the concat command looks like an union.

// B //

Waldek writes :
> Concerning more general problem: I think that we also need other approaches.
> More precisely, it would be good to add better iteration constructs, which
> make iterating over products easier.  For example, something like:

> [[a, b] for a in 1..10 repeat for b in 1..5] 

> Well, concat version creates intermediate lists and concatenates them.
> Psychologically double iteration is an atomic operation, 

> so it is easier (at least for some folks) to think about. 

// C //

Martin seems to prefer :

L := [1,3,5,7,9]
[100*a+10*b+c for (a,b,c) in Product (1..2,0..9,L)]

I don't disapprove this point of view. 
The magic [function|domain] Product generates the list 
of all the possibilities.

but I'm really waiting for automatic coerces in order to have 
a light command in the interpreter because this construct is (for me) 
very common. So I don't want to add a lot of $... and @... everytime.

In this case the "keyword" Product has various arguments : 
List or Segment. All terms don't have necessary the same type.

An other example :
LP is a list of Lagrange polynoms, Lx is the list of associated values.
I could test : 
    test (set [eval (P, x) for (P,x) in Product (LP, Lx)] = set [0,1])
    test (set [eval (P, x) for (P,x) in Product (LP, 1..8)] = set [0,1])
even if it is better to test with a matrix.
    test (matrix [[eval (P, x) for P in LP] for x in Lx] = identity(n))

F.



From MAILER-DAEMON Mon Oct 22 12:48:39 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ik0SF-0008MT-Ao
	for mharc-axiom-math@gnu.org; Mon, 22 Oct 2007 12:48:39 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ik0SD-0008Ix-Nh
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 12:48:37 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ik0SB-0008Dl-4O
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 12:48:37 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ik0SB-0008DY-0B
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 12:48:35 -0400
Received: from ug-out-1314.google.com ([66.249.92.169])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1Ik0SA-0008Az-N3
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 12:48:34 -0400
Received: by ug-out-1314.google.com with SMTP id m2so929565uge
	for <axiom-math@nongnu.org>; Mon, 22 Oct 2007 09:48:33 -0700 (PDT)
Received: by 10.86.26.11 with SMTP id 11mr3952245fgz.1193071713119;
	Mon, 22 Oct 2007 09:48:33 -0700 (PDT)
Received: by 10.86.77.14 with HTTP; Mon, 22 Oct 2007 09:48:33 -0700 (PDT)
Message-ID: <fbcd16d40710220948i4cfddcf2q3cf5543a73380228@mail.gmail.com>
Date: Mon, 22 Oct 2007 12:48:33 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: fricas-devel@googlegroups.com
In-Reply-To: <Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<9qk5pfr6nt.fsf@aquin.mat.univie.ac.at> <871wbnlco2.fsf@nerim.fr>
	<9qejfn5vb0.fsf@aquin.mat.univie.ac.at> <87fy03jt67.fsf_-_@nerim.fr>
	<9qfy0374yd.fsf@aquin.mat.univie.ac.at>
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: axiom-math@nongnu.org, open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
	[fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 22 Oct 2007 16:48:37 -0000

On 10/22/07, Gabriel Dos Reis wrote:
>
> On Mon, 22 Oct 2007, Bill Page wrote:
> ...
> |
> | Well, for one I could then write the cross-product of such domains:
> |
> |   Product(1..9,1..4)
>
> What would be its meaning?
> The reason I'm after the meaning is that once I figured out what you
> really want to express -- not the syntax -- then I can figure out
> how to work on the syntax.
>

You mean that was not clear in what followed in my previous message?
As I said, I want

  Product(1..9,1..4)

to be a domain - the cross-product of two other domains.

> | and iterate over them like this
> |
> |   for i in expand()$Product(1..9,1..4)
> |
> | where 'expand' (or whatever we decide we want to call this operator
> | from the category Finite). Or even better if the generator 'expand'
> | also is implicit for any domain in Finite so that we could write:
> |
> |   for i in Prooduct(1..9,1..4)
> |
> | Of course we could also simply define some new 'CrossProduct' domain
> | constructor that takes as argument something of type 'Segment Integer'
> | but this seems considerably less general.
>
> If we introduce a Cross domain, I would expect it to take a sequence
> (e.g. List) of domain as argument.  Why would that be less general?
>

What I call 'Product' you can call 'Cross', I have no problem with the
name. If you want 'Cross' to have a signature like:

  Cross(x:List Type): with ... appropriate access operations

that is fine. But still you would not be able to write:

  Cross [1..9,1..4]

> ...
> |
> | Yes. As I have said several times before (e.g. in an exchange a few
> | years with Peter Broadbery), I think this upper part of the Axiom
> | domain/category type system is a little messed up. I believe Aldor
> | presents one possible solution to these problems but there may be
> | other solutions.
>
> Well, my own opinions are not definite yet, but I do see some value to
> the `domain theoretic' approach to this matter.  In that scheme
> `Categories' are left to just to ensure the availability of certain
> operators to help the compiler in semantics analysis and efficient
> code-generation.  From that perspective, asking the question `what is
> the type of this domain' is an ill-posed problem.  Rather, one should
> be asking the question `does this domain satisfy that category?'.
>
> Indeed, once you've queried the type of a domain, what do you do with it?
>

Yes, that is the point. Apparently Stephen Watt's answer in Aldor is
that allow the domain of 'Domain' to be 'Domain' is ok provided we are
careful exactly what operations we expect to provide in 'Domain'. I
kind of like this approach since I think in general we do want a
semantics in which we have "vary large" classes like 'Domain'.

> | > | We want to be able to write:
> | > |
> | > |   DirectProduct(4,1..9)
> | > |
> | > | but this does not work because '1..9' is not a type - it is an object
> | > | of 'Segment PositiveInteger'.
> | >
> | > If it worked, what would you have liked the mathematical meaning to
> | > be, and why?
> | >
> |
> | I would like the result to be a finite domain.
>
> that says what property the result would have, but it does not tell me
> what the meaning of the result is.  I would like to underdstand
> the mathematical meaning.
>

I think the concept of an interval (segment) on the domain Integer is
a fairly well-defined concept, no?

> [...]
> |
> | Well for example, maybe I would want to write:
> |
> |   x:IntegerSegment 1..9
> |   y:=x + 1
> |
> | where the type of 'y' might be Union(IntegerSegment 1..9,"failed").
>
> So, you are actually after a domain that constrains all operations on
> the values of its objects to deliver a value in a specified bound.  I
> can be persuaded that IntegerSegment convays such meaning, but I'm not
> sure the notation `1..9' is intuitive to me, given its other existing
> meaning.

Do you have another suggestion?

> ...
> I'm specifically after `1..9' that you would want to be a domain
> and the various constructs you based on it.
>

Ok. Well as I said, I am willing to live with '1..9' being a member of
the domain 'Segment PositiveInteger' provided that there is also a
coercion of such objects to an equivalent Finite domain so then at
least in the interpreter I could write for example like:

   for i in DirectProduct(3,1..9)

and

  map(x->x+1,expand()$DirectProduct(3,1..9))

where in 'DirectProduct' we have the operations like:

  expand: () -> List %
  +: (%,%) -> %
  1: () -> %

Iteration over the members of such a domain seems like the most common
requirement but not the only one.

Regards,
Bill Page.



From MAILER-DAEMON Mon Oct 22 12:51:10 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ik0Ug-0003N0-Br
	for mharc-axiom-math@gnu.org; Mon, 22 Oct 2007 12:51:10 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ik0Ud-0003Jo-Ra
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 12:51:07 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ik0Uc-0003IJ-MJ
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 12:51:07 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ik0Uc-0003I2-6u
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 12:51:06 -0400
Received: from mailhost.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Ik0Aq-0001T0-EQ
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 12:30:42 -0400
Received: from soliton.cs.tamu.edu (vpn-42.cs.tamu.edu [128.194.150.42])
	by postal.cs.tamu.edu (Postfix) with ESMTP id 6D75346DE07;
	Mon, 22 Oct 2007 11:30:38 -0500 (CDT)
Received: by soliton.cs.tamu.edu (Postfix, from userid 1000)
	id 08C291AB06; Mon, 22 Oct 2007 11:40:32 -0500 (CDT)
Sender: gdr@cs.tamu.edu
To: "Bill Page" <bill.page@newsynthesis.org>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<9qzlyca6yz.fsf@aquin.mat.univie.ac.at> <87myucgwhl.fsf_-_@nerim.fr>
	<9qk5pfr6nt.fsf@aquin.mat.univie.ac.at> <871wbnlco2.fsf@nerim.fr>
	<9qejfn5vb0.fsf@aquin.mat.univie.ac.at> <87fy03jt67.fsf_-_@nerim.fr>
	<9qfy0374yd.fsf@aquin.mat.univie.ac.at>
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
In-Reply-To: <fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
Organization: Texas A&M University, Department of Computer Science
Date: 22 Oct 2007 11:40:32 -0500
Message-ID: <87ejfnxfun.fsf@soliton.cs.tamu.edu>
Lines: 39
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org,
	fricas-devel@googlegroups.com
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re: iterators
	and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 22 Oct 2007 16:51:08 -0000

"Bill Page" <bill.page@newsynthesis.org> writes:


[...]

| > | Another example of this in Axiom that *does* work right now is:
| > |
| > |   DirectProduct(4,OrderedVariableList [a,b,c])
| > |
| > | OrderedVariableList is a domain constructor that takes something of
| > | List Symbol as a parameter. In order to introduce '1..9' as a domain
| > | it would be possible to introduce new domain constructor like
| > |
| > |    )abbrev domain INTS IntegerSegment
| > |    IntegerSegment(S:Segment Integer): with Finite ...
| > |
| > | that takes something of 'Segment Integer' as a parameter. Do we want
| > | 'IntegerSegment' to also be a subdomain of Integer?. In any case,
| > | then we could write:
| >
| > I do not see obvious reasons why I would want IntegerSegment to be a
| > subdomain of Integer.
| >
| 
| Well for example, maybe I would want to write:
| 
|   x:IntegerSegment 1..9

BTW, a general approach I have been working on for some time now is to
have a domain ParseForm, for parse forms i.e. parse trees after they
have been property annotated, at the Spad level, and define a
protocol to construct new entities out of ParseForms.  This ParseForm
domain is different from InputForm (which represents only expressions).
That way people can extend the interpreter in ways unimagined by
OpenAxiom developers, and move lot of code out of the interpreter itself.
The tricky part, of course, is to nail down the protocol so that it is
both useful and safe enough.

-- Gaby



From MAILER-DAEMON Mon Oct 22 13:04:18 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ik0hO-0007Mh-KZ
	for mharc-axiom-math@gnu.org; Mon, 22 Oct 2007 13:04:18 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ik0hM-0007Lm-Uk
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 13:04:17 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ik0hL-0007Iw-2f
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 13:04:16 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ik0hK-0007IU-L5
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 13:04:14 -0400
Received: from postal.cs.tamu.edu ([128.194.138.100])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Ik0hJ-0006CE-ES
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 13:04:13 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id 3693046DE07;
	Mon, 22 Oct 2007 12:04:12 -0500 (CDT)
Date: Mon, 22 Oct 2007 12:03:08 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: fricas-devel@googlegroups.com
In-Reply-To: <fbcd16d40710220948i4cfddcf2q3cf5543a73380228@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0710221155250.17358@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<9qk5pfr6nt.fsf@aquin.mat.univie.ac.at>
	<871wbnlco2.fsf@nerim.fr> <9qejfn5vb0.fsf@aquin.mat.univie.ac.at>
	<87fy03jt67.fsf_-_@nerim.fr> <9qfy0374yd.fsf@aquin.mat.univie.ac.at>
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<fbcd16d40710220948i4cfddcf2q3cf5543a73380228@mail.gmail.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: axiom-math@nongnu.org, open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 22 Oct 2007 17:04:17 -0000

On Mon, 22 Oct 2007, Bill Page wrote:

| As I said, I want
| 
|   Product(1..9,1..4)
| 
| to be a domain - the cross-product of two other domains.

I do not think 

    I want 1..9 to be a domain so that I can write
    Product(1..9, 1..4) to be a cross product of two domains

is an explanation of why `1..9' should be a domain.  I would like a
mathematical meaning so that I would not have to tell students
   
  `1..9' is a domain because Bill Page wanted to write Product(1..9, 1..4)
   as a Catersian product of two domains.  

That is why I'm after the semantics.

-- Gaby



From MAILER-DAEMON Mon Oct 22 13:12:22 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ik0pC-0007EC-Eh
	for mharc-axiom-math@gnu.org; Mon, 22 Oct 2007 13:12:22 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ik0pA-0007Bk-MX
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 13:12:20 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ik0p8-00076e-6r
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 13:12:20 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ik0p7-00076T-Vk
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 13:12:18 -0400
Received: from smtp.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Ik0p7-0000xV-H6
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 13:12:17 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id 9D48146DE06;
	Mon, 22 Oct 2007 12:12:16 -0500 (CDT)
Date: Mon, 22 Oct 2007 12:11:12 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: fricas-devel@googlegroups.com
In-Reply-To: <fbcd16d40710220948i4cfddcf2q3cf5543a73380228@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0710221203240.17358@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<9qk5pfr6nt.fsf@aquin.mat.univie.ac.at>
	<871wbnlco2.fsf@nerim.fr> <9qejfn5vb0.fsf@aquin.mat.univie.ac.at>
	<87fy03jt67.fsf_-_@nerim.fr> <9qfy0374yd.fsf@aquin.mat.univie.ac.at>
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<fbcd16d40710220948i4cfddcf2q3cf5543a73380228@mail.gmail.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: axiom-math@nongnu.org, open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 22 Oct 2007 17:12:21 -0000

On Mon, 22 Oct 2007, Bill Page wrote:

| What I call 'Product' you can call 'Cross', I have no problem with the
| name. If you want 'Cross' to have a signature like:

I believe Cross has a good pedigree in the Axiom family.

|   Cross(x:List Type): with ... appropriate access operations
| 
| that is fine. But still you would not be able to write:
| 
|   Cross [1..9,1..4]

Yes, but why would I have to write that what would be the meaning?

Again, I'm not saying it is bad.  I'm after the semantics.

I can (mathematically) explain that

    cross [l1, l2]

computes the a sequence listing of the elements of the cross product
of the sequence l1 and l2.

I can (mathematically) explain that

    cross [Integer, Float]

returns the cross product of Integer by Float.

How do you matematically explain that, 1..9 is a domain, and still I
can write

      for i in 1..9 repeat
         -- ...

and I do not get a type error?


Again, I'm after the semantics.

-- Gaby



From MAILER-DAEMON Mon Oct 22 13:16:19 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ik0t1-0002mT-OY
	for mharc-axiom-math@gnu.org; Mon, 22 Oct 2007 13:16:19 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ik0sz-0002iT-Jk
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 13:16:17 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ik0sx-0002fE-PJ
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 13:16:16 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ik0sx-0002f1-L0
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 13:16:15 -0400
Received: from mailhost.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Ik0sx-0002D1-9d
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 13:16:15 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id BAC7946DE06;
	Mon, 22 Oct 2007 12:16:11 -0500 (CDT)
Date: Mon, 22 Oct 2007 12:15:08 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: fricas-devel@googlegroups.com
In-Reply-To: <fbcd16d40710220948i4cfddcf2q3cf5543a73380228@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0710221212350.17358@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<9qk5pfr6nt.fsf@aquin.mat.univie.ac.at>
	<871wbnlco2.fsf@nerim.fr> <9qejfn5vb0.fsf@aquin.mat.univie.ac.at>
	<87fy03jt67.fsf_-_@nerim.fr> <9qfy0374yd.fsf@aquin.mat.univie.ac.at>
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<fbcd16d40710220948i4cfddcf2q3cf5543a73380228@mail.gmail.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: axiom-math@nongnu.org, open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 22 Oct 2007 17:16:17 -0000

On Mon, 22 Oct 2007, Bill Page wrote:

| Yes, that is the point. Apparently Stephen Watt's answer in Aldor is
| that allow the domain of 'Domain' to be 'Domain' is ok provided we are
| careful exactly what operations we expect to provide in 'Domain'.

Domain:Domain introduces an inconsistency at its Curry-Howard logic
level, so I'm nervous about that.  A solution, adopted by Coq, is that
even though the interface would display Type:Type, what it really does
it that it has an infinite hierarchy of universes Type(k), where 
Type(i) : Type(j), for i < j, starting from 0.

-- Gaby



From MAILER-DAEMON Mon Oct 22 13:24:23 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ik10p-0007IH-SL
	for mharc-axiom-math@gnu.org; Mon, 22 Oct 2007 13:24:23 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ik10o-0007GA-Dk
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 13:24:22 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ik10m-0007Dg-Gf
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 13:24:21 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ik10m-0007Db-Du
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 13:24:20 -0400
Received: from smtp.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Ik10m-0005VX-1q
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 13:24:20 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id 8517146DE06;
	Mon, 22 Oct 2007 12:24:18 -0500 (CDT)
Date: Mon, 22 Oct 2007 12:23:14 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: fricas-devel@googlegroups.com
In-Reply-To: <fbcd16d40710220948i4cfddcf2q3cf5543a73380228@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0710221215140.17358@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<9qk5pfr6nt.fsf@aquin.mat.univie.ac.at>
	<871wbnlco2.fsf@nerim.fr> <9qejfn5vb0.fsf@aquin.mat.univie.ac.at>
	<87fy03jt67.fsf_-_@nerim.fr> <9qfy0374yd.fsf@aquin.mat.univie.ac.at>
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<fbcd16d40710220948i4cfddcf2q3cf5543a73380228@mail.gmail.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: axiom-math@nongnu.org, open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 22 Oct 2007 17:24:22 -0000

On Mon, 22 Oct 2007, Bill Page wrote:

| > | > | We want to be able to write:
| > | > |
| > | > |   DirectProduct(4,1..9)
| > | > |
| > | > | but this does not work because '1..9' is not a type - it is an object
| > | > | of 'Segment PositiveInteger'.
| > | >
| > | > If it worked, what would you have liked the mathematical meaning to
| > | > be, and why?
| > | >
| > |
| > | I would like the result to be a finite domain.
| >
| > that says what property the result would have, but it does not tell me
| > what the meaning of the result is.  I would like to underdstand
| > the mathematical meaning.
| >
| 
| I think the concept of an interval (segment) on the domain Integer is
| a fairly well-defined concept, no?

The notion of interval domain is well-understood.  But, the algebra you
presented in not one of the well-understood algebra I can link to.
So, I would appreciate your effort in elaborating on what you have ini mind.

The Segment (and UniversalSegment) domain is already in the Axiom
faimily, but you seem to be wanting something else.  So, yes, the
`concept of segment' may be a fairly well-defined concept;
apparently you're considering a different definition.  I would like to
understand it. 

-- Gaby




From MAILER-DAEMON Mon Oct 22 13:34:01 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ik1A8-00054J-N9
	for mharc-axiom-math@gnu.org; Mon, 22 Oct 2007 13:34:00 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ik1A5-000500-HW
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 13:33:57 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ik1A4-0004yD-La
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 13:33:57 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ik1A4-0004xk-Ep
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 13:33:56 -0400
Received: from mailhost.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Ik1A3-0000PW-Vw
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 13:33:56 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id 5882546DE06;
	Mon, 22 Oct 2007 12:33:55 -0500 (CDT)
Date: Mon, 22 Oct 2007 12:32:51 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: fricas-devel@googlegroups.com
In-Reply-To: <fbcd16d40710220948i4cfddcf2q3cf5543a73380228@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0710221223450.17358@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<9qk5pfr6nt.fsf@aquin.mat.univie.ac.at>
	<871wbnlco2.fsf@nerim.fr> <9qejfn5vb0.fsf@aquin.mat.univie.ac.at>
	<87fy03jt67.fsf_-_@nerim.fr> <9qfy0374yd.fsf@aquin.mat.univie.ac.at>
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<fbcd16d40710220948i4cfddcf2q3cf5543a73380228@mail.gmail.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: axiom-math@nongnu.org, open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 22 Oct 2007 17:33:57 -0000

On Mon, 22 Oct 2007, Bill Page wrote:

| > [...]
| > |
| > | Well for example, maybe I would want to write:
| > |
| > |   x:IntegerSegment 1..9
| > |   y:=x + 1
| > |
| > | where the type of 'y' might be Union(IntegerSegment 1..9,"failed").
| >
| > So, you are actually after a domain that constrains all operations on
| > the values of its objects to deliver a value in a specified bound.  I
| > can be persuaded that IntegerSegment convays such meaning, but I'm not
| > sure the notation `1..9' is intuitive to me, given its other existing
| > meaning.
| 
| Do you have another suggestion?

Until I fully understand what you want and its meaning, and why, my
suggestion would be to keep things simple and explore what (e.g. the
abstractions) you want to express and why you can't express it with
the current lanaguage.

| > ...
| > I'm specifically after `1..9' that you would want to be a domain
| > and the various constructs you based on it.
| >
| 
| Ok. Well as I said, I am willing to live with '1..9' being a member of
| the domain 'Segment PositiveInteger' provided that there is also a
| coercion of such objects to an equivalent Finite domain so then at

Would you be happy if we added something like

    if S has impliesFiniteSegment then Finite

where impliesFiniteSegment is some predefined attribute?  Or do you
really insist on a coerce?  If so, how different would the target
domain be?

-- Gaby



From MAILER-DAEMON Mon Oct 22 14:06:09 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ik1fF-0005Am-QW
	for mharc-axiom-math@gnu.org; Mon, 22 Oct 2007 14:06:09 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ik1fE-0005Ah-Qr
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 14:06:08 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ik1fA-0005A2-BG
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 14:06:08 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ik1fA-00059z-8b
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 14:06:04 -0400
Received: from ik-out-1112.google.com ([66.249.90.176])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1Ik1f9-0002hm-In
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 14:06:04 -0400
Received: by ik-out-1112.google.com with SMTP id c29so649792ika
	for <axiom-math@nongnu.org>; Mon, 22 Oct 2007 11:06:01 -0700 (PDT)
Received: by 10.86.90.2 with SMTP id n2mr3999800fgb.1193076361606;
	Mon, 22 Oct 2007 11:06:01 -0700 (PDT)
Received: by 10.86.77.14 with HTTP; Mon, 22 Oct 2007 11:06:01 -0700 (PDT)
Message-ID: <fbcd16d40710221106i671da534kbf76250668178a67@mail.gmail.com>
Date: Mon, 22 Oct 2007 14:06:01 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: "Gabriel Dos Reis" <gdr@cs.tamu.edu>
In-Reply-To: <Pine.LNX.4.64.0710221155250.17358@gauss.cs.tamu.edu>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<9qejfn5vb0.fsf@aquin.mat.univie.ac.at> <87fy03jt67.fsf_-_@nerim.fr>
	<9qfy0374yd.fsf@aquin.mat.univie.ac.at>
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<fbcd16d40710220948i4cfddcf2q3cf5543a73380228@mail.gmail.com>
	<Pine.LNX.4.64.0710221155250.17358@gauss.cs.tamu.edu>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re:
	[fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 22 Oct 2007 18:06:09 -0000

On 10/22/07, Gabriel Dos Reis <gdr@cs.tamu.edu> wrote:
> On Mon, 22 Oct 2007, Bill Page wrote:
>
> | As I said, I want
> |
> |   Product(1..9,1..4)
> |
> | to be a domain - the cross-product of two other domains.
>
> I do not think
>
>     I want 1..9 to be a domain so that I can write
>     Product(1..9, 1..4) to be a cross product of two domains
>
> is an explanation of why `1..9' should be a domain.

As I said earlier, I think the semantics of Product should be given
categorically by the existence of the unique operation

Product(X:Type, Y:Type): with ...

 product: (A:Type, A->X,A->Y) -> (A->%)

as a categorical limit.

Regards,
Bill Page.



From MAILER-DAEMON Mon Oct 22 14:11:57 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ik1kr-0002uG-1T
	for mharc-axiom-math@gnu.org; Mon, 22 Oct 2007 14:11:57 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ik1kq-0002sN-21
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 14:11:56 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ik1kl-0002hC-4s
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 14:11:55 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ik1kl-0002h2-0S
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 14:11:51 -0400
Received: from postal.cs.tamu.edu ([128.194.138.100])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Ik1kk-0004fO-HE
	for axiom-math@nongnu.org; Mon, 22 Oct 2007 14:11:50 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id 77BFE46DE06;
	Mon, 22 Oct 2007 13:11:48 -0500 (CDT)
Date: Mon, 22 Oct 2007 13:10:44 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: Bill Page <bill.page@newsynthesis.org>
In-Reply-To: <fbcd16d40710221106i671da534kbf76250668178a67@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0710221308510.17358@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<9qejfn5vb0.fsf@aquin.mat.univie.ac.at>
	<87fy03jt67.fsf_-_@nerim.fr> <9qfy0374yd.fsf@aquin.mat.univie.ac.at> 
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com> 
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu> 
	<fbcd16d40710220948i4cfddcf2q3cf5543a73380228@mail.gmail.com> 
	<Pine.LNX.4.64.0710221155250.17358@gauss.cs.tamu.edu>
	<fbcd16d40710221106i671da534kbf76250668178a67@mail.gmail.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re:
 [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 22 Oct 2007 18:11:56 -0000

On Mon, 22 Oct 2007, Bill Page wrote:

| On 10/22/07, Gabriel Dos Reis <gdr@cs.tamu.edu> wrote:
| > On Mon, 22 Oct 2007, Bill Page wrote:
| >
| > | As I said, I want
| > |
| > |   Product(1..9,1..4)
| > |
| > | to be a domain - the cross-product of two other domains.
| >
| > I do not think
| >
| >     I want 1..9 to be a domain so that I can write
| >     Product(1..9, 1..4) to be a cross product of two domains
| >
| > is an explanation of why `1..9' should be a domain.
| 
| As I said earlier, I think the semantics of Product should be given
| categorically by the existence of the unique operation
| 
| Product(X:Type, Y:Type): with ...
| 
|  product: (A:Type, A->X,A->Y) -> (A->%)
| 
| as a categorical limit.

And I want executable code and typechecking.

On typeckeching, consider

    for i in 1..9 repeat
      -- ...

What are the semantics and type checking rules if 1..9 is a domain?

-- Gaby



From MAILER-DAEMON Tue Oct 23 06:15:50 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkGne-0000s4-CM
	for mharc-axiom-math@gnu.org; Tue, 23 Oct 2007 06:15:50 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkGnd-0000rE-Bq
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 06:15:49 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkGnc-0000qY-OJ
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 06:15:48 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkGnc-0000q9-8m
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 06:15:48 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39]
	helo=smtpauthhost.risc.uni-linz.ac.at)
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1IkGnb-0000eA-GE
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 06:15:48 -0400
Received: from [193.170.38.119] (hemmecke@woodpecker.risc.uni-linz.ac.at
	[193.170.38.119]) (authenticated bits=0)
	by smtpauthhost.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with
	ESMTP id l9NAFWTo023482
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Tue, 23 Oct 2007 12:15:33 +0200
Message-ID: <471D449F.4020305@hemmecke.de>
Date: Tue, 23 Oct 2007 02:47:27 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.6 (X11/20070728)
MIME-Version: 1.0
To: Gabriel Dos Reis <gdr@cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>	<9qzlyca6yz.fsf@aquin.mat.univie.ac.at>	<87myucgwhl.fsf_-_@nerim.fr>
	<9qk5pfr6nt.fsf@aquin.mat.univie.ac.at>	<871wbnlco2.fsf@nerim.fr>
	<9qejfn5vb0.fsf@aquin.mat.univie.ac.at>	<87fy03jt67.fsf_-_@nerim.fr>
	<9qfy0374yd.fsf@aquin.mat.univie.ac.at>	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>	<87tzojxjqm.fsf@soliton.cs.tamu.edu>	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
In-Reply-To: <Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: by monty-python.gnu.org: Linux 2.4-2.6
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re:
 [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 23 Oct 2007 10:15:49 -0000

On 10/22/2007 06:20 PM, Gabriel Dos Reis wrote:
> On Mon, 22 Oct 2007, Bill Page wrote:
> 
> | 
> | On 22 Oct 2007 10:16:33 -0500, wrote:
> | > Bill Page writes:
> | > ...
> | > |
> | > | I would like to consider what is?
> | > |
> | > |   1..9
> | > |
> | > | Right now in Axiom this is evaluated as a member of 'Segment
> | > | PositiveInteger', i.e. the domain of all such segments. But in general
> | > | I think I would prefer if '1..9' actually denoted a domain - a subset
> | > | of the Positive Integers - with members 1, 2, 3 ... etc.

Bill, you don't want 1..9 to be a domain. Of course, you can have it if 
you really want, but that just sounds like a domain of the set (or list) 
of the first 9 numbers. What would be the exports of this domain?

> | > Couold you elaborate on why `1..9' should denote a domain, and what
> | > the benefits would be?
> | >
> | 
> | Well, for one I could then write the cross-product of such domains:
> | 
> |   Product(1..9,1..4)

> What would be its meaning?

Maybe this one....

 >aldor -laldor -fx mycross.as
 >mycross
1, 11
1, 12
2, 11
2, 12
3, 11
3, 12

One can certainly do with the LibAldor IntegerSegment instead of 
Segment(X), but I've just included it for illustration that ".." as well 
as "by" are just functions.

Ralf

---BEGIN mycross.as
#include "aldor"
#include "aldorio"

macro OrdMonoid == with {
     1: %;
     <=: (%, %) -> Boolean;
     +: (%, %) -> %;
}
Segment(T: OrdMonoid): with {
     ..: (T, T) -> %;
     by: (%, T) -> %;
     generator: % -> Generator T;
} == add {
     Rep == Record(lo: T, hi: T, st: T);
     import from Rep;
     (s: T) .. (t: T): % == per [s, t, 1];
     (x: %) by (t: T): % == per [rep(x).lo, rep(x).hi, t];
     generator(x: %): Generator T == generate {
	(l, h, s) := explode rep x;
	while l <= h repeat {
		yield l;
		l := l+s;
	}
     }
}

Product(A: OrdMonoid, B: OrdMonoid): with {
   *: (Segment A, Segment B) -> Generator Cross(A,B);
} == add {
   (x: Segment A) * (y: Segment B): Generator Cross(A,B) == generate {
     for a in x repeat for b in y repeat yield (a,b);
   }
}

Z ==> Integer;
main(): () == {
     import from Z, Product(Z, Z);
     s1: Segment Z := 1..3;
     s2: Segment Z := 11..12;
     for ab in s1 * s2 repeat {
	(a, b) := ab;
	stdout << a << ", " << b << newline;
     }
}

main();
---END mycross.as




From MAILER-DAEMON Tue Oct 23 06:26:07 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkGxb-0007Hv-7P
	for mharc-axiom-math@gnu.org; Tue, 23 Oct 2007 06:26:07 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkGxa-0007HE-09
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 06:26:06 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkGxW-0007Ei-Vq
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 06:26:04 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkGxW-0007EM-PN
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 06:26:02 -0400
Received: from smtp.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1IkGxV-0003ld-Si
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 06:26:02 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id 8D16D46DE07;
	Tue, 23 Oct 2007 05:25:57 -0500 (CDT)
Date: Tue, 23 Oct 2007 05:24:53 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: Ralf Hemmecke <ralf@hemmecke.de>
In-Reply-To: <471D449F.4020305@hemmecke.de>
Message-ID: <Pine.LNX.4.64.0710230522590.28562@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<9qzlyca6yz.fsf@aquin.mat.univie.ac.at>
	<87myucgwhl.fsf_-_@nerim.fr> <9qk5pfr6nt.fsf@aquin.mat.univie.ac.at>
	<871wbnlco2.fsf@nerim.fr> <9qejfn5vb0.fsf@aquin.mat.univie.ac.at>
	<87fy03jt67.fsf_-_@nerim.fr> <9qfy0374yd.fsf@aquin.mat.univie.ac.at>
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<471D449F.4020305@hemmecke.de>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re:
 [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 23 Oct 2007 10:26:06 -0000

On Tue, 23 Oct 2007, Ralf Hemmecke wrote:

| > What would be its meaning?
| 
| Maybe this one....

[aldor code]

Am I the only one here who believes that 'meaning' has to be given
mathematically, indenpendent of syntax, and typing rules must also be
given too? 

-- Gaby



From MAILER-DAEMON Tue Oct 23 06:35:57 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkH77-0001fB-QF
	for mharc-axiom-math@gnu.org; Tue, 23 Oct 2007 06:35:57 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkH76-0001d8-Nw
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 06:35:56 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkH74-0001ZE-TE
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 06:35:56 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkH74-0001YX-Ia
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 06:35:54 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39]
	helo=smtpauthhost.risc.uni-linz.ac.at)
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1IkH73-0006pF-C5
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 06:35:53 -0400
Received: from [193.170.38.119] (hemmecke@woodpecker.risc.uni-linz.ac.at
	[193.170.38.119]) (authenticated bits=0)
	by smtpauthhost.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with
	ESMTP id l9NAZZTo023816
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Tue, 23 Oct 2007 12:35:36 +0200
Message-ID: <471DCE74.1020905@hemmecke.de>
Date: Tue, 23 Oct 2007 12:35:32 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.6 (X11/20070728)
MIME-Version: 1.0
To: Gabriel Dos Reis <gdr@cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<9qzlyca6yz.fsf@aquin.mat.univie.ac.at>
	<87myucgwhl.fsf_-_@nerim.fr>
	<9qk5pfr6nt.fsf@aquin.mat.univie.ac.at> <871wbnlco2.fsf@nerim.fr>
	<9qejfn5vb0.fsf@aquin.mat.univie.ac.at>
	<87fy03jt67.fsf_-_@nerim.fr>
	<9qfy0374yd.fsf@aquin.mat.univie.ac.at>
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<471D449F.4020305@hemmecke.de>
	<Pine.LNX.4.64.0710230522590.28562@gauss.cs.tamu.edu>
In-Reply-To: <Pine.LNX.4.64.0710230522590.28562@gauss.cs.tamu.edu>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: by monty-python.gnu.org: Linux 2.4-2.6
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re:
 [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 23 Oct 2007 10:35:56 -0000

On 10/23/2007 12:24 PM, Gabriel Dos Reis wrote:
> On Tue, 23 Oct 2007, Ralf Hemmecke wrote:
> 
> | > What would be its meaning?
> | 
> | Maybe this one....
> 
> [aldor code]
> 
> Am I the only one here who believes that 'meaning' has to be given
> mathematically, indenpendent of syntax, and typing rules must also be
> given too? 

Well, I only wanted to demonstrate that Bill might have had the wrong 
idea when he wanted 1..9 to be a domain instead of an element.
It seems that was not clear. Sorry.

Ralf



From MAILER-DAEMON Tue Oct 23 06:44:35 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkHFT-0008E1-FD
	for mharc-axiom-math@gnu.org; Tue, 23 Oct 2007 06:44:35 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkHFS-0008Dw-01
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 06:44:34 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkHFQ-0008Df-Je
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 06:44:33 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkHFQ-0008Dc-Eg
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 06:44:32 -0400
Received: from mailhost.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1IkHFQ-0001co-8U
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 06:44:32 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id 4CDA246DE07;
	Tue, 23 Oct 2007 05:44:31 -0500 (CDT)
Date: Tue, 23 Oct 2007 05:43:26 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: Ralf Hemmecke <ralf@hemmecke.de>
In-Reply-To: <471DCE74.1020905@hemmecke.de>
Message-ID: <Pine.LNX.4.64.0710230535370.28562@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<9qzlyca6yz.fsf@aquin.mat.univie.ac.at>
	<87myucgwhl.fsf_-_@nerim.fr> <9qk5pfr6nt.fsf@aquin.mat.univie.ac.at>
	<871wbnlco2.fsf@nerim.fr> <9qejfn5vb0.fsf@aquin.mat.univie.ac.at>
	<87fy03jt67.fsf_-_@nerim.fr> <9qfy0374yd.fsf@aquin.mat.univie.ac.at>
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<471D449F.4020305@hemmecke.de>
	<Pine.LNX.4.64.0710230522590.28562@gauss.cs.tamu.edu>
	<471DCE74.1020905@hemmecke.de>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re:
 [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 23 Oct 2007 10:44:34 -0000

On Tue, 23 Oct 2007, Ralf Hemmecke wrote:

| On 10/23/2007 12:24 PM, Gabriel Dos Reis wrote:
| > On Tue, 23 Oct 2007, Ralf Hemmecke wrote:
| > 
| > | > What would be its meaning?
| > | 
| > | Maybe this one....
| > 
| > [aldor code]
| > 
| > Am I the only one here who believes that 'meaning' has to be given
| > mathematically, indenpendent of syntax, and typing rules must also be
| > given too? 
| 
| Well, I only wanted to demonstrate that Bill might have had the wrong idea
| when he wanted 1..9 to be a domain instead of an element.
| It seems that was not clear. Sorry.

No need to apologize.   I just feel like I have been asking for
`meaning', and I almost always get back more codes without semantics I
was looking for.   If every body agrees that that is a construct we
don't have a clear semantics for, then I'll just shut up.

-- Gaby



From MAILER-DAEMON Tue Oct 23 20:00:19 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkTfX-000418-2z
	for mharc-axiom-math@gnu.org; Tue, 23 Oct 2007 20:00:19 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkTfV-00040h-CB
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 20:00:17 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkTfU-00040M-CW
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 20:00:16 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkTfU-00040D-64
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 20:00:16 -0400
Received: from nf-out-0910.google.com ([64.233.182.186])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1IkTfT-0002mQ-UE
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 20:00:16 -0400
Received: by nf-out-0910.google.com with SMTP id 30so24357nfu
	for <axiom-math@nongnu.org>; Tue, 23 Oct 2007 17:00:12 -0700 (PDT)
Received: by 10.86.9.8 with SMTP id 8mr2028616fgi.1193184012408;
	Tue, 23 Oct 2007 17:00:12 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Tue, 23 Oct 2007 17:00:12 -0700 (PDT)
Message-ID: <fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
Date: Tue, 23 Oct 2007 20:00:12 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: "Ralf Hemmecke" <ralf@hemmecke.de>
In-Reply-To: <471D449F.4020305@hemmecke.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl> <871wbnlco2.fsf@nerim.fr>
	<9qejfn5vb0.fsf@aquin.mat.univie.ac.at> <87fy03jt67.fsf_-_@nerim.fr>
	<9qfy0374yd.fsf@aquin.mat.univie.ac.at>
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<471D449F.4020305@hemmecke.de>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org,
	fricas-devel@googlegroups.com, Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
	[fricas-devel] Re: [fricas-devel] Re: iterators and cartesian
	product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 00:00:17 -0000

On 10/22/07, Ralf Hemmecke wrote:
>
> On 10/22/2007 06:20 PM, Gabriel Dos Reis wrote:
> > On Mon, 22 Oct 2007, Bill Page wrote:
> >
> > |
> > | On 22 Oct 2007 10:16:33 -0500, wrote:
> > | > Bill Page writes:
> > | > ...
> > | > |
> > | > | I would like to consider what is?
> > | > |
> > | > |   1..9
> > | > |
> > | > | Right now in Axiom this is evaluated as a member of 'Segment
> > | > | PositiveInteger', i.e. the domain of all such segments. But in general
> > | > | I think I would prefer if '1..9' actually denoted a domain - a subset
> > | > | of the Positive Integers - with members 1, 2, 3 ... etc.
>
> Bill, you don't want 1..9 to be a domain. Of course, you can have it if
> you really want, but that just sounds like a domain of the set (or list)
> of the first 9 numbers. What would be the exports of this domain?
>

Yes, under this proposal '1..9' would be a domain consisting of the
set of the first 9 positive integers. I want to consider the view that
this is the same as thinking of 'PositiveInteger' as a sub-domain of
'Integer'. So like 'PositiveInteger', '1..9' would inherit some of the
structure of Integer, specifically 'OrderedSet', plus exports from
'Finite' and the operations 'high', 'low' and 'incr' of
'SegmentCategory'. However 'SEGMENT', 'BY' and 'convert' of the
existing 'SegmentCategory' would have to become domain constructors.

In general I am wondering about "set-like" objects and whether these
should always be modeled as domains.

> > | > Couold you elaborate on why `1..9' should denote a domain, and what
> > | > the benefits would be?
> > | >
> > |
> > | Well, for one I could then write the cross-product of such domains:
> > |
> > |   Product(1..9,1..4)
>
> > What would be its meaning?
>

If '1..9' and '1..4' are domains then the meaning of 'Product' is
already given by the existing domain constructor 'Product' in the
Axiom library

> ...

Regards,
Bill Page.



From MAILER-DAEMON Tue Oct 23 20:06:51 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkTlr-0005uZ-L0
	for mharc-axiom-math@gnu.org; Tue, 23 Oct 2007 20:06:51 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkTlp-0005tl-0a
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 20:06:49 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkTlm-0005sl-Ru
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 20:06:48 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkTlm-0005sb-BW
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 20:06:46 -0400
Received: from hera.math.uni.wroc.pl ([156.17.86.1])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <hebisch@math.uni.wroc.pl>) id 1IkTlm-0004Gq-62
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 20:06:46 -0400
Received: from hebisch by hera.math.uni.wroc.pl with local (Exim 3.36 #1
	(Debian)) id 1IkTlX-0000el-00; Wed, 24 Oct 2007 02:06:31 +0200
In-Reply-To: <87ejfnxfun.fsf@soliton.cs.tamu.edu>
To: fricas-devel@googlegroups.com
Date: Wed, 24 Oct 2007 02:06:31 +0200 (CEST)
X-Mailer: ELM [version 2.4ME+ PL100 (25)]
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain; charset=US-ASCII
Message-Id: <E1IkTlX-0000el-00@hera.math.uni.wroc.pl>
From: Waldek Hebisch <hebisch@math.uni.wroc.pl>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 1)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 00:06:49 -0000

Gabriel Dos Reis wrote:
> 
> BTW, a general approach I have been working on for some time now is to
> have a domain ParseForm, for parse forms i.e. parse trees after they
> have been property annotated, at the Spad level, and define a
> protocol to construct new entities out of ParseForms.  This ParseForm
> domain is different from InputForm (which represents only expressions).
> That way people can extend the interpreter in ways unimagined by
> OpenAxiom developers, and move lot of code out of the interpreter itself.
> The tricky part, of course, is to nail down the protocol so that it is
> both useful and safe enough.
> 

I wonder how do you want to handle typechecking: is ParseForm intended
to be essentially untyped representation which is passed instead of
strings to evaluator (which annotates it with types)?  Or is ParseForm
(including its evaluation) intended to obey normal Spad type rules?

-- 
                              Waldek Hebisch
hebisch@math.uni.wroc.pl 



From MAILER-DAEMON Tue Oct 23 20:11:04 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkTpw-0001Bc-Qw
	for mharc-axiom-math@gnu.org; Tue, 23 Oct 2007 20:11:04 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkTpv-000192-0R
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 20:11:03 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkTpt-00017g-7W
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 20:11:02 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkTpt-00017c-3R
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 20:11:01 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39]
	helo=smtpauthhost.risc.uni-linz.ac.at)
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1IkTps-0005KA-TK
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 20:11:01 -0400
Received: from [193.170.38.119] (hemmecke@woodpecker.risc.uni-linz.ac.at
	[193.170.38.119]) (authenticated bits=0)
	by smtpauthhost.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with
	ESMTP id l9O0AeTo028546
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Wed, 24 Oct 2007 02:10:41 +0200
Message-ID: <471E8D7E.6070801@hemmecke.de>
Date: Wed, 24 Oct 2007 02:10:38 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.6 (X11/20070728)
MIME-Version: 1.0
To: Bill Page <bill.page@newsynthesis.org>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<871wbnlco2.fsf@nerim.fr>	 <9qejfn5vb0.fsf@aquin.mat.univie.ac.at>
	<87fy03jt67.fsf_-_@nerim.fr>	
	<9qfy0374yd.fsf@aquin.mat.univie.ac.at>	
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>	
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>	
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>	
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>	
	<471D449F.4020305@hemmecke.de>
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
In-Reply-To: <fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: by monty-python.gnu.org: Linux 2.4-2.6
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org,
	fricas-devel@googlegroups.com, Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re: [fricas-devel]
 Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 00:11:03 -0000

>>> |   Product(1..9,1..4)
>>> What would be its meaning?
> 
> If '1..9' and '1..4' are domains then the meaning of 'Product' is
> already given by the existing domain constructor 'Product' in the
> Axiom library

Seems OK, but, of course the _domain_ 1..9 is then inappropriate in a 
construction like

   for i in 1..9 repeat ...

don't you agree?

Ralf



From MAILER-DAEMON Tue Oct 23 20:20:50 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkTzN-0000d7-Vm
	for mharc-axiom-math@gnu.org; Tue, 23 Oct 2007 20:20:50 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkTzM-0000Z4-1c
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 20:20:48 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkTzK-0000Vf-Jd
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 20:20:47 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkTzK-0000VL-9w
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 20:20:46 -0400
Received: from nf-out-0910.google.com ([64.233.182.190])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1IkTzK-0006yl-7Y
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 20:20:46 -0400
Received: by nf-out-0910.google.com with SMTP id 30so28576nfu
	for <axiom-math@nongnu.org>; Tue, 23 Oct 2007 17:20:43 -0700 (PDT)
Received: by 10.86.78.4 with SMTP id a4mr5177397fgb.1193185243179;
	Tue, 23 Oct 2007 17:20:43 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Tue, 23 Oct 2007 17:20:43 -0700 (PDT)
Message-ID: <fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
Date: Tue, 23 Oct 2007 20:20:43 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: fricas-devel@googlegroups.com
In-Reply-To: <471E8D7E.6070801@hemmecke.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<87fy03jt67.fsf_-_@nerim.fr> <9qfy0374yd.fsf@aquin.mat.univie.ac.at>
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<471D449F.4020305@hemmecke.de>
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
	<471E8D7E.6070801@hemmecke.de>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org,
	Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
	[fricas-devel] Re: [fricas-devel] Re: iterators and cartesian
	product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 00:20:48 -0000

On 10/23/07, Ralf Hemmecke wrote:
>
> >>> |   Product(1..9,1..4)
> >>> What would be its meaning?
> >
> > If '1..9' and '1..4' are domains then the meaning of 'Product' is
> > already given by the existing domain constructor 'Product' in the
> > Axiom library
>
> Seems OK, but, of course the _domain_ 1..9 is then inappropriate in a
> construction like
>
>    for i in 1..9 repeat ...
>
> don't you agree?
>

No. My proposal also includes the idea that the construct

    for i in X repeat

should expect X to be any domain that supplies a generator (like Aldor).

Regards,
Bill Page.



From MAILER-DAEMON Tue Oct 23 20:45:01 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkUMm-0007dC-Tz
	for mharc-axiom-math@gnu.org; Tue, 23 Oct 2007 20:45:00 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkUMl-0007ab-ET
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 20:44:59 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkUMk-0007Ya-I8
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 20:44:58 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkUMk-0007YM-8O
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 20:44:58 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39]
	helo=smtpauthhost.risc.uni-linz.ac.at)
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1IkUMj-0002sb-Tw
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 20:44:58 -0400
Received: from [193.170.38.119] (hemmecke@woodpecker.risc.uni-linz.ac.at
	[193.170.38.119]) (authenticated bits=0)
	by smtpauthhost.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with
	ESMTP id l9O0iiTo030575
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Wed, 24 Oct 2007 02:44:45 +0200
Message-ID: <471E957A.1040403@hemmecke.de>
Date: Wed, 24 Oct 2007 02:44:42 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.6 (X11/20070728)
MIME-Version: 1.0
To: Bill Page <bill.page@newsynthesis.org>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>	<87fy03jt67.fsf_-_@nerim.fr>
	<9qfy0374yd.fsf@aquin.mat.univie.ac.at>	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>	<87tzojxjqm.fsf@soliton.cs.tamu.edu>	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>	<471D449F.4020305@hemmecke.de>	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
In-Reply-To: <fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: by monty-python.gnu.org: Linux 2.4-2.6
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net, Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re:
 [fricas-devel] Re:	[fricas-devel]
 Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 00:44:59 -0000

>> Seems OK, but, of course the _domain_ 1..9 is then inappropriate in a
>> construction like
>>
>>    for i in 1..9 repeat ...
>>
>> don't you agree?
>>
> 
> No. My proposal also includes the idea that the construct
> 
>     for i in X repeat
> 
> should expect X to be any domain that supplies a generator (like Aldor).

In Aldor, at the place of X there must be an element of type 
"Generator(Something)", not a domain. Well, if you have somewhere a 
function

   generator: T -> Generator(Something)

(where T is the type of X) around, then Aldor should be able to silently 
insert that function for you.

I must say, I am totally happy with just *one* "for" construction. I am 
currently not seeing much use in the domain 1..9, i.e. the finite set 
{1, ..., 9}.

Ralf



From MAILER-DAEMON Tue Oct 23 21:07:08 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkUiB-00010e-TP
	for mharc-axiom-math@gnu.org; Tue, 23 Oct 2007 21:07:08 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkUiA-0000yt-79
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 21:07:06 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkUi7-0000ve-M5
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 21:07:05 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkUi7-0000vU-EL
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 21:07:03 -0400
Received: from nf-out-0910.google.com ([64.233.182.187])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1IkUi7-0007OS-0f
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 21:07:03 -0400
Received: by nf-out-0910.google.com with SMTP id 30so38679nfu
	for <axiom-math@nongnu.org>; Tue, 23 Oct 2007 18:07:02 -0700 (PDT)
Received: by 10.86.98.18 with SMTP id v18mr13407fgb.1193188021800;
	Tue, 23 Oct 2007 18:07:01 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Tue, 23 Oct 2007 18:07:01 -0700 (PDT)
Message-ID: <fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
Date: Tue, 23 Oct 2007 21:07:01 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: "Ralf Hemmecke" <ralf@hemmecke.de>
In-Reply-To: <471E957A.1040403@hemmecke.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<471D449F.4020305@hemmecke.de>
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<471E957A.1040403@hemmecke.de>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net, Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re:
	[fricas-devel] Re: [fricas-devel] Re: iterators and cartesian
	product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 01:07:06 -0000

On 10/23/07, Ralf Hemmecke wrote:
> >> Seems OK, but, of course the _domain_ 1..9 is then inappropriate in a
> >> construction like
> >>
> >>    for i in 1..9 repeat ...
> >>
> >> don't you agree?
> >>
> >
> > No. My proposal also includes the idea that the construct
> >
> >     for i in X repeat
> >
> > should expect X to be any domain that supplies a generator (like Aldor).
>
> In Aldor, at the place of X there must be an element of type
> "Generator(Something)", not a domain.

Can you give an example of an "element of type Generator(Something)"
that is not a domain?

> Well, if you have somewhere a function
>
>    generator: T -> Generator(Something)
>
> (where T is the type of X) around, then Aldor should be able to silently
> insert that function for you.
>

I said only "like Aldor". In my proposal for an extension of Spad and
the Axiom interpreter, I expect that X must supply this generator
(iterator), i.e. satisfy some specific language-defined category that
includes this export.

> I must say, I am totally happy with just *one* "for" construction.

That is exactly what I am suggesting. There should be no special cases
of the "for" construct - only one, where X is as I describe.

> I am currently not seeing much use in the domain 1..9, i.e. the finite set
> {1, ..., 9}.
>

The point of this whole thread is discussion of suggested constructions like

  [ f(i,j) for i in 1..9 repeat for j in 1..4 ]

i.e. some kind of "cross-product" extension of the for-loop iteration
such as the CROSS construction that Gaby described in Boot. Rather
than extending the language with this sort of imperative syntax, I
would like to write this in a more "functional" manner instead:

  [ f(x.1,x.2) for x in Product(1..9,1..4) ]

(Right now Product provides only 'selectfirst' and 'selectsecond'
instead of .1 and .2 but that is easily fixed.)

Or better

  map(f,expand()$Product(1..9,1..4))

which requires some slightly more general implementation of function
application over such domains.

Regards,
Bill Page.



From MAILER-DAEMON Tue Oct 23 21:17:25 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkUs8-0006BB-TF
	for mharc-axiom-math@gnu.org; Tue, 23 Oct 2007 21:17:24 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkUs8-00069y-9X
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 21:17:24 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkUs6-00066G-Ge
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 21:17:23 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkUs6-000663-Dt
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 21:17:22 -0400
Received: from hera.math.uni.wroc.pl ([156.17.86.1])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <hebisch@math.uni.wroc.pl>) id 1IkUs6-0001ai-0j
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 21:17:22 -0400
Received: from hebisch by hera.math.uni.wroc.pl with local (Exim 3.36 #1
	(Debian)) id 1IkUrt-0002Mr-00; Wed, 24 Oct 2007 03:17:09 +0200
In-Reply-To: <fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
To: fricas-devel@googlegroups.com
Date: Wed, 24 Oct 2007 03:17:09 +0200 (CEST)
X-Mailer: ELM [version 2.4ME+ PL100 (25)]
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain; charset=US-ASCII
Message-Id: <E1IkUrt-0002Mr-00@hera.math.uni.wroc.pl>
From: Waldek Hebisch <hebisch@math.uni.wroc.pl>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 1)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org,
	Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re: [fricas-devel]
 Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 01:17:24 -0000

Bill Page wrote:
> Yes, under this proposal '1..9' would be a domain consisting of the
> set of the first 9 positive integers. I want to consider the view that
> this is the same as thinking of 'PositiveInteger' as a sub-domain of
> 'Integer'. So like 'PositiveInteger', '1..9' would inherit some of the
> structure of Integer, specifically 'OrderedSet', plus exports from
> 'Finite' and the operations 'high', 'low' and 'incr' of
> 'SegmentCategory'. However 'SEGMENT', 'BY' and 'convert' of the
> existing 'SegmentCategory' would have to become domain constructors.
> 
> In general I am wondering about "set-like" objects and whether these
> should always be modeled as domains.
>

I must say that I find this idea very problematic.  Why?  It seems
that you require automatic convertions between normal data and types.
Even if you can avoid convertions (say by working excusively with
types) you are likely to need overloaded operations on types.
It looks that you want violate what I consider to be very useful
limitation of Spad (see below).  You can avoid most problems
working with objects as demostrated by Aldor generators (general
generators are hard to implement efficiently, but at least can be
implemented and difficulties are well understood).

Now, why I do not want to allow overloading of Spad that constructors
(one may think that builtin constructors are overloaded, but builtins
are special, and they are really not overloaded but rather variadic).
This restriction means that overloads can be statically determinded
by a rather simple algorithm working separately on each function.
With overloaded types it seems only global constraint solving
could work, which is much more complex.  One might think that
difficulties of implementation could be ignored.  But I am affraid
that humans may have even more problems with overloaded types.

-- 
                              Waldek Hebisch
hebisch@math.uni.wroc.pl 



From MAILER-DAEMON Tue Oct 23 21:24:37 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkUz7-0001Ot-CV
	for mharc-axiom-math@gnu.org; Tue, 23 Oct 2007 21:24:37 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkUz6-0001N4-7h
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 21:24:36 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkUz3-0001Ir-R8
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 21:24:35 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkUz3-0001Ik-Hq
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 21:24:33 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39]
	helo=smtpauthhost.risc.uni-linz.ac.at)
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1IkUz3-00038A-1c
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 21:24:33 -0400
Received: from [193.170.38.119] (hemmecke@woodpecker.risc.uni-linz.ac.at
	[193.170.38.119]) (authenticated bits=0)
	by smtpauthhost.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with
	ESMTP id l9O1OJTo031807
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Wed, 24 Oct 2007 03:24:19 +0200
Message-ID: <471E9EC1.3090707@hemmecke.de>
Date: Wed, 24 Oct 2007 03:24:17 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.6 (X11/20070728)
MIME-Version: 1.0
To: Bill Page <bill.page@newsynthesis.org>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>	
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>	
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>	
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>	
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>	
	<471D449F.4020305@hemmecke.de>	
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>	
	<471E8D7E.6070801@hemmecke.de>	
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>	
	<471E957A.1040403@hemmecke.de>
	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
In-Reply-To: <fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: by monty-python.gnu.org: Linux 2.4-2.6
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net, Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re:
 [fricas-devel] Re: [fricas-devel]
 Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 01:24:36 -0000

On 10/24/2007 03:07 AM, Bill Page wrote:
> On 10/23/07, Ralf Hemmecke wrote:
>>>> Seems OK, but, of course the _domain_ 1..9 is then inappropriate in a
>>>> construction like
>>>>
>>>>    for i in 1..9 repeat ...
>>>>
>>>> don't you agree?
>>>>
>>> No. My proposal also includes the idea that the construct
>>>
>>>     for i in X repeat
>>>
>>> should expect X to be any domain that supplies a generator (like Aldor).
>> In Aldor, at the place of X there must be an element of type
>> "Generator(Something)", not a domain.
> 
> Can you give an example of an "element of type Generator(Something)"
> that is not a domain?

g: Generator(Integer) := generate {yield 0}

Take g.

>> Well, if you have somewhere a function
>>
>>    generator: T -> Generator(Something)
>>
>> (where T is the type of X) around, then Aldor should be able to silently
>> insert that function for you.
>>
> 
> I said only "like Aldor". In my proposal for an extension of Spad and
> the Axiom interpreter, I expect that X must supply this generator
> (iterator), i.e. satisfy some specific language-defined category that
> includes this export.
> 
>> I must say, I am totally happy with just *one* "for" construction.
> 
> That is exactly what I am suggesting. There should be no special cases
> of the "for" construct - only one, where X is as I describe.
> 
>> I am currently not seeing much use in the domain 1..9, i.e. the finite set
>> {1, ..., 9}.
>>
> 
> The point of this whole thread is discussion of suggested constructions like
> 
>   [ f(i,j) for i in 1..9 repeat for j in 1..4 ]
> 
> i.e. some kind of "cross-product" extension of the for-loop iteration
> such as the CROSS construction that Gaby described in Boot. Rather
> than extending the language with this sort of imperative syntax, I
> would like to write this in a more "functional" manner instead:
> 
>   [ f(x.1,x.2) for x in Product(1..9,1..4) ]
> 
> (Right now Product provides only 'selectfirst' and 'selectsecond'
> instead of .1 and .2 but that is easily fixed.)
> 
> Or better
> 
>   map(f,expand()$Product(1..9,1..4))
> 
> which requires some slightly more general implementation of function
> application over such domains.
> 
> Regards,
> Bill Page.

Hmmm, didn't you like

http://lists.gnu.org/archive/html/axiom-math/2007-10/msg00023.html

main(): () == {
     import from Z, Product(Z, Z);
     s1: Segment Z := 1..3;
     s2: Segment Z := 11..12;
     for ab in s1 * s2 repeat {
         (a, b) := ab;
         stdout << a << ", " << b << newline;
     }
}

???

What you want is available now and no need of 1..9 being a domain.

Ralf



From MAILER-DAEMON Tue Oct 23 21:29:55 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkV4E-0004dA-Va
	for mharc-axiom-math@gnu.org; Tue, 23 Oct 2007 21:29:55 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkV4C-0004cs-QM
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 21:29:52 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkV4B-0004cV-GO
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 21:29:52 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkV4B-0004cR-8e
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 21:29:51 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39]
	helo=smtpauthhost.risc.uni-linz.ac.at)
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1IkV4A-0004Hl-M3
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 21:29:51 -0400
Received: from [193.170.38.119] (hemmecke@woodpecker.risc.uni-linz.ac.at
	[193.170.38.119]) (authenticated bits=0)
	by smtpauthhost.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with
	ESMTP id l9O1TbTo031932
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Wed, 24 Oct 2007 03:29:37 +0200
Message-ID: <471E9FFF.5050203@hemmecke.de>
Date: Wed, 24 Oct 2007 03:29:35 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.6 (X11/20070728)
MIME-Version: 1.0
To: Bill Page <bill.page@newsynthesis.org>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>	
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>	
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>	
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>	
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>	
	<471D449F.4020305@hemmecke.de>	
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>	
	<471E8D7E.6070801@hemmecke.de>	
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>	
	<471E957A.1040403@hemmecke.de>
	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
In-Reply-To: <fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: by monty-python.gnu.org: Linux 2.4-2.6
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net, Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re:
 [fricas-devel] Re: [fricas-devel]
 Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 01:29:53 -0000

>   [ f(x.1,x.2) for x in Product(1..9,1..4) ]

Take my implementation from

http://lists.gnu.org/archive/html/axiom-math/2007-10/msg00023.html

then I don't see a reason (in Aldor) why it shouldn't even be possible 
to say

[f x for x in (1..9)*(1..4)]

where f: (Integer, Integer) -> Something.

Ralf



From MAILER-DAEMON Tue Oct 23 21:46:31 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkVKI-0003Xl-QK
	for mharc-axiom-math@gnu.org; Tue, 23 Oct 2007 21:46:30 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkVKH-0003VB-CC
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 21:46:29 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkVKG-0003TW-MW
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 21:46:28 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkVKG-0003TF-J4
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 21:46:28 -0400
Received: from nf-out-0910.google.com ([64.233.182.189])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1IkVKG-0000bq-21
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 21:46:28 -0400
Received: by nf-out-0910.google.com with SMTP id 30so47065nfu
	for <axiom-math@nongnu.org>; Tue, 23 Oct 2007 18:46:27 -0700 (PDT)
Received: by 10.86.25.17 with SMTP id 17mr51333fgy.1193190386748;
	Tue, 23 Oct 2007 18:46:26 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Tue, 23 Oct 2007 18:46:26 -0700 (PDT)
Message-ID: <fbcd16d40710231846m10bbea87o2e18bf9587cdd19b@mail.gmail.com>
Date: Tue, 23 Oct 2007 21:46:26 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: fricas-devel@googlegroups.com
In-Reply-To: <E1IkUrt-0002Mr-00@hera.math.uni.wroc.pl>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
	<E1IkUrt-0002Mr-00@hera.math.uni.wroc.pl>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org,
	Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
	[fricas-devel] Re: [fricas-devel] Re: iterators and cartesian
	product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 01:46:29 -0000

On 10/23/07, Waldek Hebisch wrote:
>
> Bill Page wrote:
> > Yes, under this proposal '1..9' would be a domain consisting of the
> > set of the first 9 positive integers. I want to consider the view that
> > this is the same as thinking of 'PositiveInteger' as a sub-domain of
> > 'Integer'. So like 'PositiveInteger', '1..9' would inherit some of the
> > structure of Integer, specifically 'OrderedSet', plus exports from
> > 'Finite' and the operations 'high', 'low' and 'incr' of
> > 'SegmentCategory'. However 'SEGMENT', 'BY' and 'convert' of the
> > existing 'SegmentCategory' would have to become domain constructors.
> >
> > In general I am wondering about "set-like" objects and whether these
> > should always be modeled as domains.
> >
>
> I must say that I find this idea very problematic.  Why?  It seems
> that you require automatic convertions between normal data and types.

Can you elaborate on the distinction between "normal data" and
"types". What is an example of such a conversion?

I have considered for example that perhaps '1..9' should actually be
an object of type 'Segment(PositiveInteger)' as it is now, but that
one should be able to (automatically) coerce such an object to an
equivalent domain. Martin Rubey has given an example of such a
construction in Aldor. Perhaps to extend Spad to make this possible
might not be too difficult?

> Even if you can avoid convertions (say by working excusively with
> types) you are likely to need overloaded operations on types.

So far in what I have proposed I do not think I require any such
"overloaded operations on types", but let me imagine what you might
mean. We would like of course operations like 'union' on Set, but if
sets { } are domains then 'union' must be a domain constructor. The
fundamental problem that we would have I think is dereferencing (and
evaluation) of such type expressions, i.e.

  {1,2,3} union {4,5}  = {1,2} union {3,4,5} = {1,2,3,4,5}

In Spad (and Aldor) as they exist now, I think this would be very
problematic if one tried to carry out my suggestion that *all*
set-like objects be implemented as domains.

> It looks that you want violate what I consider to be very useful
> limitation of Spad (see below).  You can avoid most problems
> working with objects as demostrated by Aldor generators (general
> generators are hard to implement efficiently, but at least can be
> implemented and difficulties are well understood).
>
> Now, why I do not want to allow overloading of Spad that constructors
> (one may think that builtin constructors are overloaded, but builtins
> are special, and they are really not overloaded but rather variadic).

Gaby has suggested a construction such as

   X : List Type := [Integer, Float, String]

so writing

    Product [1..3,2..4,3..5]

is not problematic as far as the arity of the domain constructor is concerned.

> This restriction means that overloads can be statically determinded
> by a rather simple algorithm working separately on each function.
> With overloaded types it seems only global constraint solving
> could work, which is much more complex.  One might think that
> difficulties of implementation could be ignored.  But I am affraid
> that humans may have even more problems with overloaded types.
>

Can you give an example of a construction that would cause such problems?

Regards,
Bill Page.



From MAILER-DAEMON Tue Oct 23 21:56:50 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkVUI-0002Ju-Oe
	for mharc-axiom-math@gnu.org; Tue, 23 Oct 2007 21:56:50 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkVUH-0002Jn-DX
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 21:56:49 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkVUF-0002Ja-1m
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 21:56:48 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkVUE-0002JX-Tq
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 21:56:46 -0400
Received: from mu-out-0910.google.com ([209.85.134.188])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1IkVUE-0003Hj-Db
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 21:56:46 -0400
Received: by mu-out-0910.google.com with SMTP id w8so63454mue
	for <axiom-math@nongnu.org>; Tue, 23 Oct 2007 18:56:45 -0700 (PDT)
Received: by 10.86.36.11 with SMTP id j11mr50729fgj.1193191004549;
	Tue, 23 Oct 2007 18:56:44 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Tue, 23 Oct 2007 18:56:44 -0700 (PDT)
Message-ID: <fbcd16d40710231856n7f5379f6r52c31da01d1d5c18@mail.gmail.com>
Date: Tue, 23 Oct 2007 21:56:44 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: fricas-devel@googlegroups.com
In-Reply-To: <471E9EC1.3090707@hemmecke.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<471D449F.4020305@hemmecke.de>
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<471E957A.1040403@hemmecke.de>
	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
	<471E9EC1.3090707@hemmecke.de>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org,
	Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
	[fricas-devel] Re: [fricas-devel] Re: [fricas-devel] Re:
	iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 01:56:49 -0000

On 10/23/07, Ralf Hemmecke wrote:
>
> On 10/24/2007 03:07 AM, Bill Page wrote:
> > On 10/23/07, Ralf Hemmecke wrote:
> >>>> Seems OK, but, of course the _domain_ 1..9 is then inappropriate in a
> >>>> construction like
> >>>>
> >>>>    for i in 1..9 repeat ...
> >>>>
> >>>> don't you agree?
> >>>>
> >>> No. My proposal also includes the idea that the construct
> >>>
> >>>     for i in X repeat
> >>>
> >>> should expect X to be any domain that supplies a generator (like Aldor).
> >> In Aldor, at the place of X there must be an element of type
> >> "Generator(Something)", not a domain.
> >
> > Can you give an example of an "element of type Generator(Something)"
> > that is not a domain?
>
> g: Generator(Integer) := generate {yield 0}
>
> Take g.
>

Ok, yes I see what you mean. But this requires some new basic
functionality in the language, right? Contrast this with 'Stream' in
Axiom which (so far as I understand) does not require such an
extension of Spad.

> ...
> Hmmm, didn't you like
>
> http://lists.gnu.org/archive/html/axiom-math/2007-10/msg00023.html
>
> main(): () == {
>      import from Z, Product(Z, Z);
>      s1: Segment Z := 1..3;
>      s2: Segment Z := 11..12;
>      for ab in s1 * s2 repeat {
>          (a, b) := ab;
>          stdout << a << ", " << b << newline;
>      }
> }
>

Yes, that is "ok" but ... we already have a domain construction
Product in the Axiom library that takes two *domains* as it's
parameters.

> ???
>
> What you want is available now and no need of 1..9 being a domain.
>

I did not intend to introduce any new constructor for Product.

Regards,
Bill Page.



From MAILER-DAEMON Tue Oct 23 22:13:13 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkVk9-0006ct-FR
	for mharc-axiom-math@gnu.org; Tue, 23 Oct 2007 22:13:13 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkVk7-0006cm-Lg
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 22:13:11 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkVk7-0006ca-6d
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 22:13:11 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkVk7-0006cX-42
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 22:13:11 -0400
Received: from nf-out-0910.google.com ([64.233.182.191])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1IkVk6-0006yZ-Uc
	for axiom-math@nongnu.org; Tue, 23 Oct 2007 22:13:11 -0400
Received: by nf-out-0910.google.com with SMTP id 30so52882nfu
	for <axiom-math@nongnu.org>; Tue, 23 Oct 2007 19:13:09 -0700 (PDT)
Received: by 10.86.49.13 with SMTP id w13mr53882fgw.1193191989539;
	Tue, 23 Oct 2007 19:13:09 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Tue, 23 Oct 2007 19:13:09 -0700 (PDT)
Message-ID: <fbcd16d40710231913y26b6f05ub2237d7727eaa081@mail.gmail.com>
Date: Tue, 23 Oct 2007 22:13:09 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: "Ralf Hemmecke" <ralf@hemmecke.de>
In-Reply-To: <471E9FFF.5050203@hemmecke.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<471D449F.4020305@hemmecke.de>
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<471E957A.1040403@hemmecke.de>
	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
	<471E9FFF.5050203@hemmecke.de>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net, Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re:
	[fricas-devel] Re: [fricas-devel] Re: iterators and cartesian
	product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 02:13:11 -0000

On 10/23/07, Ralf Hemmecke  wrote:
> >   [ f(x.1,x.2) for x in Product(1..9,1..4) ]
>
> Take my implementation from
>
> http://lists.gnu.org/archive/html/axiom-math/2007-10/msg00023.html
>
> then I don't see a reason (in Aldor) why it shouldn't even be possible
> to say
>
> [f x for x in (1..9)*(1..4)]
>
> where f: (Integer, Integer) -> Something.
>

Yes, this would be (almost) possible now in Axiom/Spad if we allow the
'* to be an export of Segment and the signature of '*' to be:

    * : (%,%) - > List DirectProduct(2,S)

Let's also provide

  *:(List DirectProduct(2,S),%) -> List DirectProduct(3,S)

etc. I think the implementation is fairly obvious.

Not such a bad idea!

In the Axiom interpreter (but not in Spad?) we can also write a Stream
as an iterator, e.g.

(1) -> x:=repeating [1,2,3]

         _____
   (1)  [1,2,3]
                                                 Type: Stream PositiveInteger
(2) -> [i for i in x]

   (2)  [1,2,3,1,2,3,1,2,3,1,...]
                                                 Type: Stream PositiveInteger

So it would be possible to replace List DirectProduct ... with Stream
DirectProduct.

But as I said earlier in this thread, this sort of construction is not
as general as I would hope for. How would I write for example?

  [i for i in Product(OVAR [a,b,c], 1..3)]

              [ (a,1), (a,2), (a,3), (b,1), ... ]

Regards,
Bill Page.



From MAILER-DAEMON Wed Oct 24 04:03:25 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkbD2-00052y-VY
	for mharc-axiom-math@gnu.org; Wed, 24 Oct 2007 04:03:25 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkbD1-00050h-Dk
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 04:03:23 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkbCw-0004uB-Is
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 04:03:23 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkbCw-0004tt-Ag
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 04:03:18 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1IkbCv-0001hD-N7
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 04:03:18 -0400
Received: from joan.univie.ac.at ([131.130.3.110] helo=joan.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.68)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1IkbCu-0004DH-01; Wed, 24 Oct 2007 10:03:16 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by joan.univie.ac.at with esmtp (Exim 4.68)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1IkbCt-0000vG-VB; Wed, 24 Oct 2007 10:03:15 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: fricas-devel@googlegroups.com
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<471D449F.4020305@hemmecke.de>
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<471E957A.1040403@hemmecke.de>
	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
	<471E9EC1.3090707@hemmecke.de>
	<fbcd16d40710231856n7f5379f6r52c31da01d1d5c18@mail.gmail.com>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 24 Oct 2007 10:03:15 +0200
In-Reply-To: <fbcd16d40710231856n7f5379f6r52c31da01d1d5c18@mail.gmail.com>
Message-ID: <9q7ildkkho.fsf_-_@aquin.mat.univie.ac.at>
Lines: 33
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: by monty-python.gnu.org: Linux 2.6, seldom 2.4 (older, 4)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org
Subject: [Axiom-math] generators, was: Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 08:03:23 -0000

"Bill Page" <bill.page@newsynthesis.org> writes:

> > > Can you give an example of an "element of type Generator(Something)"
> > > that is not a domain?
> >
> > g: Generator(Integer) := generate {yield 0}
> >
> > Take g.
> >
> 
> Ok, yes I see what you mean. 


Just curious: can something of type Generator(Something) ever be a domain?
(Probably yes...)

> But this requires some new basic functionality in the language, right?

YES.  But, it is one of the goals to improve SPAD anyway.  OK, I can only hope
that our compiler gurus have already enough expertise.  The only thing I can do
is to advertise the language design of Aldor...

I was looking into how generators are implemented in lisp.  One of the most
promising links I found is

http://groups.google.com/group/comp.lang.lisp/browse_thread/thread/fbda37620268811/c558bf7e6feb5d55?hl=en&lnk=st&q=generator+monadic+continuations+defun#

The code in the final message looks really short, but I did not yet understand
it.

Martin






From MAILER-DAEMON Wed Oct 24 07:50:44 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ikel2-0001sS-JF
	for mharc-axiom-math@gnu.org; Wed, 24 Oct 2007 07:50:44 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ikel0-0001qN-3c
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 07:50:42 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ikeky-0001pB-PC
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 07:50:40 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ikeky-0001p2-9K
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 07:50:40 -0400
Received: from smtp.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Ikekx-0004wr-Rv
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 07:50:40 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id 505E846DE27;
	Wed, 24 Oct 2007 06:50:36 -0500 (CDT)
Date: Wed, 24 Oct 2007 06:49:31 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: fricas-devel@googlegroups.com
In-Reply-To: <E1IkTlX-0000el-00@hera.math.uni.wroc.pl>
Message-ID: <Pine.LNX.4.64.0710240647240.6939@gauss.cs.tamu.edu>
References: <E1IkTlX-0000el-00@hera.math.uni.wroc.pl>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 11:50:42 -0000

On Wed, 24 Oct 2007, Waldek Hebisch wrote:

| 
| Gabriel Dos Reis wrote:
| > 
| > BTW, a general approach I have been working on for some time now is to
| > have a domain ParseForm, for parse forms i.e. parse trees after they
| > have been property annotated, at the Spad level, and define a
| > protocol to construct new entities out of ParseForms.  This ParseForm
| > domain is different from InputForm (which represents only expressions).
| > That way people can extend the interpreter in ways unimagined by
| > OpenAxiom developers, and move lot of code out of the interpreter itself.
| > The tricky part, of course, is to nail down the protocol so that it is
| > both useful and safe enough.
| > 
| 
| I wonder how do you want to handle typechecking:

That is part of the protocol.

| is ParseForm intended
| to be essentially untyped representation which is passed instead of
| strings to evaluator (which annotates it with types)?

It is a a partially typed abstract syntax tree (like InputForm), and
operations that take ParseForm are responsible to conduct the typing
and return something of a domain that be used for further typing.

|  Or is ParseForm
| (including its evaluation) intended to obey normal Spad type rules?

-- Gaby



From MAILER-DAEMON Wed Oct 24 07:51:44 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ikem0-0002fg-S5
	for mharc-axiom-math@gnu.org; Wed, 24 Oct 2007 07:51:44 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ikem0-0002fb-4u
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 07:51:44 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ikely-0002fM-T1
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 07:51:43 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ikely-0002fJ-Po
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 07:51:42 -0400
Received: from mailhost.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Ikelx-0005If-G5
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 07:51:41 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id AD1D446DE27;
	Wed, 24 Oct 2007 06:51:40 -0500 (CDT)
Date: Wed, 24 Oct 2007 06:50:35 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: Bill Page <bill.page@newsynthesis.org>
In-Reply-To: <fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0710240649530.6939@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<87fy03jt67.fsf_-_@nerim.fr>
	<9qfy0374yd.fsf@aquin.mat.univie.ac.at>
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<471D449F.4020305@hemmecke.de>
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com> 
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re:
 [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 11:51:44 -0000

On Tue, 23 Oct 2007, Bill Page wrote:

| On 10/23/07, Ralf Hemmecke wrote:
| >
| > >>> |   Product(1..9,1..4)
| > >>> What would be its meaning?
| > >
| > > If '1..9' and '1..4' are domains then the meaning of 'Product' is
| > > already given by the existing domain constructor 'Product' in the
| > > Axiom library
| >
| > Seems OK, but, of course the _domain_ 1..9 is then inappropriate in a
| > construction like
| >
| >    for i in 1..9 repeat ...
| >
| > don't you agree?
| >
| 
| No. My proposal also includes the idea that the construct
| 
|     for i in X repeat
| 
| should expect X to be any domain that supplies a generator (like Aldor).

so what wouold

       for i in PositiveInteger repeat

does concretely?

-- Gaby



From MAILER-DAEMON Wed Oct 24 08:01:04 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ikev2-0008Ap-HF
	for mharc-axiom-math@gnu.org; Wed, 24 Oct 2007 08:01:04 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ikeuz-00088D-CS
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 08:01:01 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ikeux-00085K-0D
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 08:01:00 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ikeuw-000856-OA
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 08:00:58 -0400
Received: from postal.cs.tamu.edu ([128.194.138.100])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Ikeuw-0000IY-6l
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 08:00:58 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id 5BA9046DE27;
	Wed, 24 Oct 2007 07:00:57 -0500 (CDT)
Date: Wed, 24 Oct 2007 06:59:52 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: fricas-devel@googlegroups.com
In-Reply-To: <fbcd16d40710231856n7f5379f6r52c31da01d1d5c18@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0710240657460.6939@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<471D449F.4020305@hemmecke.de>
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<471E957A.1040403@hemmecke.de>
	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
	<471E9EC1.3090707@hemmecke.de>
	<fbcd16d40710231856n7f5379f6r52c31da01d1d5c18@mail.gmail.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re:
 [fricas-devel] Re: [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 12:01:02 -0000

On Tue, 23 Oct 2007, Bill Page wrote:

| 
| On 10/23/07, Ralf Hemmecke wrote:
| >
| > On 10/24/2007 03:07 AM, Bill Page wrote:
| > > On 10/23/07, Ralf Hemmecke wrote:
| > >>>> Seems OK, but, of course the _domain_ 1..9 is then inappropriate in a
| > >>>> construction like
| > >>>>
| > >>>>    for i in 1..9 repeat ...
| > >>>>
| > >>>> don't you agree?
| > >>>>
| > >>> No. My proposal also includes the idea that the construct
| > >>>
| > >>>     for i in X repeat
| > >>>
| > >>> should expect X to be any domain that supplies a generator (like Aldor).
| > >> In Aldor, at the place of X there must be an element of type
| > >> "Generator(Something)", not a domain.
| > >
| > > Can you give an example of an "element of type Generator(Something)"
| > > that is not a domain?
| >
| > g: Generator(Integer) := generate {yield 0}
| >
| > Take g.
| >
| 
| Ok, yes I see what you mean. But this requires some new basic
| functionality in the language, right?

I find  semi co-coroutines a possibility for Spad.

| Contrast this with 'Stream' in
| Axiom which (so far as I understand) does not require such an
| extension of Spad.

Stream is an *example* of a generator like domain.  I would not want
to turn my BinaryTree into a Stream before iterating over it.

-- Gaby



From MAILER-DAEMON Wed Oct 24 08:03:45 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ikexd-0001WQ-7k
	for mharc-axiom-math@gnu.org; Wed, 24 Oct 2007 08:03:45 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ikexc-0001WI-1H
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 08:03:44 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ikexa-0001W2-M1
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 08:03:43 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ikexa-0001Vz-IR
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 08:03:42 -0400
Received: from smtp.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1IkexZ-0001YT-SV
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 08:03:42 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id E7E7146DE27;
	Wed, 24 Oct 2007 07:03:40 -0500 (CDT)
Date: Wed, 24 Oct 2007 07:02:35 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: fricas-devel@googlegroups.com
In-Reply-To: <fbcd16d40710231913y26b6f05ub2237d7727eaa081@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0710240700510.6939@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<471D449F.4020305@hemmecke.de>
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<471E957A.1040403@hemmecke.de>
	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
	<471E9FFF.5050203@hemmecke.de>
	<fbcd16d40710231913y26b6f05ub2237d7727eaa081@mail.gmail.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re:
 [fricas-devel] Re: [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 12:03:44 -0000

On Tue, 23 Oct 2007, Bill Page wrote:

| But as I said earlier in this thread, this sort of construction is not
| as general as I would hope for. How would I write for example?
| 
|   [i for i in Product(OVAR [a,b,c], 1..3)]
| 
|               [ (a,1), (a,2), (a,3), (b,1), ... ]

My fundemantal issue to understand is making 1..9 a domain.  I'm fine
with no having the most general construct, but I'm concerned with
semantics and typeing rules.  In general, I'm suspicious of any
extension that is driven by just syntax.

-- Gaby



From MAILER-DAEMON Wed Oct 24 08:17:23 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkfAp-0003n9-4L
	for mharc-axiom-math@gnu.org; Wed, 24 Oct 2007 08:17:23 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkfAn-0003lZ-D0
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 08:17:21 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkfAl-0003km-14
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 08:17:20 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkfAk-0003kZ-S6
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 08:17:18 -0400
Received: from mailhost.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1IkfAk-0005P0-Is
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 08:17:18 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id 8FEF646DE01;
	Wed, 24 Oct 2007 07:17:17 -0500 (CDT)
Date: Wed, 24 Oct 2007 07:16:12 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: fricas-devel@googlegroups.com
In-Reply-To: <9q7ildkkho.fsf_-_@aquin.mat.univie.ac.at>
Message-ID: <Pine.LNX.4.64.0710240714171.6939@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<471D449F.4020305@hemmecke.de>
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<471E957A.1040403@hemmecke.de>
	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
	<471E9EC1.3090707@hemmecke.de>
	<fbcd16d40710231856n7f5379f6r52c31da01d1d5c18@mail.gmail.com>
	<9q7ildkkho.fsf_-_@aquin.mat.univie.ac.at>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [fricas-devel] generators,
 was: Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 12:17:22 -0000

On Wed, 24 Oct 2007, Martin Rubey wrote:

| The only thing I can do is to advertise the language design of Aldor...

I suspect that the compiler gurus already know Aldor's design choices.
It may be that they don't want to replicate, or they would like to
make slighly different choices...

-- Gaby



From MAILER-DAEMON Wed Oct 24 08:39:03 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkfVn-0000do-Az
	for mharc-axiom-math@gnu.org; Wed, 24 Oct 2007 08:39:03 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkfVl-0000b5-3C
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 08:39:01 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkfVj-0000Yh-Ic
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 08:39:00 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkfVj-0000YU-75
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 08:38:59 -0400
Received: from postal.cs.tamu.edu ([128.194.138.100])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1IkfVi-0004EM-RT
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 08:38:59 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id B7CA346DE27;
	Wed, 24 Oct 2007 07:38:57 -0500 (CDT)
Date: Wed, 24 Oct 2007 07:37:52 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: Martin Rubey <martin.rubey@univie.ac.at>
In-Reply-To: <9q8x5sk7s9.fsf@aquin.mat.univie.ac.at>
Message-ID: <Pine.LNX.4.64.0710240737160.6939@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<471D449F.4020305@hemmecke.de>
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<471E957A.1040403@hemmecke.de>
	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
	<471E9EC1.3090707@hemmecke.de>
	<fbcd16d40710231856n7f5379f6r52c31da01d1d5c18@mail.gmail.com>
	<9q7ildkkho.fsf_-_@aquin.mat.univie.ac.at>
	<Pine.LNX.4.64.0710240714171.6939@gauss.cs.tamu.edu>
	<9q8x5sk7s9.fsf@aquin.mat.univie.ac.at>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] generators,
 was: Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 12:39:01 -0000

On Wed, 24 Oct 2007, Martin Rubey wrote:

| Gabriel Dos Reis <gdr@cs.tamu.edu> writes:
| 
| > On Wed, 24 Oct 2007, Martin Rubey wrote:
| > 
| > | The only thing I can do is to advertise the language design of Aldor...
| > 
| > I suspect that the compiler gurus already know Aldor's design choices.
| > It may be that they don't want to replicate, or they would like to
| > make slighly different choices...
| 
| Yes.  But I have the impression that so far the compiler gurus did not write
| much mathematical code in Aldor or SPAD.

Thanks for the credit.

-- Gaby



From MAILER-DAEMON Wed Oct 24 09:13:11 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ikg2p-0004S9-0T
	for mharc-axiom-math@gnu.org; Wed, 24 Oct 2007 09:13:11 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ikg2n-0004R4-9l
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 09:13:09 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ikg2h-0004OA-AI
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 09:13:07 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ikg2h-0004Nu-5F
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 09:13:03 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1IkfUX-0003ZM-9I
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 08:37:45 -0400
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.68)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1IkfUV-0004OZ-40; Wed, 24 Oct 2007 14:37:43 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.68)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1IkfUV-0006Ol-2P; Wed, 24 Oct 2007 14:37:43 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: Gabriel Dos Reis <gdr@cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<471D449F.4020305@hemmecke.de>
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<471E957A.1040403@hemmecke.de>
	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
	<471E9EC1.3090707@hemmecke.de>
	<fbcd16d40710231856n7f5379f6r52c31da01d1d5c18@mail.gmail.com>
	<9q7ildkkho.fsf_-_@aquin.mat.univie.ac.at>
	<Pine.LNX.4.64.0710240714171.6939@gauss.cs.tamu.edu>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 24 Oct 2007 14:37:42 +0200
In-Reply-To: <Pine.LNX.4.64.0710240714171.6939@gauss.cs.tamu.edu>
Message-ID: <9q8x5sk7s9.fsf@aquin.mat.univie.ac.at>
Lines: 52
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: by monty-python.gnu.org: Linux 2.6, seldom 2.4 (older, 4)
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] generators,
	was: Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 13:13:09 -0000

Gabriel Dos Reis <gdr@cs.tamu.edu> writes:

> On Wed, 24 Oct 2007, Martin Rubey wrote:
> 
> | The only thing I can do is to advertise the language design of Aldor...
> 
> I suspect that the compiler gurus already know Aldor's design choices.
> It may be that they don't want to replicate, or they would like to
> make slighly different choices...

Yes.  But I have the impression that so far the compiler gurus did not write
much mathematical code in Aldor or SPAD.  Of course, this does *not* mean that
I believe they wouldn't like to, or they would not know how to or some such.

All I'm saying is: I believe that I have a little experience to judge the
abilities and shortcomings of Aldor and SPAD when used as a tool for
implementing certain mathematics.(*)

I found, that I can live with the shortcomings of Aldor I encountered so far
(**), but I cannot really live with the shortcomings of SPAD.  Mostly, I miss
types being truly first class objects.

So far, I dislike most extensions to the language presented so far in the
mailing list, since what they provide, Aldor provides easily, or no real use
cases were given.  And, I should hurry to add, I personally also made proposals
that I find very stupid meanwhile.  Christian Aistleitner's insights helped a
lot here.

If you would like to make different choices, I'd very much like to know why.
If you have an idea why the Aldor (language, not compiler!)  designers didn't
take that choice, even better.



Martin


* I wrote the guessing package, which seems to work pretty well and outperforms
  all other similar packages so far.

  Together with Ralf, I wrote a pretty large library covering a lot of ground
  in combinatorial generation.

  During the workshop this year, we designed the basic structure for a package
  dealing with lambda rings, symmetric functions, and Hopf algebras.

** These would be, for example: 

   + the impossibility to have an AbelianMonoid be a Monoid
   + certain shortcomings of Tuples, as pointed out by Ralf
   + certain problems with dynamically creating new domains - although the
     current compiler allows it, only the language doesn't :-)




From MAILER-DAEMON Wed Oct 24 09:41:55 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkgUd-0006HA-81
	for mharc-axiom-math@gnu.org; Wed, 24 Oct 2007 09:41:55 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkgUb-0006Go-4e
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 09:41:53 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkgUY-0006Ga-HF
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 09:41:52 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkgUY-0006GX-Da
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 09:41:50 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1IkgUX-0000VK-KZ
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 09:41:50 -0400
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.68)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1IkgUU-0003Am-Ux; Wed, 24 Oct 2007 15:41:46 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.68)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1IkgUU-0000k1-Ti; Wed, 24 Oct 2007 15:41:46 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: Gabriel Dos Reis <gdr@cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<471D449F.4020305@hemmecke.de>
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<471E957A.1040403@hemmecke.de>
	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
	<471E9EC1.3090707@hemmecke.de>
	<fbcd16d40710231856n7f5379f6r52c31da01d1d5c18@mail.gmail.com>
	<9q7ildkkho.fsf_-_@aquin.mat.univie.ac.at>
	<Pine.LNX.4.64.0710240714171.6939@gauss.cs.tamu.edu>
	<9q8x5sk7s9.fsf@aquin.mat.univie.ac.at>
	<Pine.LNX.4.64.0710240737160.6939@gauss.cs.tamu.edu>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 24 Oct 2007 15:41:46 +0200
In-Reply-To: <Pine.LNX.4.64.0710240737160.6939@gauss.cs.tamu.edu>
Message-ID: <9qhckgiq91.fsf@aquin.mat.univie.ac.at>
Lines: 34
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: by monty-python.gnu.org: Linux 2.6, seldom 2.4 (older, 4)
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] generators,
	was: Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 13:41:53 -0000

Gabriel Dos Reis <gdr@cs.tamu.edu> writes:

> | Yes.  But I have the impression that so far the compiler gurus did not
> | write much mathematical code in Aldor or SPAD.
> 
> Thanks for the credit.

Since this seems to imply that I'm mistaken, I apologize.  So far, I thought
you contributed a lot to the build system, to analyzing the compiler and the
language. These are all things I could not possibly do, I do not have the
expertise.  I didn't see much algebra code by Waldek, either.  (I am not
speaking of fixing bugs, he fixed many many many.  I was only speaking of the
design of new packages / domains / etc.)  Still, you probably know that I value
Waldek as one of the most important axiom contributors.  And I'm pretty sure
that, once time is ripe, Waldek or his students will provide important
contributions, it suffices to look at his "literature" webpage.  Same goes for
you.

I did certainly not want to insult anybody.  If I did, I apologize.  I tried to
reply to

> | The only thing I can do is to advertise the language design of Aldor...
> 
> I suspect that the compiler gurus already know Aldor's design choices.  It
> may be that they don't want to replicate, or they would like to make slighly
> different choices...

as well as I could, and obviously, I failed miserably.

Just curious, could you please refresh my memory?

Martin






From MAILER-DAEMON Wed Oct 24 10:07:27 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkgtL-000464-1p
	for mharc-axiom-math@gnu.org; Wed, 24 Oct 2007 10:07:27 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkgtJ-00043P-82
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:07:25 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkgtG-0003zQ-Jj
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:07:24 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkgtG-0003zI-AP
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:07:22 -0400
Received: from nf-out-0910.google.com ([64.233.182.188])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1IkgtF-0001hB-QL
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:07:21 -0400
Received: by nf-out-0910.google.com with SMTP id 30so210545nfu
	for <axiom-math@nongnu.org>; Wed, 24 Oct 2007 07:07:20 -0700 (PDT)
Received: by 10.86.89.4 with SMTP id m4mr487980fgb.1193234840498;
	Wed, 24 Oct 2007 07:07:20 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Wed, 24 Oct 2007 07:07:20 -0700 (PDT)
Message-ID: <fbcd16d40710240707j7e32a577n9baea6afcb58796e@mail.gmail.com>
Date: Wed, 24 Oct 2007 10:07:20 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: fricas-devel@googlegroups.com
In-Reply-To: <Pine.LNX.4.64.0710240657460.6939@gauss.cs.tamu.edu>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<471D449F.4020305@hemmecke.de>
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<471E957A.1040403@hemmecke.de>
	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
	<471E9EC1.3090707@hemmecke.de>
	<fbcd16d40710231856n7f5379f6r52c31da01d1d5c18@mail.gmail.com>
	<Pine.LNX.4.64.0710240657460.6939@gauss.cs.tamu.edu>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
	[fricas-devel] Re: [fricas-devel] Re: [fricas-devel] Re:
	iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 14:07:25 -0000

On 10/24/07, Gabriel Dos Reis wrote:
> ...
> Stream is an *example* of a generator like domain.  I would not want
> to turn my BinaryTree into a Stream before iterating over it.
>

It seems very natural to me to write:

    t:BinaryTree Integer
    t:= ...
    for i in t repeat ...

but perhaps the meaning is not so clear. Over exact what objects are
we iterating? There are several operations in BinaryTree(S) that
produce 'List S' or 'List %' output, for example:

leaves : % -> List S
nodes : % -> List %
children : % -> List %
members : % -> List S
parts : % -> List S

In any case right now in Axiom you are forced to turn your binary tree
into a List which is surely worse then returning a Stream, no?

Unfortunately there is a bug in 'members':

(1) -> t:BinaryTree(Integer)
                                                                   Type: Void
(2) -> t:=binaryTree(10)

   (2)  10
                                                     Type: BinaryTree Integer
(3) -> t:=binaryTree(t,3,binaryTree 20)

   (3)  [10,3,20]
                                                     Type: BinaryTree Integer
(4) -> members t
Function:  parts : % -> List Integer is missing from domain: BinaryTree Integer
   Internal Error
   The function parts with signature (List (Integer))$ is missing from
      domain BinaryTree(Integer)

--------

Regards,
Bill Page.



From MAILER-DAEMON Wed Oct 24 10:08:30 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkguM-0004ts-5N
	for mharc-axiom-math@gnu.org; Wed, 24 Oct 2007 10:08:30 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkguL-0004tg-Ei
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:08:29 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkguJ-0004sK-U6
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:08:29 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkguJ-0004sH-On
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:08:27 -0400
Received: from nf-out-0910.google.com ([64.233.182.190])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1Ikge1-0003Kb-Cs
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 09:51:37 -0400
Received: by nf-out-0910.google.com with SMTP id 30so205251nfu
	for <axiom-math@nongnu.org>; Wed, 24 Oct 2007 06:51:36 -0700 (PDT)
Received: by 10.86.50.8 with SMTP id x8mr476158fgx.1193233895923;
	Wed, 24 Oct 2007 06:51:35 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Wed, 24 Oct 2007 06:51:35 -0700 (PDT)
Message-ID: <fbcd16d40710240651u549e3f22y4b97663aa9677c5@mail.gmail.com>
Date: Wed, 24 Oct 2007 09:51:35 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: "Gabriel Dos Reis" <gdr@cs.tamu.edu>
In-Reply-To: <Pine.LNX.4.64.0710240649530.6939@gauss.cs.tamu.edu>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<471D449F.4020305@hemmecke.de>
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<Pine.LNX.4.64.0710240649530.6939@gauss.cs.tamu.edu>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
	[fricas-devel] Re: [fricas-devel] Re: iterators and cartesian
	product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 14:08:29 -0000

On 10/24/07, Gabriel Dos Reis <gdr@cs.tamu.edu> wrote:
> On Tue, 23 Oct 2007, Bill Page wrote:
>
> | On 10/23/07, Ralf Hemmecke wrote:
> | >
> | > >>> |   Product(1..9,1..4)
> | > >>> What would be its meaning?
> | > >
> | > > If '1..9' and '1..4' are domains then the meaning of 'Product' is
> | > > already given by the existing domain constructor 'Product' in the
> | > > Axiom library
> | >
> | > Seems OK, but, of course the _domain_ 1..9 is then inappropriate in a
> | > construction like
> | >
> | >    for i in 1..9 repeat ...
> | >
> | > don't you agree?
> | >
> |
> | No. My proposal also includes the idea that the construct
> |
> |     for i in X repeat
> |
> | should expect X to be any domain that supplies a generator (like Aldor).
>
> so what wouold
>
>        for i in PositiveInteger repeat
>
> does concretely?
>

  '1..' is another (better?) name for PositiveInteger

So under my proposal 'for i in PositiveInteger repeat' should function
identically to the way

   for i in 1.. repeat

works now in the interpreter where '1..' denotes an object of
'UniversalSegment PositiveInteger'.

Regards,
Bill Page.



From MAILER-DAEMON Wed Oct 24 10:14:43 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ikh0N-00016l-Ln
	for mharc-axiom-math@gnu.org; Wed, 24 Oct 2007 10:14:43 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ikh0M-00016M-7P
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:14:42 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ikh0L-000163-J2
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:14:41 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ikh0L-00015z-GH
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:14:41 -0400
Received: from smtp.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Ikh0L-0004xm-3k
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:14:41 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id DA8A946DE01;
	Wed, 24 Oct 2007 09:14:38 -0500 (CDT)
Date: Wed, 24 Oct 2007 09:13:33 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: Bill Page <bill.page@newsynthesis.org>
In-Reply-To: <fbcd16d40710240651u549e3f22y4b97663aa9677c5@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0710240905560.6939@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl> 
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com> 
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<471D449F.4020305@hemmecke.de>
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com> 
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<Pine.LNX.4.64.0710240649530.6939@gauss.cs.tamu.edu>
	<fbcd16d40710240651u549e3f22y4b97663aa9677c5@mail.gmail.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re:
 [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 14:14:42 -0000

On Wed, 24 Oct 2007, Bill Page wrote:

| On 10/24/07, Gabriel Dos Reis <gdr@cs.tamu.edu> wrote:
| > On Tue, 23 Oct 2007, Bill Page wrote:
| >
| > | On 10/23/07, Ralf Hemmecke wrote:
| > | >
| > | > >>> |   Product(1..9,1..4)
| > | > >>> What would be its meaning?
| > | > >
| > | > > If '1..9' and '1..4' are domains then the meaning of 'Product' is
| > | > > already given by the existing domain constructor 'Product' in the
| > | > > Axiom library
| > | >
| > | > Seems OK, but, of course the _domain_ 1..9 is then inappropriate in a
| > | > construction like
| > | >
| > | >    for i in 1..9 repeat ...
| > | >
| > | > don't you agree?
| > | >
| > |
| > | No. My proposal also includes the idea that the construct
| > |
| > |     for i in X repeat
| > |
| > | should expect X to be any domain that supplies a generator (like Aldor).
| >
| > so what wouold
| >
| >        for i in PositiveInteger repeat
| >
| > does concretely?
| >
| 
|   '1..' is another (better?) name for PositiveInteger

No, it is not.  Both behave quite differently in many situations.

| So under my proposal 'for i in PositiveInteger repeat' should function
| identically to the way
| 
|    for i in 1.. repeat

so you want to treat a domain as being identical to its ordered list
of values.  But, a domain is not (just) its set of values.   About
about

      for i in List(Integer) repeat

or

      for n in BinaryTree(Integer) repeat

| works now in the interpreter where '1..' denotes an object of
| 'UniversalSegment PositiveInteger'.

But UniversalSegment is a *particular traversal view* of PositiveInteger.

-- Gaby



From MAILER-DAEMON Wed Oct 24 10:17:51 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ikh3P-00027N-9o
	for mharc-axiom-math@gnu.org; Wed, 24 Oct 2007 10:17:51 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ikh3L-00025I-RX
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:17:48 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ikh3G-00022y-S0
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:17:46 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ikh3G-00022f-5h
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:17:42 -0400
Received: from mailhost.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Ikh3E-0005tv-5g
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:17:41 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id E5A8C46DE01;
	Wed, 24 Oct 2007 09:17:38 -0500 (CDT)
Date: Wed, 24 Oct 2007 09:16:33 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: fricas-devel@googlegroups.com
In-Reply-To: <fbcd16d40710240707j7e32a577n9baea6afcb58796e@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0710240914200.6939@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<471D449F.4020305@hemmecke.de>
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<471E957A.1040403@hemmecke.de>
	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
	<471E9EC1.3090707@hemmecke.de>
	<fbcd16d40710231856n7f5379f6r52c31da01d1d5c18@mail.gmail.com>
	<Pine.LNX.4.64.0710240657460.6939@gauss.cs.tamu.edu>
	<fbcd16d40710240707j7e32a577n9baea6afcb58796e@mail.gmail.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re:
 [fricas-devel] Re: [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 14:17:50 -0000

On Wed, 24 Oct 2007, Bill Page wrote:

| 
| On 10/24/07, Gabriel Dos Reis wrote:
| > ...
| > Stream is an *example* of a generator like domain.  I would not want
| > to turn my BinaryTree into a Stream before iterating over it.
| >
| 
| It seems very natural to me to write:
| 
|     t:BinaryTree Integer
|     t:= ...
|     for i in t repeat ...
| 
| but perhaps the meaning is not so clear.

I don't see the `natural'-ness since a BinaryTree Integer has many
traversal views, with 3 of them being very popular.  Which one is more 
natural than the others and why?

-- Gaby



From MAILER-DAEMON Wed Oct 24 10:20:23 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ikh5q-0003is-QW
	for mharc-axiom-math@gnu.org; Wed, 24 Oct 2007 10:20:23 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ikh5p-0003hH-7t
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:20:21 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ikh5n-0003gM-Iw
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:20:20 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ikh5n-0003gG-FK
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:20:19 -0400
Received: from postal.cs.tamu.edu ([128.194.138.100])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Ikh5m-0006pe-8y
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:20:18 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id 5ACCF46DE27;
	Wed, 24 Oct 2007 09:20:17 -0500 (CDT)
Date: Wed, 24 Oct 2007 09:19:12 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: fricas-devel@googlegroups.com
In-Reply-To: <fbcd16d40710240707j7e32a577n9baea6afcb58796e@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0710240917150.6939@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<471D449F.4020305@hemmecke.de>
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<471E957A.1040403@hemmecke.de>
	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
	<471E9EC1.3090707@hemmecke.de>
	<fbcd16d40710231856n7f5379f6r52c31da01d1d5c18@mail.gmail.com>
	<Pine.LNX.4.64.0710240657460.6939@gauss.cs.tamu.edu>
	<fbcd16d40710240707j7e32a577n9baea6afcb58796e@mail.gmail.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re:
 [fricas-devel] Re: [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 14:20:21 -0000

On Wed, 24 Oct 2007, Bill Page wrote:

| In any case right now in Axiom you are forced to turn your binary tree
| into a List which is surely worse then returning a Stream, no?

Yes, but I never argued that was right or ideal.

| Unfortunately there is a bug in 'members':

this we want to fix, independently of whether the interface is ideal
or not.  are you willing to open an issue for this? Thanks!

-- Gaby



From MAILER-DAEMON Wed Oct 24 10:23:37 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ikh8z-0006Vm-IJ
	for mharc-axiom-math@gnu.org; Wed, 24 Oct 2007 10:23:37 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ikh8x-0006To-Bl
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:23:35 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ikh8v-0006Sa-E2
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:23:34 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ikh8v-0006SU-8u
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:23:33 -0400
Received: from nf-out-0910.google.com ([64.233.182.186])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1Ikh8u-0007hq-UL
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:23:33 -0400
Received: by nf-out-0910.google.com with SMTP id 30so215935nfu
	for <axiom-math@nongnu.org>; Wed, 24 Oct 2007 07:23:32 -0700 (PDT)
Received: by 10.86.89.4 with SMTP id m4mr517622fgb.1193235811561;
	Wed, 24 Oct 2007 07:23:31 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Wed, 24 Oct 2007 07:23:31 -0700 (PDT)
Message-ID: <fbcd16d40710240723m1f300c6cr3b3f94a44eaa5af@mail.gmail.com>
Date: Wed, 24 Oct 2007 10:23:31 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: fricas-devel@googlegroups.com
In-Reply-To: <Pine.LNX.4.64.0710240700510.6939@gauss.cs.tamu.edu>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<471D449F.4020305@hemmecke.de>
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<471E957A.1040403@hemmecke.de>
	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
	<471E9FFF.5050203@hemmecke.de>
	<fbcd16d40710231913y26b6f05ub2237d7727eaa081@mail.gmail.com>
	<Pine.LNX.4.64.0710240700510.6939@gauss.cs.tamu.edu>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
	[fricas-devel] Re: [fricas-devel] Re: [fricas-devel] Re:
	iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 14:23:35 -0000

On 10/24/07, Gabriel Dos Reis  wrote:
>
> On Tue, 23 Oct 2007, Bill Page wrote:
>
> | But as I said earlier in this thread, this sort of construction is not
> | as general as I would hope for. How would I write for example?
> |
> |   [i for i in Product(OVAR [a,b,c], 1..3)]
> |
> |               [ (a,1), (a,2), (a,3), (b,1), ... ]
>
> My fundemantal issue to understand is making 1..9 a domain.  I'm fine
> with no having the most general construct, but I'm concerned with
> semantics and typeing rules.  In general, I'm suspicious of any
> extension that is driven by just syntax.
>

I understand your suspicion however I do believe (as you may also
believe) that syntax is quite critical - particularly in *mathematics*
where I think it has often been demonstrated that proper notation is
90% (99% ?) of the problem. A good notation should help "suggest" a
solution and the language itself should be economical and dense in the
sense that almost everything that you *can* write that is
syntactically correct should have some presumably sensible and useful
meaning. Attempting to find the most general construct (: As abstract
as possible but not abstract nonsense :) is one way to approach this.

Earlier in this thread I suggested introducing a new domain I called
'IntegerSegment(S)' abbreviated INTS that would be the domain
equivalent to a given 'S:Segment(Integer)'. Then we could write:

  [i for i in Product(OVAR [a,b,c], INTS 1..3)]

This does not require that '1..3' denote a domain although it does
seem less "economical".

Regards,
Bill Page.



From MAILER-DAEMON Wed Oct 24 10:49:45 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkhYH-0004F7-Kv
	for mharc-axiom-math@gnu.org; Wed, 24 Oct 2007 10:49:45 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkhYG-0004CZ-Kw
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:49:44 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkhYE-00048j-VY
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:49:44 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkhYE-00048X-Ry
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:49:42 -0400
Received: from nf-out-0910.google.com ([64.233.182.189])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1IkhYE-0000DW-Gu
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:49:42 -0400
Received: by nf-out-0910.google.com with SMTP id 30so224297nfu
	for <axiom-math@nongnu.org>; Wed, 24 Oct 2007 07:49:41 -0700 (PDT)
Received: by 10.86.99.9 with SMTP id w9mr513741fgb.1193237381123;
	Wed, 24 Oct 2007 07:49:41 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Wed, 24 Oct 2007 07:49:41 -0700 (PDT)
Message-ID: <fbcd16d40710240749i40159930rf4fe2153c09a04cd@mail.gmail.com>
Date: Wed, 24 Oct 2007 10:49:41 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: "Martin Rubey" <martin.rubey@univie.ac.at>
In-Reply-To: <9q8x5sk7s9.fsf@aquin.mat.univie.ac.at>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<471E957A.1040403@hemmecke.de>
	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
	<471E9EC1.3090707@hemmecke.de>
	<fbcd16d40710231856n7f5379f6r52c31da01d1d5c18@mail.gmail.com>
	<9q7ildkkho.fsf_-_@aquin.mat.univie.ac.at>
	<Pine.LNX.4.64.0710240714171.6939@gauss.cs.tamu.edu>
	<9q8x5sk7s9.fsf@aquin.mat.univie.ac.at>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net, Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] generators,
	was: Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 14:49:44 -0000

Martin,

On 24 Oct 2007 14:37:42 +0200, you wrote:
> ...
>   During the workshop this year, we designed the basic structure for a package
>   dealing with lambda rings, symmetric functions, and Hopf algebras.
> ...

I would be very interested in hearing more about this when you have time.

Regards,
Bill Page.



From MAILER-DAEMON Wed Oct 24 11:00:07 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkhiJ-0003iB-5P
	for mharc-axiom-math@gnu.org; Wed, 24 Oct 2007 11:00:07 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkhiG-0003eR-Ti
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 11:00:04 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkhiC-0003Y0-4c
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 11:00:04 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkhiB-0003Xx-SE
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:59:59 -0400
Received: from smtp.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1IkhiB-0002pL-88
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 10:59:59 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id 39B2F46DE01;
	Wed, 24 Oct 2007 09:59:58 -0500 (CDT)
Date: Wed, 24 Oct 2007 09:58:52 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: fricas-devel@googlegroups.com
In-Reply-To: <fbcd16d40710240723m1f300c6cr3b3f94a44eaa5af@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0710240939350.6939@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<471D449F.4020305@hemmecke.de>
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<471E957A.1040403@hemmecke.de>
	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
	<471E9FFF.5050203@hemmecke.de>
	<fbcd16d40710231913y26b6f05ub2237d7727eaa081@mail.gmail.com>
	<Pine.LNX.4.64.0710240700510.6939@gauss.cs.tamu.edu>
	<fbcd16d40710240723m1f300c6cr3b3f94a44eaa5af@mail.gmail.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re:
 [fricas-devel] Re: [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 15:00:05 -0000

On Wed, 24 Oct 2007, Bill Page wrote:

| 
| On 10/24/07, Gabriel Dos Reis  wrote:
| >
| > On Tue, 23 Oct 2007, Bill Page wrote:
| >
| > | But as I said earlier in this thread, this sort of construction is not
| > | as general as I would hope for. How would I write for example?
| > |
| > |   [i for i in Product(OVAR [a,b,c], 1..3)]
| > |
| > |               [ (a,1), (a,2), (a,3), (b,1), ... ]
| >
| > My fundemantal issue to understand is making 1..9 a domain.  I'm fine
| > with no having the most general construct, but I'm concerned with
| > semantics and typeing rules.  In general, I'm suspicious of any
| > extension that is driven by just syntax.
| >
| 
| I understand your suspicion however I do believe (as you may also
| believe) that syntax is quite critical - particularly in *mathematics*
| where I think it has often been demonstrated that proper notation is
| 90% (99% ?) of the problem.

Yes.  Syntax matters.  

But mathematical notations are also very deceptive and ambiguous.
As of today, we don't have universal, unambiguous, mathematical
notation used by everybody.  Rather, we have variations used by
communities, with varying meanings.  Therefore, we must be very
careful in putting syntax before semantics, especially for a
programming language for writing mathematical software.  For a programming
language, we cannot just rely on the `common sense' of the compiler,
as we would in a casual mathematical conversation between
mathematicians.   

Syntax matters.  I know this from concrete experience.  I'm directly
involved in the design (and implementation) of a programming language
used by over 3 millions of progammers on the planet.  And, having that
huge number of users means that one get lot of feedback, suggestions,
complaints, etc., especially on syntax (if the language is believed to
have terrible syntax for bad or good).  That I believe, provides
quite a unique experience from the field.

Let me cast my suspicion this way:  I would like first to understand
what people want to express -- I believe I understand the simplest of 
what people want to express.  Once, we think we understand the
semantics and its implications well enough.  How to express it should
follow.  Once thing that this discussion has revealed is that we don't
seem to understand well enough the semantics. 

| A good notation should help "suggest" a solution

A good notation should reflect semantics. 

I'm skeptical in the efficacy of putting the cart before the horse.

[...]

| Earlier in this thread I suggested introducing a new domain I called
| 'IntegerSegment(S)' abbreviated INTS that would be the domain
| equivalent to a given 'S:Segment(Integer)'. Then we could write:
| 
|   [i for i in Product(OVAR [a,b,c], INTS 1..3)]
| 
| This does not require that '1..3' denote a domain although it does
| seem less "economical".

It is certainly be a good thing to have an implementation of that
domain and see how much we can learn from it.

-- Gaby



From MAILER-DAEMON Wed Oct 24 11:03:28 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkhlY-0001fP-Or
	for mharc-axiom-math@gnu.org; Wed, 24 Oct 2007 11:03:28 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkhlX-0001dR-F9
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 11:03:27 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkhlV-0001Yj-B5
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 11:03:26 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkhlV-0001YL-1L
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 11:03:25 -0400
Received: from nf-out-0910.google.com ([64.233.182.184])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1IkhlT-0003qf-V0
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 11:03:24 -0400
Received: by nf-out-0910.google.com with SMTP id 30so228590nfu
	for <axiom-math@nongnu.org>; Wed, 24 Oct 2007 08:03:21 -0700 (PDT)
Received: by 10.86.62.3 with SMTP id k3mr543475fga.1193238201676;
	Wed, 24 Oct 2007 08:03:21 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Wed, 24 Oct 2007 08:03:21 -0700 (PDT)
Message-ID: <fbcd16d40710240803o1fdfdfa9ye0a56835ddf0bc8e@mail.gmail.com>
Date: Wed, 24 Oct 2007 11:03:21 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: "Gabriel Dos Reis" <gdr@cs.tamu.edu>
In-Reply-To: <Pine.LNX.4.64.0710240905560.6939@gauss.cs.tamu.edu>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<471D449F.4020305@hemmecke.de>
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<Pine.LNX.4.64.0710240649530.6939@gauss.cs.tamu.edu>
	<fbcd16d40710240651u549e3f22y4b97663aa9677c5@mail.gmail.com>
	<Pine.LNX.4.64.0710240905560.6939@gauss.cs.tamu.edu>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
	[fricas-devel] Re: [fricas-devel] Re: iterators and cartesian
	product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 15:03:27 -0000

On 10/24/07, Gabriel Dos Reis wrote:
> On Wed, 24 Oct 2007, Bill Page wrote:
> | Gaby wrote:
> | > so what wouold
> | >
> | >        for i in PositiveInteger repeat
> | >
> | > does concretely?
> | >
> |
> |   '1..' is another (better?) name for PositiveInteger
>
> No, it is not.  Both behave quite differently in many situations.
>

Actually I agree with you. But what I should have said is that the
domain PositiveInteger can subsume the operations of '1..'.

> | So under my proposal 'for i in PositiveInteger repeat' should function
> | identically to the way
> |
> |    for i in 1.. repeat
>
> so you want to treat a domain as being identical to its ordered list
> of values.  But, a domain is not (just) its set of values.

Of course you are right. I do *not* want to treat a domain as being
identical to it's ordered list of values. A domain is many other
things besides that. However I see no reason why most domains (at
least those in the categories Finite and StepThrough) should not
provide a standard mechanism for doing such iterations.

>  About about
>
>       for i in List(Integer) repeat
>
> or
>
>       for n in BinaryTree(Integer) repeat
>

Yes, List and BinaryTree should be able to provide such iterators.
Sometimes (in particular in these cases) it is difficult to define a
"standard" ordering but the particular default ordering that is chosen
in each case can be easily documented and the alternatives produced by
some auxillary operation or coercion.

> | works now in the interpreter where '1..' denotes an object of
> | 'UniversalSegment PositiveInteger'.
>
> But UniversalSegment is a *particular traversal view* of PositiveInteger.
>

Yes, I agree. Why not make in it the "standard" one for PositiveInteger?

Regards,
Bill Page.



From MAILER-DAEMON Wed Oct 24 11:10:50 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ikhsg-00064F-Fi
	for mharc-axiom-math@gnu.org; Wed, 24 Oct 2007 11:10:50 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ikhse-00063F-N1
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 11:10:48 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ikhsb-00061h-To
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 11:10:48 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ikhsb-00061P-Q6
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 11:10:45 -0400
Received: from mailhost.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Ikhsb-0005u6-4s
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 11:10:45 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id 403D446DE01;
	Wed, 24 Oct 2007 10:10:44 -0500 (CDT)
Date: Wed, 24 Oct 2007 10:09:38 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: Bill Page <bill.page@newsynthesis.org>
In-Reply-To: <fbcd16d40710240803o1fdfdfa9ye0a56835ddf0bc8e@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0710241003440.6939@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl> 
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com> 
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<471D449F.4020305@hemmecke.de>
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com> 
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<Pine.LNX.4.64.0710240649530.6939@gauss.cs.tamu.edu> 
	<fbcd16d40710240651u549e3f22y4b97663aa9677c5@mail.gmail.com> 
	<Pine.LNX.4.64.0710240905560.6939@gauss.cs.tamu.edu>
	<fbcd16d40710240803o1fdfdfa9ye0a56835ddf0bc8e@mail.gmail.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re:
 [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 15:10:48 -0000

On Wed, 24 Oct 2007, Bill Page wrote:

| > | So under my proposal 'for i in PositiveInteger repeat' should function
| > | identically to the way
| > |
| > |    for i in 1.. repeat
| >
| > so you want to treat a domain as being identical to its ordered list
| > of values.  But, a domain is not (just) its set of values.
| 
| Of course you are right. I do *not* want to treat a domain as being
| identical to it's ordered list of values. A domain is many other
| things besides that. However I see no reason why most domains (at
| least those in the categories Finite and StepThrough) should not
| provide a standard mechanism for doing such iterations.

I'm NOT arguing that there should not be convenient ways to define
iterations over domains.  I'm just pointing out some specific
suggestions have problems and we should first try to understand the
problem deeper.  Once, I get to office, I'll provide links to some
recent work on iterating over some combinatorial structures and their
complexities. 

| >  About about
| >
| >       for i in List(Integer) repeat
| >
| > or
| >
| >       for n in BinaryTree(Integer) repeat
| >
| 
| Yes, List and BinaryTree should be able to provide such iterators.

In this example, what would they be?  What be the values iterated on?

| Sometimes (in particular in these cases) it is difficult to define a
| "standard" ordering but the particular default ordering that is chosen
| in each case can be easily documented and the alternatives produced by
| some auxillary operation or coercion.

You see, we have not reached understanding on the semantics and its
implications.  And we can't just rely on `document the choice' to
solve the problem.  I would have a problem with that if we were just
fiddling with a small scripting language that will die in a week.

-- Gaby



From MAILER-DAEMON Wed Oct 24 11:33:17 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IkiEP-0000Or-6O
	for mharc-axiom-math@gnu.org; Wed, 24 Oct 2007 11:33:17 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IkiEM-0000M6-I8
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 11:33:14 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IkiEH-0000Hm-HQ
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 11:33:13 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IkiEH-0000HT-2Z
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 11:33:09 -0400
Received: from nf-out-0910.google.com ([64.233.182.191])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1IkiEG-0007b5-Hj
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 11:33:08 -0400
Received: by nf-out-0910.google.com with SMTP id 30so237759nfu
	for <axiom-math@nongnu.org>; Wed, 24 Oct 2007 08:33:07 -0700 (PDT)
Received: by 10.86.100.7 with SMTP id x7mr533524fgb.1193239987055;
	Wed, 24 Oct 2007 08:33:07 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Wed, 24 Oct 2007 08:33:06 -0700 (PDT)
Message-ID: <fbcd16d40710240833s7e5c0ae0ia30384b8aea960d4@mail.gmail.com>
Date: Wed, 24 Oct 2007 11:33:06 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: fricas-devel@googlegroups.com
In-Reply-To: <Pine.LNX.4.64.0710240939350.6939@gauss.cs.tamu.edu>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<471E957A.1040403@hemmecke.de>
	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
	<471E9FFF.5050203@hemmecke.de>
	<fbcd16d40710231913y26b6f05ub2237d7727eaa081@mail.gmail.com>
	<Pine.LNX.4.64.0710240700510.6939@gauss.cs.tamu.edu>
	<fbcd16d40710240723m1f300c6cr3b3f94a44eaa5af@mail.gmail.com>
	<Pine.LNX.4.64.0710240939350.6939@gauss.cs.tamu.edu>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
	[fricas-devel] Re: [fricas-devel] Re: [fricas-devel] Re:
	iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 15:33:15 -0000

On 10/24/07, Gabriel Dos Reis wrote:
>
> On Wed, 24 Oct 2007, Bill Page wrote:
> ...
> | A good notation should help "suggest" a solution
>
> Gaby wrote:
> A good notation should reflect semantics.
>

Yes. I think that is a better way of saying what I was trying to say. Thanks.

> I'm skeptical in the efficacy of putting the cart before the horse.
>

Ok, but I tend to thing of this as more of a systemic thing without
one necessarily leading the other.

> [...]
>
> | Earlier in this thread I suggested introducing a new domain I called
> | 'IntegerSegment(S)' abbreviated INTS that would be the domain
> | equivalent to a given 'S:Segment(Integer)'. Then we could write:
> |
> |   [i for i in Product(OVAR [a,b,c], INTS 1..3)]
> |
> | This does not require that '1..3' denote a domain although it does
> | seem less "economical".
>
> It is certainly be a good thing to have an implementation of that
> domain and see how much we can learn from it.
>

One thing to note is that the above construction still requires an
extension of Spad and the Axiom Interpreter syntax and semantics to
allow a domain to follow 'in'. Right now one would actually be forced
to write:

   [i for i in expand()$Product(OVAR [a,b,c], INTS 1..3)]

I posted a patch for the Product domain to provide such an 'expand'
operation (maybe a better name is desirable) and also to provide
'expand' for any domain in the Finite category. But converting a
domain (Product) to a List just to iterate over it seems like a waste
and is still less economical. I would like the compiler to make this
operation transparent and more efficient.

Regards,
Bill Page.



From MAILER-DAEMON Wed Oct 24 11:57:18 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ikibe-0002RI-Ga
	for mharc-axiom-math@gnu.org; Wed, 24 Oct 2007 11:57:18 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ikibd-0002Q6-H4
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 11:57:17 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ikibb-0002MV-8w
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 11:57:16 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ikibb-0002MG-0W
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 11:57:15 -0400
Received: from smtp.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1Ikiba-0006VT-38
	for axiom-math@nongnu.org; Wed, 24 Oct 2007 11:57:14 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id 77BEA46DE27;
	Wed, 24 Oct 2007 10:57:11 -0500 (CDT)
Date: Wed, 24 Oct 2007 10:56:06 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: fricas-devel@googlegroups.com
In-Reply-To: <fbcd16d40710240833s7e5c0ae0ia30384b8aea960d4@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0710241038350.1902@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<471E957A.1040403@hemmecke.de>
	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
	<471E9FFF.5050203@hemmecke.de>
	<fbcd16d40710231913y26b6f05ub2237d7727eaa081@mail.gmail.com>
	<Pine.LNX.4.64.0710240700510.6939@gauss.cs.tamu.edu>
	<fbcd16d40710240723m1f300c6cr3b3f94a44eaa5af@mail.gmail.com>
	<Pine.LNX.4.64.0710240939350.6939@gauss.cs.tamu.edu>
	<fbcd16d40710240833s7e5c0ae0ia30384b8aea960d4@mail.gmail.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re:
 [fricas-devel] Re: [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 24 Oct 2007 15:57:17 -0000

On Wed, 24 Oct 2007, Bill Page wrote:

|                                                 But converting a
| domain (Product) to a List just to iterate over it seems like a waste
| and is still less economical. I would like the compiler to make this
| operation transparent and more efficient.

Iteration is an old topic -- did I say that SIMULA had coroutines?
This problem has been studied to depth, with lots of solutions.  As
Waldek would say, a variety of solutions is an indication that
opinions are split over which is better.

I do fully agree that it does not make much sense, from efficiency
point of view, to make a list just be to able to iterate over elments
of Product.  There are various solutions to that problem.  One being
generartors -- or coroutines or semi-coroutines.  Another, quite
effective, is the notion of `iterator' in used the C++ Standard Template
Library. 

   http://www.sgi.com/tech/stl/

It relies on semantics description of iterators, along with hierarchical
categorisations of algorithms and containers bases on complexity and
semantics description of iterators.  Note that STL is the result of a
long term project, some of the earlier description may be found here

  http://www.stepanovpapers.com/

Basically, a domain that whish to be iterated over provides two
operations -- begin() and end() -- that people use to initiate/end
iteration over data structures.  That does not require coroutines.
It can be made to work in Spad if we had good support for nested
domains. 

Now, you may say that you really want begin() and end() to be implicit
in some cases, that can be made to work too -- just like generate() is
implicitly called in Aldor.  For C++, there is a well-advanced
proposal for C++0x to make that work:

    vector<int> v;
    // ...
    for (int x: v)
       // ...

would be roughly equivalent to

    for (auto p = v.begin(); p != v.end(); ++p) {
       int x = *p;
       // ...
    }

Notice that this solution, when applied to BinaryTree, does not
require one to first construct a List and then iterate, and finally
throw it away.  One caniterate over BinaryTree without recursion.

-- Gaby



From MAILER-DAEMON Thu Oct 25 11:19:45 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Il4Ur-0006MG-0q
	for mharc-axiom-math@gnu.org; Thu, 25 Oct 2007 11:19:45 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Il4Uo-0006Hq-AU
	for axiom-math@nongnu.org; Thu, 25 Oct 2007 11:19:42 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Il4Un-0006FK-60
	for axiom-math@nongnu.org; Thu, 25 Oct 2007 11:19:41 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Il4Un-0006F4-0L
	for axiom-math@nongnu.org; Thu, 25 Oct 2007 11:19:41 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39]
	helo=smtpauthhost.risc.uni-linz.ac.at)
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1Il4Um-00073M-GM
	for axiom-math@nongnu.org; Thu, 25 Oct 2007 11:19:40 -0400
Received: from [193.170.38.119] (hemmecke@woodpecker.risc.uni-linz.ac.at
	[193.170.38.119]) (authenticated bits=0)
	by smtpauthhost.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with
	ESMTP id l9PFJQTo031536
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Thu, 25 Oct 2007 17:19:27 +0200
Message-ID: <471FBF50.9090408@hemmecke.de>
Date: Wed, 24 Oct 2007 23:55:28 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.6 (X11/20070728)
MIME-Version: 1.0
To: Martin Rubey <martin.rubey@univie.ac.at>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>	<471D449F.4020305@hemmecke.de>	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>	<471E8D7E.6070801@hemmecke.de>	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>	<471E957A.1040403@hemmecke.de>	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>	<471E9EC1.3090707@hemmecke.de>	<fbcd16d40710231856n7f5379f6r52c31da01d1d5c18@mail.gmail.com>
	<9q7ildkkho.fsf_-_@aquin.mat.univie.ac.at>
In-Reply-To: <9q7ildkkho.fsf_-_@aquin.mat.univie.ac.at>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: by monty-python.gnu.org: Linux 2.4-2.6
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net, aldor-l <aldor-l@aldor.org>
Subject: [Axiom-math] Re: [open-axiom-devel] generators
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 25 Oct 2007 15:19:43 -0000

> Just curious: can something of type Generator(Something) ever be a domain?
> (Probably yes...)

 >aldor -fx -laldor aaa.as
 >aaa
MachineInteger
123

---BEGIN aaa.as
#include "aldor"
#include "aldorio"

CAT ==> OutputType with {integer: Literal -> %}
g(): Generator(CAT) == generate {
	yield MachineInteger;
--	yield Integer;
}

foo(D: CAT): () == {
	import from D, TextWriter, String, Character;
	stdout << name(D)$Trace << newline;
	stdout << (123@D) << newline;
}

for D in g() repeat foo(D);
---END aaa.as

But don't remove the -- before "yield Integer", because then the 
compiler tells you... :-(

"aaa.as", line 5: g(): Generator(CAT) == generate {
                   ................................^
[L5 C33] #1 (Fatal Error) Compiler bug: no exit list for terrorSequence 
(ooops).

Since in Aldor domains are first class, it should be possible to return 
them by a generator. (Compare to lists of domains.)

However, your question asks whether g is a domain if

   g: Generator(Something)

and I would tend to say that this is not a domain. Why? Well, 
"Generator(Something)" should be a category then, right? But if you look 
int sal_gener.as you clearly see that Generator(T) is a domain.

Ralf




From MAILER-DAEMON Thu Oct 25 11:19:45 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Il4Ur-0006MZ-5a
	for mharc-axiom-math@gnu.org; Thu, 25 Oct 2007 11:19:45 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Il4Up-0006JS-JC
	for axiom-math@nongnu.org; Thu, 25 Oct 2007 11:19:43 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Il4Uo-0006HY-50
	for axiom-math@nongnu.org; Thu, 25 Oct 2007 11:19:42 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Il4Uo-0006HE-0W
	for axiom-math@nongnu.org; Thu, 25 Oct 2007 11:19:42 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39]
	helo=smtpauthhost.risc.uni-linz.ac.at)
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1Il4Un-00074I-Gf
	for axiom-math@nongnu.org; Thu, 25 Oct 2007 11:19:41 -0400
Received: from [193.170.38.119] (hemmecke@woodpecker.risc.uni-linz.ac.at
	[193.170.38.119]) (authenticated bits=0)
	by smtpauthhost.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with
	ESMTP id l9PFJOTo031533
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Thu, 25 Oct 2007 17:19:25 +0200
Message-ID: <471FB511.5050404@hemmecke.de>
Date: Wed, 24 Oct 2007 23:11:45 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.6 (X11/20070728)
MIME-Version: 1.0
To: Bill Page <bill.page@newsynthesis.org>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>	<471D449F.4020305@hemmecke.de>	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>	<471E8D7E.6070801@hemmecke.de>	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>	<471E957A.1040403@hemmecke.de>	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>	<471E9EC1.3090707@hemmecke.de>
	<fbcd16d40710231856n7f5379f6r52c31da01d1d5c18@mail.gmail.com>
In-Reply-To: <fbcd16d40710231856n7f5379f6r52c31da01d1d5c18@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: by monty-python.gnu.org: Linux 2.4-2.6
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net, Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re:
 [fricas-devel] Re:	[fricas-devel]
 Re: [fricas-devel] Re: iterators and cartesian	product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 25 Oct 2007 15:19:43 -0000

Hi Bill,

On 10/24/2007 03:56 AM, Bill Page wrote:
> On 10/23/07, Ralf Hemmecke wrote:
>> On 10/24/2007 03:07 AM, Bill Page wrote:
>>> On 10/23/07, Ralf Hemmecke wrote:
>>>>>> Seems OK, but, of course the _domain_ 1..9 is then inappropriate in a
>>>>>> construction like
>>>>>>
>>>>>>    for i in 1..9 repeat ...
>>>>>>
>>>>>> don't you agree?
>>>>>>
>>>>> No. My proposal also includes the idea that the construct
>>>>>
>>>>>     for i in X repeat
>>>>>
>>>>> should expect X to be any domain that supplies a generator (like Aldor).
>>>> In Aldor, at the place of X there must be an element of type
>>>> "Generator(Something)", not a domain.
>>> Can you give an example of an "element of type Generator(Something)"
>>> that is not a domain?
>> g: Generator(Integer) := generate {yield 0}
>>
>> Take g.
>>
> 
> Ok, yes I see what you mean. But this requires some new basic
> functionality in the language, right?

I cannot live anymore without "Generator". And I very much hope it will 
make it into SPAD.

> Contrast this with 'Stream' in
> Axiom which (so far as I understand) does not require such an
> extension of Spad.

For me a stream is like a generator with memory. If I step a generator 
then I can never repeat that step. Take (Aldor)

g: Generator Integer := generate yield 1;

l1: List Integer := [x for x in g];
l2: List Integer := [x for x in g]

that yields l1=[1] and l2=[].

If you replace g by

s: Stream(Integer) := ...

you would probably expect that also l2=[1]

Oh, I am totally wrong. Streams are always infinite, Generators are not.
So I would have to write

   [x for x in s for i in 1..1]

>> Hmmm, didn't you like
>>
>> http://lists.gnu.org/archive/html/axiom-math/2007-10/msg00023.html
>>
>> main(): () == {
>>      import from Z, Product(Z, Z);
>>      s1: Segment Z := 1..3;
>>      s2: Segment Z := 11..12;
>>      for ab in s1 * s2 repeat {
>>          (a, b) := ab;
>>          stdout << a << ", " << b << newline;
>>      }
>> }

> Yes, that is "ok" but ... we already have a domain construction
> Product in the Axiom library that takes two *domains* as it's
> parameters.

OK if you like that so much then OK. As Martin said, that is very much 
what we do in Aldor-combinat. There is a Product functor that takes two 
species and produces the product species. Each species comes with a function

   structures: SetSpecies L -> Generator %;

So for us it would mean

   for s in structures([1,2,3,4])$Times(F, G)(Integer) repeat ...

where F and G would be the species corresponding to 1..9 and 1..4.
I don't see that this makes life easier.

I am sure one could simplify some libraries so that you end up with

   for s in generator()$Product(1..9, 1..9) repeat

where 1..9 should be interpreted as a domain that also provides a function

   generator: () -> Generator %

Fine. But look closer and you see that I build again on the concept of 
Generator.

If I understand you correctly, you basically want to have the same 
functions but like the compiler to allow you to write

   for s in Product(1..9, 1..9) ...

as syntactic sugar for my line above.

I hopefully don't introduce too much confusion here. I don't know enough 
of the limitations of SPAD.

Ralf




From MAILER-DAEMON Thu Oct 25 11:19:45 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Il4Ur-0006N2-ES
	for mharc-axiom-math@gnu.org; Thu, 25 Oct 2007 11:19:45 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Il4Up-0006Jr-S5
	for axiom-math@nongnu.org; Thu, 25 Oct 2007 11:19:43 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Il4Un-0006GH-IK
	for axiom-math@nongnu.org; Thu, 25 Oct 2007 11:19:42 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Il4Un-0006G4-EE
	for axiom-math@nongnu.org; Thu, 25 Oct 2007 11:19:41 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39]
	helo=smtpauthhost.risc.uni-linz.ac.at)
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1Il4Um-00074E-Tc
	for axiom-math@nongnu.org; Thu, 25 Oct 2007 11:19:41 -0400
Received: from [193.170.38.119] (hemmecke@woodpecker.risc.uni-linz.ac.at
	[193.170.38.119]) (authenticated bits=0)
	by smtpauthhost.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with
	ESMTP id l9PFJTTo031539
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Thu, 25 Oct 2007 17:19:29 +0200
Message-ID: <471FC65C.6050904@hemmecke.de>
Date: Thu, 25 Oct 2007 00:25:32 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.6 (X11/20070728)
MIME-Version: 1.0
To: Gabriel Dos Reis <gdr@cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>	<471D449F.4020305@hemmecke.de>	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
	<471E8D7E.6070801@hemmecke.de>	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>	<Pine.LNX.4.64.0710240649530.6939@gauss.cs.tamu.edu>	<fbcd16d40710240651u549e3f22y4b97663aa9677c5@mail.gmail.com>
	<Pine.LNX.4.64.0710240905560.6939@gauss.cs.tamu.edu>
In-Reply-To: <Pine.LNX.4.64.0710240905560.6939@gauss.cs.tamu.edu>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: by monty-python.gnu.org: Linux 2.4-2.6
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re:
 [fricas-devel] Re: [fricas-devel]
 Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 25 Oct 2007 15:19:44 -0000

> |   '1..' is another (better?) name for PositiveInteger
> 
> No, it is not.  Both behave quite differently in many situations.

What?

Suppose I have given

   PositiveIntegerCategory

and suppose

   PositiveInteger: PositiveIntegerCategory == add {...}

then

   (..)(i: Integer): PositiveIntegerCategory == PositiveInteger

For simplicity I simply ignore the parameter and in the following I 
simply use an existing "IntegerType" from LibAldor.

---BEGIN aaa.as
#include "aldor"
#include "aldorio"
PositiveInteger: IntegerType == Integer add;
(..)(i: Integer): IntegerType == PositiveInteger add;
one:*Integer == 1$Integer;
import from one..;
stdout << 3 << newline;
---END aaa.as

(I don't import from Integer since I use ":*" instead of ":". Remove the 
* and see what the compiler tells you.)

Add the line

for i in one.. repeat stdout << i << newline;

to the program above and try to compile. Of course it must fail.
 >aldor -fx -laldor aaa.as
"aaa.as", line 9: for i in one.. repeat stdout << i << newline;
                   ....^.......^
[L9 C5] #2 (Error) No meaning for identifier `i'.
[L9 C13] #1 (Error) Argument 1 of `generator' did not match any possible 
parameter type.
     The rejected type is
                 IntegerType with
                     == Posi....
     Expected type String.

Since there is no function (..) which returns a Generator(Something).

But still, I cannot see, why

   one..

behaves in any way different from PositiveInteger.

OK, you speak of SPAD and I demonstrated Aldor, so I should be quiet.

Ralf




From MAILER-DAEMON Thu Oct 25 12:40:46 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Il5lF-0005yX-Rq
	for mharc-axiom-math@gnu.org; Thu, 25 Oct 2007 12:40:45 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Il5lD-0005wF-ST
	for axiom-math@nongnu.org; Thu, 25 Oct 2007 12:40:43 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Il5l8-0005ru-UI
	for axiom-math@nongnu.org; Thu, 25 Oct 2007 12:40:43 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Il5l8-0005rm-P4
	for axiom-math@nongnu.org; Thu, 25 Oct 2007 12:40:38 -0400
Received: from nf-out-0910.google.com ([64.233.182.190])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1Il5l7-0005Y6-SN
	for axiom-math@nongnu.org; Thu, 25 Oct 2007 12:40:38 -0400
Received: by nf-out-0910.google.com with SMTP id 30so610000nfu
	for <axiom-math@nongnu.org>; Thu, 25 Oct 2007 09:40:33 -0700 (PDT)
Received: by 10.86.53.8 with SMTP id b8mr1485827fga.1193330432698;
	Thu, 25 Oct 2007 09:40:32 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Thu, 25 Oct 2007 09:40:32 -0700 (PDT)
Message-ID: <fbcd16d40710250940r46093bc5t85f719fa1c3c838@mail.gmail.com>
Date: Thu, 25 Oct 2007 12:40:32 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: fricas-devel@googlegroups.com
In-Reply-To: <471FB511.5050404@hemmecke.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<471D449F.4020305@hemmecke.de>
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<471E957A.1040403@hemmecke.de>
	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
	<471E9EC1.3090707@hemmecke.de>
	<fbcd16d40710231856n7f5379f6r52c31da01d1d5c18@mail.gmail.com>
	<471FB511.5050404@hemmecke.de>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org,
	Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
	[fricas-devel] Re: [fricas-devel] Re: [fricas-devel] Re:
	[fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 25 Oct 2007 16:40:44 -0000

On 10/24/07, Ralf Hemmecke wrote:
> ...
> I cannot live anymore without "Generator". And I very much hope it will
> make it into SPAD.
>
> > Contrast this with 'Stream' in
> > Axiom which (so far as I understand) does not require such an
> > extension of Spad.
>
> For me a stream is like a generator with memory.

It is not my intention to sound critical but I would like to
understand better this distinction. If Stream is a generalization of
Generator, why do we need Generator?

> If I step a generator then I can never repeat that step. Take (Aldor)
>
> g: Generator Integer := generate yield 1;
>
> l1: List Integer := [x for x in g];
> l2: List Integer := [x for x in g]
>
> that yields l1=[1] and l2=[].
>
> If you replace g by
>
> s: Stream(Integer) := ...
>
> you would probably expect that also l2=[1]
>
> Oh, I am totally wrong. Streams are always infinite, Generators are not.

No, there are finite Streams. For example:

(1) -> s:=construct([1,2,3])$Stream(Integer)

   (1)  [1,2,3]
                                               Type: Stream Integer
(2) -> possiblyInfinite? s

   (2)  false
                                                      Type: Boolean
(3) -> explicitlyFinite? s

   (3)  true
                                                      Type: Boolean
(4) -> t:=expand(1..)

   (4)  [1,2,3,4,5,6,7,8,9,10,...]
                                               Type: Stream Integer
(5) -> possiblyInfinite? t

   (5)  true
                                                      Type: Boolean
(6) -> explicitlyFinite? t

   (6)  false
                                                      Type: Boolean
(7) -> u:=repeating [1,2,3]

         _____
   (7)  [1,2,3]
                                       Type: Stream PositiveInteger
(8) -> possiblyInfinite? u

   (8)  true
                                                      Type: Boolean
(9) -> explicitlyFinite? u

   (9)  false
                                                      Type: Boolean

> ...
> > Yes, that is "ok" but ... we already have a domain construction
> > Product in the Axiom library that takes two *domains* as it's
> > parameters.
>
> OK if you like that so much then OK.

Hmmm.... I didn't say that I like it. ;-) I said that is the way it
works now and in Spad there is no way to overload domain names.

> As Martin said, that is very much what we do in Aldor-combinat.
> There is a Product functor that takes two species and produces
> the product species. Each species comes with a function
>
>    structures: SetSpecies L -> Generator %;
>
> So for us it would mean
>
>    for s in structures([1,2,3,4])$Times(F, G)(Integer) repeat ...
>
> where F and G would be the species corresponding to 1..9 and
> 1..4. I don't see that this makes life easier.
>

Well, that *is* exactly the model that I am considering. I like the
way Aldor-combinat works and I think it would be great if this could
be fully supported in Axiom.

The larger question remains however: When to use a domain to directly
model something that is "set-like" and when to define a higher-order
domain whose objects are "set-like"? To me this is not clear in either
Spad or Aldor.

> I am sure one could simplify some libraries so that you end up with
>
>    for s in generator()$Product(1..9, 1..9) repeat
>
> where 1..9 should be interpreted as a domain that also provides a function
>
>    generator: () -> Generator %
>
> Fine. But look closer and you see that I build again on the concept of
> Generator.
>

Yes, certainly. 'generator' is also an operation available in Axiom
for constructing objects of type 'Stream'.

> If I understand you correctly, you basically want to have the same
> functions but like the compiler to allow you to write
>
>    for s in Product(1..9, 1..9) ...
>
> as syntactic sugar for my line above.
>

Yes, I think that is accurate and essentially the way Aldor works now,
right? One might also choose a slightly more primitive solution with a
lower-level interface such as the one Gaby recently described for C++.
In any case, I think one does want to make this the responsibility of
the programmer of the domain. One could probably define a particular
built-in category known to the compiler and the interpreter with a
default implementation for 'generator'. A good candidate for such a
category would be StepThrough (although I consider that a rather dumb
name... ).

> I hopefully don't introduce too much confusion here. I don't know enough
> of the limitations of SPAD.
>

Well of course this thread is primarily about Spad and the possible
(re-)design of the existing Axiom library. Since Aldor is not (at
least not yet) an integral part of any version/fork of Axiom, Aldor is
useful as an inspiration but not for actual implementation.

Regards,
Bill Page.



From MAILER-DAEMON Thu Oct 25 12:50:24 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Il5uZ-0006aQ-Vm
	for mharc-axiom-math@gnu.org; Thu, 25 Oct 2007 12:50:24 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Il5uV-0006XY-EO
	for axiom-math@nongnu.org; Thu, 25 Oct 2007 12:50:20 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Il5uU-0006Ux-06
	for axiom-math@nongnu.org; Thu, 25 Oct 2007 12:50:18 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Il5uT-0006Ut-Ht
	for axiom-math@nongnu.org; Thu, 25 Oct 2007 12:50:17 -0400
Received: from nf-out-0910.google.com ([64.233.182.184])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1Il5uS-0001Hl-PL
	for axiom-math@nongnu.org; Thu, 25 Oct 2007 12:50:16 -0400
Received: by nf-out-0910.google.com with SMTP id 30so612582nfu
	for <axiom-math@nongnu.org>; Thu, 25 Oct 2007 09:50:15 -0700 (PDT)
Received: by 10.86.70.8 with SMTP id s8mr1475180fga.1193331015057;
	Thu, 25 Oct 2007 09:50:15 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Thu, 25 Oct 2007 09:50:14 -0700 (PDT)
Message-ID: <fbcd16d40710250950s7394c756j8b1d1fd21113ef29@mail.gmail.com>
Date: Thu, 25 Oct 2007 12:50:14 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: fricas-devel@googlegroups.com
In-Reply-To: <471FC65C.6050904@hemmecke.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<471D449F.4020305@hemmecke.de>
	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<Pine.LNX.4.64.0710240649530.6939@gauss.cs.tamu.edu>
	<fbcd16d40710240651u549e3f22y4b97663aa9677c5@mail.gmail.com>
	<Pine.LNX.4.64.0710240905560.6939@gauss.cs.tamu.edu>
	<471FC65C.6050904@hemmecke.de>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org,
	Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
	[fricas-devel] Re: [fricas-devel] Re: [fricas-devel] Re:
	iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 25 Oct 2007 16:50:21 -0000

On 10/24/07, Ralf Hemmecke wrote:
>
> > |   '1..' is another (better?) name for PositiveInteger
> >
> > No, it is not.  Both behave quite differently in many situations.
>
> What?
>
> Suppose I have given
>
>    PositiveIntegerCategory
>
> and suppose
>
>    PositiveInteger: PositiveIntegerCategory == add {...}
>

In the existing Axiom library PositiveInteger is a subdomain of
Integer. The Axiom interpreter infers the following domain

  UniversalSegment PositiveInteger

of the expression '1..'. 'UniversalSegment(S)' includes an operation
'expand' that returns a Stream(S) provided S had OrderedRing.

> then
>
>    (..)(i: Integer): PositiveIntegerCategory == PositiveInteger
>
> For simplicity I simply ignore the parameter and in the following I
> simply use an existing "IntegerType" from LibAldor.
>
> ---BEGIN aaa.as
> #include "aldor"
> #include "aldorio"
> PositiveInteger: IntegerType == Integer add;
> (..)(i: Integer): IntegerType == PositiveInteger add;
> one:*Integer == 1$Integer;
> import from one..;
> stdout << 3 << newline;
> ---END aaa.as
>
> (I don't import from Integer since I use ":*" instead of ":". Remove the
> * and see what the compiler tells you.)
>
> Add the line
>
> for i in one.. repeat stdout << i << newline;
>
> to the program above and try to compile. Of course it must fail.
>  >aldor -fx -laldor aaa.as
> "aaa.as", line 9: for i in one.. repeat stdout << i << newline;
>                    ....^.......^
> [L9 C5] #2 (Error) No meaning for identifier `i'.
> [L9 C13] #1 (Error) Argument 1 of `generator' did not match any possible
> parameter type.
>      The rejected type is
>                  IntegerType with
>                      == Posi....
>      Expected type String.
>
> Since there is no function (..) which returns a Generator(Something).
>
> But still, I cannot see, why
>
>    one..
>
> behaves in any way different from PositiveInteger.
>

The point is that '1..' as a 'UniversalSegment' provides only certain
specific exports which differ from those available in
'PositiveInteger'. In my previous reply to Gaby I admitted that what I
probably want is that all of the (or equivalent) exports of
'UniversalSegment(PositiveInteger)'  should already be available in
'PositiveInteger' as the "standard" method of implementing what is now
available via 'StepThrough'.

> OK, you speak of SPAD and I demonstrated Aldor, so I should be quiet.
>

I do really appreciate your comments. Thanks.

Regards,
Bill Page.



From MAILER-DAEMON Thu Oct 25 20:10:48 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IlCmm-0005vO-Bn
	for mharc-axiom-math@gnu.org; Thu, 25 Oct 2007 20:10:48 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IlCmk-0005ug-Gb
	for axiom-math@nongnu.org; Thu, 25 Oct 2007 20:10:46 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IlCmj-0005uM-Oq
	for axiom-math@nongnu.org; Thu, 25 Oct 2007 20:10:46 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IlCmj-0005uJ-LE
	for axiom-math@nongnu.org; Thu, 25 Oct 2007 20:10:45 -0400
Received: from nf-out-0910.google.com ([64.233.182.190])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1IlCmj-00059n-2Q
	for axiom-math@nongnu.org; Thu, 25 Oct 2007 20:10:45 -0400
Received: by nf-out-0910.google.com with SMTP id 30so717688nfu
	for <axiom-math@nongnu.org>; Thu, 25 Oct 2007 17:10:44 -0700 (PDT)
Received: by 10.86.86.12 with SMTP id j12mr1774866fgb.1193357443741;
	Thu, 25 Oct 2007 17:10:43 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Thu, 25 Oct 2007 17:10:43 -0700 (PDT)
Message-ID: <fbcd16d40710251710v22eb1444w3ff5d8d56a9f6bd2@mail.gmail.com>
Date: Thu, 25 Oct 2007 20:10:43 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: fricas-devel@googlegroups.com, open-axiom-devel@lists.sourceforge.net, 
	aldor-l <aldor-l@aldor.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: axiom-math@nongnu.org
Subject: [Axiom-math] Type equivalence of domains in Axiom and Aldor
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Fri, 26 Oct 2007 00:10:46 -0000

Dear Friends of Axiom and Aldor,

As a result of the recent message thread about "iterators and
cartesian product" in the Axiom library I have been thinking again
about type equivalence. For example consider the following domains in
Axiom:

(1) -> P:=Product(Stream Integer,Stream Integer)

   (1)  Product(Stream Integer,Stream Integer)
                                                        Type: Domain
(2) -> Q:=Stream Product(Integer,Integer)

   (2)  Stream Product(Integer,Integer)
                                                       Type: Domain

On reflection (pun intended) it seems that 'Stream' is a "sum-like"
domain constructor so that we might reasonably expect algebraically
that a 'Product' distributes over a 'Stream' and therefore wish to
design the Axiom library so that this is satisfied.

Thus we should have

   P = Q

Side Note: Perhaps with an extension of the domain 'Domain' that Gaby
recently introduced in OpenAxiom it would actually be possible to
write and evaluate this expression in Axiom.

I understand that neither Spad nor Aldor actually evaluate type
expressions like P and Q above so it does not make sense to ask for
"value" equality of these two domains. But perhaps EQUAL in the Lisp
sense (ref: http://www.cs.cmu.edu/Groups/AI/html/cltl/clm/node74.html)
could appliy?

Therefore I would propose the following definition of type-equivalence
of domains:

  Def: Two domains P and Q are equivalent if and only if both domains satisfy
  exactly the same set of categories: (P has x) = (Q has x) for all Category
  expressions x *and* neither P nor Q has any explicit exports that are not
  provided by some named category.

It seems that in principle it should be possible to give an efficient
decision procedure for this test if it is not already implemented
somewhere in the Spad and Aldor compilers. I would like to understand
this better from the point of view of the compiler and iterpreter
design.

Obviously it makes sense to require that two equivalent domains must
provide the same set of exported operations (the same interface)
having the same names and same signatures. But as I understand the
intention of the semantics of categories in both Axiom and Aldor this
is not enough. We want categories to represent abstract concepts
usually with a well-defined mathematical meaning. That is the reason
for explicitly referring to satisfaction of categories in the
definition above. Further since domains can also explicitly include
exported operations in the 'with' clause (i.e. "anonymous categories"
as defined in the Aldor user's guide), if this mathematical meaning is
carried only by the named categories, such anonymous categories must
always be assumed to represent different categories in each domain in
which they occur.

With this definition it is easy to show that the current definitions
of 'Product' and 'Stream' do not satisfy the expected distributive
property. Right now both 'Stream' and 'Product' have explicit exports,
further the actual list of exported operations does not match at all:

(3) -> )sh P
 Product(Stream Integer,Stream Integer) is a domain constructor.
 Abbreviation for Product is PRODUCT
 This constructor is not exposed in this frame.
 Issue )edit /usr/local/lib/axiom/target/i686-suse-linux/../../src/algebra/PRODUCT.spad
to see algebra source code for PRODUCT

------------------------------- Operations --------------------------------

 ?*? : (Integer,%) -> %                ?*? : (PositiveInteger,%) -> %
...

(3) -> )sh Q
 Stream Product(Integer,Integer) is a domain constructor.
 Abbreviation for Stream is STREAM
 This constructor is exposed in this frame.
 Issue )edit /usr/local/lib/axiom/target/i686-suse-linux/../../src/algebra/STREAM.spad
to see algebra source code for STREAM

------------------------------- Operations --------------------------------

 #? : % -> NonNegativeInteger          ?=? : (%,%) -> Boolean
...

As a mininum it would probably be necessary to introduce two new
cateogies: StreamCat(S) and ProductCat(X,Y). Then it would seem that
would be necessary add code along the lines of

   Product(A: SetCategory,B: SetCategory): ProductCat(A,B) with
     if A has StreamCat(S) and B has StreamCat(S) then
        StreamCat(S)

And

  Stream(S:Type): StreamCat(S) with
    if S has ProductCat(A,B) then
       ProductCat(A,B)

for some set of allowed domains A, B and S, including for example
'Integer'. Of course there is a problem here about specifying the
specific list of domains for A, B and C. It would be desirable I
think, if the compiler could produce generic code which would apply
whtn A, B and C are still unknowns. Is this possible?

Of course we also need the implementations of the associate operations.

With these changes we would be able to satisfy the definition of the
type-equivalence of P and Q above.

I would like to know if other developers think this more algebraic
approach to the design of the Axiom library domains makes sense.
Comments and criticisms are invited.

Regards,
Bill Page.



From MAILER-DAEMON Fri Oct 26 09:40:52 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IlPQi-0000MD-Li
	for mharc-axiom-math@gnu.org; Fri, 26 Oct 2007 09:40:52 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IlGVf-00053Q-UR
	for axiom-math@nongnu.org; Fri, 26 Oct 2007 00:09:24 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IlGVe-000528-Cd
	for axiom-math@nongnu.org; Fri, 26 Oct 2007 00:09:23 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IlGVd-00051b-TN
	for axiom-math@nongnu.org; Fri, 26 Oct 2007 00:09:21 -0400
Received: from rv-out-0910.google.com ([209.85.198.184])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <saul.youssef@gmail.com>) id 1IlGVd-0003Au-C2
	for axiom-math@nongnu.org; Fri, 26 Oct 2007 00:09:21 -0400
Received: by rv-out-0910.google.com with SMTP id g11so2633841rvb
	for <axiom-math@nongnu.org>; Thu, 25 Oct 2007 21:09:19 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=beta;
	h=domainkey-signature:received:received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
	bh=iJPXo4HQTfcYI2emlkyxzRM3Sht9kIrHRhzOoFWdKpU=;
	b=ethxmVXsnL4u/tCKbds8Wl3O7o17yheT6SfXKcaoQi+BjHcLHtEfJLx1Fl0AXjMfrGDPstRuqiTkvAt/nESYPTarWMLf9Hxze5uSSG7bPOqUb1HjY2BVNWaEF2bOpYv5Vlnv0icdNZ26KZtKp+glMn3cAAd2XXLyVyudvX5ybEs=
DomainKey-Signature: a=rsa-sha1; c=nofws; d=gmail.com; s=beta;
	h=received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;
	b=WvZeoYUZ63uJl/ARSK0MJkAiuvkmUH1PenYPkIlZBQsMPs4JHiw6apmyOI2GhslKPwCorQRHyJuYfVl5uL9q8QFLkHF5bzjBVvIUdRcyQH8PbeWsKD++Zjwi6U3l9LpHPGCNbiPeBTprDFgl0wd3Lv3Ynkh4Sx4ABFGyGIcWTWE=
Received: by 10.114.209.1 with SMTP id h1mr2928666wag.1193371758641;
	Thu, 25 Oct 2007 21:09:18 -0700 (PDT)
Received: by 10.114.241.18 with HTTP; Thu, 25 Oct 2007 21:09:18 -0700 (PDT)
Message-ID: <d7d109480710252109j597f3175pb018befeece3e635@mail.gmail.com>
Date: Fri, 26 Oct 2007 00:09:18 -0400
From: "Saul Youssef" <youssef@bu.edu>
Sender: saul.youssef@gmail.com
To: "Bill Page" <bill.page@newsynthesis.org>
In-Reply-To: <fbcd16d40710251710v22eb1444w3ff5d8d56a9f6bd2@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <fbcd16d40710251710v22eb1444w3ff5d8d56a9f6bd2@mail.gmail.com>
X-Google-Sender-Auth: 6a44baa08a436d81
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
X-Mailman-Approved-At: Fri, 26 Oct 2007 09:40:51 -0400
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net, aldor-l <aldor-l@aldor.org>
Subject: [Axiom-math] Re: [Aldor-l] Type equivalence of domains in Axiom and
	Aldor
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Fri, 26 Oct 2007 04:09:24 -0000

Hi Bill,

      I unfortunately couldn't make it to the Aldor workshop and I
haven't touched the language in a few years, but I do have a comment.

      Your questions have definite answers in category theory and
since Aldor is *almost* doing category theory, it's tempting to think
that the categorical answers to your questions are really what should
naturally fit into the language.  I wrote up something trying this out
for the 2001 workshop

http://atlas.bu.edu/~youssef/papers/math/aldor/aldor.pdf

I still think that this is a good way to look for flaws in the
language - implement category theory and see what goes wrong.

Best regards,

    Saul Youssef

On 10/25/07, Bill Page <bill.page@newsynthesis.org> wrote:
> Dear Friends of Axiom and Aldor,
>
> As a result of the recent message thread about "iterators and
> cartesian product" in the Axiom library I have been thinking again
> about type equivalence. For example consider the following domains in
> Axiom:
>
> (1) -> P:=Product(Stream Integer,Stream Integer)
>
>    (1)  Product(Stream Integer,Stream Integer)
>                                                         Type: Domain
> (2) -> Q:=Stream Product(Integer,Integer)
>
>    (2)  Stream Product(Integer,Integer)
>                                                        Type: Domain
>
> On reflection (pun intended) it seems that 'Stream' is a "sum-like"
> domain constructor so that we might reasonably expect algebraically
> that a 'Product' distributes over a 'Stream' and therefore wish to
> design the Axiom library so that this is satisfied.
>
> Thus we should have
>
>    P = Q
>
> Side Note: Perhaps with an extension of the domain 'Domain' that Gaby
> recently introduced in OpenAxiom it would actually be possible to
> write and evaluate this expression in Axiom.
>
> I understand that neither Spad nor Aldor actually evaluate type
> expressions like P and Q above so it does not make sense to ask for
> "value" equality of these two domains. But perhaps EQUAL in the Lisp
> sense (ref: http://www.cs.cmu.edu/Groups/AI/html/cltl/clm/node74.html)
> could appliy?
>
> Therefore I would propose the following definition of type-equivalence
> of domains:
>
>   Def: Two domains P and Q are equivalent if and only if both domains satisfy
>   exactly the same set of categories: (P has x) = (Q has x) for all Category
>   expressions x *and* neither P nor Q has any explicit exports that are not
>   provided by some named category.
>
> It seems that in principle it should be possible to give an efficient
> decision procedure for this test if it is not already implemented
> somewhere in the Spad and Aldor compilers. I would like to understand
> this better from the point of view of the compiler and iterpreter
> design.
>
> Obviously it makes sense to require that two equivalent domains must
> provide the same set of exported operations (the same interface)
> having the same names and same signatures. But as I understand the
> intention of the semantics of categories in both Axiom and Aldor this
> is not enough. We want categories to represent abstract concepts
> usually with a well-defined mathematical meaning. That is the reason
> for explicitly referring to satisfaction of categories in the
> definition above. Further since domains can also explicitly include
> exported operations in the 'with' clause (i.e. "anonymous categories"
> as defined in the Aldor user's guide), if this mathematical meaning is
> carried only by the named categories, such anonymous categories must
> always be assumed to represent different categories in each domain in
> which they occur.
>
> With this definition it is easy to show that the current definitions
> of 'Product' and 'Stream' do not satisfy the expected distributive
> property. Right now both 'Stream' and 'Product' have explicit exports,
> further the actual list of exported operations does not match at all:
>
> (3) -> )sh P
>  Product(Stream Integer,Stream Integer) is a domain constructor.
>  Abbreviation for Product is PRODUCT
>  This constructor is not exposed in this frame.
>  Issue )edit /usr/local/lib/axiom/target/i686-suse-linux/../../src/algebra/PRODUCT.spad
> to see algebra source code for PRODUCT
>
> ------------------------------- Operations --------------------------------
>
>  ?*? : (Integer,%) -> %                ?*? : (PositiveInteger,%) -> %
> ...
>
> (3) -> )sh Q
>  Stream Product(Integer,Integer) is a domain constructor.
>  Abbreviation for Stream is STREAM
>  This constructor is exposed in this frame.
>  Issue )edit /usr/local/lib/axiom/target/i686-suse-linux/../../src/algebra/STREAM.spad
> to see algebra source code for STREAM
>
> ------------------------------- Operations --------------------------------
>
>  #? : % -> NonNegativeInteger          ?=? : (%,%) -> Boolean
> ...
>
> As a mininum it would probably be necessary to introduce two new
> cateogies: StreamCat(S) and ProductCat(X,Y). Then it would seem that
> would be necessary add code along the lines of
>
>    Product(A: SetCategory,B: SetCategory): ProductCat(A,B) with
>      if A has StreamCat(S) and B has StreamCat(S) then
>         StreamCat(S)
>
> And
>
>   Stream(S:Type): StreamCat(S) with
>     if S has ProductCat(A,B) then
>        ProductCat(A,B)
>
> for some set of allowed domains A, B and S, including for example
> 'Integer'. Of course there is a problem here about specifying the
> specific list of domains for A, B and C. It would be desirable I
> think, if the compiler could produce generic code which would apply
> whtn A, B and C are still unknowns. Is this possible?
>
> Of course we also need the implementations of the associate operations.
>
> With these changes we would be able to satisfy the definition of the
> type-equivalence of P and Q above.
>
> I would like to know if other developers think this more algebraic
> approach to the design of the Axiom library domains makes sense.
> Comments and criticisms are invited.
>
> Regards,
> Bill Page.
>
> _______________________________________________
> Aldor-l mailing list
> Aldor-l@aldor.org
> http://aldor.org/mailman/listinfo/aldor-l_aldor.org
>
>



From MAILER-DAEMON Fri Oct 26 16:30:47 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IlVpO-0003iU-W4
	for mharc-axiom-math@gnu.org; Fri, 26 Oct 2007 16:30:47 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IlVpO-0003ga-3T
	for axiom-math@nongnu.org; Fri, 26 Oct 2007 16:30:46 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IlVpL-0003Yq-Eh
	for axiom-math@nongnu.org; Fri, 26 Oct 2007 16:30:45 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IlVpK-0003Yd-Vm
	for axiom-math@nongnu.org; Fri, 26 Oct 2007 16:30:43 -0400
Received: from smtp-105-friday.noc.nerim.net ([62.4.17.105]
	helo=mallaury.nerim.net)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <fmaltey@nerim.fr>) id 1IlVpK-0006Eq-EQ
	for axiom-math@nongnu.org; Fri, 26 Oct 2007 16:30:42 -0400
Received: from localhost (fmaltey.net0.nerim.net [213.41.170.4])
	by mallaury.nerim.net (Postfix) with ESMTP id A81CE4F3DA;
	Fri, 26 Oct 2007 22:30:26 +0200 (CEST)
Received: from fmy by localhost with local (Exim 4.63)
	(envelope-from <fmaltey@nerim.fr>)
	id 1IlVpD-0001dr-04; Fri, 26 Oct 2007 22:30:35 +0200
To: fricas-devel@googlegroups.com,  open-axiom-devel@lists.sourceforge.net,
	axiom-math@nongnu.org
References: <fbcd16d40710251710v22eb1444w3ff5d8d56a9f6bd2@mail.gmail.com>
From: Francois Maltey <fmaltey@nerim.fr>
Date: 26 Oct 2007 22:30:34 +0200
In-Reply-To: <fbcd16d40710251710v22eb1444w3ff5d8d56a9f6bd2@mail.gmail.com>
Message-ID: <87ir4tzkid.fsf@nerim.fr>
Lines: 85
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: quoted-printable
X-detected-kernel: by monty-python.gnu.org: FreeBSD 4.6-4.9
Cc: 
Subject: [Axiom-math] Re: Type equivalence of domains in Axiom and Aldor
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Fri, 26 Oct 2007 20:30:46 -0000

Thanks Bill,=20

> Dear Friends of Axiom and Aldor,
>=20
> I have been thinking again about type equivalence.=20
> For example consider the following domains in Axiom:
>=20
> (1) -> P:=3DProduct(Stream Integer,Stream Integer)
> (2) -> Q:=3DStream Product(Integer,Integer)
>                                                        Type: Domain

Can I understand that as the relationship between=20
Complex Fraction Integer and Fraction Complex Integer ?
[I don't find any surprising effect done by this coerce.]

> It seems that 'Stream' is a "sum-like" domain constructor so=20
> that we might reasonably expect algebraically that a 'Product'=20
> distributes over a 'Stream' and therefore wish to
> design the Axiom library so that this is satisfied.

I know that cartesian product of set is the set of brace=20
   E x F =3D {(x,y) | x in E and y in F}.
   Product (Set XX, Set YY) is Set Product (XX, YY)

> Thus we should have P =3D Q.

Do you identify Set and Stream ?
but a stream can repeat its elements [1,2,3,1,2,3,1,...
Perhaps I mismatch the Domain << Stream Integer >> and the use of one Str=
eam.

> I understand that neither Spad nor Aldor actually evaluate type
> expressions like P and Q.

1.. x 1.. may be [(1,1), (1,2),(2,1), (1,3),(2,2),(3,1), ...

> But perhaps EQUAL in the Lisp sense could apply?

A semi-decidable equal ?=20
The answer is false when view tests shows that the results are differents=
.
The answer is true when the inner built are equal.
The answer is unknown in the other cases.

It's not a problem :=20
1 - 2*sin^2 x and 2*cos^2 x - 1 are differents for most (or all) systems.

> Therefore I would propose the following definition of type-equivalence
> of domains:
>=20
>   Def: Two domains P and Q are equivalent if and only if=20
>   both domains satisfy exactly the same set of categories:=20
>   (P has x) =3D (Q has x) for all Category expressions x=20
>   *and* neither P nor Q has any explicit exports that are not
>         provided by some named category.

I don't understand this last case.

> But as I understand the
> intention of the semantics of categories in both Axiom and Aldor this
> is not enough. We want categories to represent abstract concepts
> usually with a well-defined mathematical meaning.=20

Product in for-loop isn't exactly the product of 2 sets.

In a for-loop [a,b,a] x [1,2] gives [a,1],[b,1],[a,1],[a,2],[b,2],[a,2].
types can be differents. A for-loop might also works for [a,b]=A0x [1..].

Does your product can be understand=20
for cartesian products of set and for for-loop ?=20

> I would like to know if other developers think this more algebraic
> approach to the design of the Axiom library domains makes sense.

Martin almost convinces me that the algebraic=20
               [f (u,v) for (u,v) in [a,b,c] X [1,2,3]]=20
is better than [f (u,v) for u in [a,b,c] repeat for v in [1,2,3]]

but I expect a syntax suggar and automatic coerce.

The * isn't the better operator because this locks
    {1,2,3} * {1,2,3} =3D {1,2,3,4,6,9}=20
and {1,2,3} + {1,2,3} =3D {2,3,4,5,6}

I hope I don't appear too stupid !

F.



From MAILER-DAEMON Sat Oct 27 03:23:26 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Ilg10-0004ff-4h
	for mharc-axiom-math@gnu.org; Sat, 27 Oct 2007 03:23:26 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Ilg0y-0004c6-6Z
	for axiom-math@nongnu.org; Sat, 27 Oct 2007 03:23:24 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Ilg0x-0004Zr-57
	for axiom-math@nongnu.org; Sat, 27 Oct 2007 03:23:23 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Ilg0w-0004ZG-TI
	for axiom-math@nongnu.org; Sat, 27 Oct 2007 03:23:22 -0400
Received: from mx20.gnu.org ([199.232.41.8])
	by monty-python.gnu.org with esmtps (TLS-1.0:RSA_AES_256_CBC_SHA1:32)
	(Exim 4.60) (envelope-from <martin.rubey@univie.ac.at>)
	id 1Ilg0w-0007tl-GP
	for axiom-math@nongnu.org; Sat, 27 Oct 2007 03:23:22 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by mx20.gnu.org with esmtp (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1IlfYJ-0007gs-ER
	for axiom-math@nongnu.org; Sat, 27 Oct 2007 02:53:47 -0400
Received: from joan.univie.ac.at ([131.130.3.110] helo=joan.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.68)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1IlfYE-0007Ya-UP; Sat, 27 Oct 2007 08:53:42 +0200
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by joan.univie.ac.at with esmtp (Exim 4.68)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1IlfYE-0008PA-TM; Sat, 27 Oct 2007 08:53:42 +0200
Sender: rubey@aquin.mat.univie.ac.at
To: fricas-devel@googlegroups.com
References: <fbcd16d40710251710v22eb1444w3ff5d8d56a9f6bd2@mail.gmail.com>
	<87ir4tzkid.fsf@nerim.fr>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 27 Oct 2007 08:53:42 +0200
In-Reply-To: <87ir4tzkid.fsf@nerim.fr>
Message-ID: <9qr6jhvyix.fsf@aquin.mat.univie.ac.at>
Lines: 24
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: by mx20.gnu.org: Linux 2.6, seldom 2.4 (older, 4)
X-detected-kernel: by monty-python.gnu.org: Linux 2.6, seldom 2.4 (older, 4)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [fricas-devel] Re: Type equivalence of domains in
	Axiom and Aldor
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 27 Oct 2007 07:23:24 -0000

Francois Maltey <fmaltey@nerim.fr> writes:

> Martin almost convinces me that the algebraic 
>                [f (u,v) for (u,v) in [a,b,c] X [1,2,3]] 
> is better than [f (u,v) for u in [a,b,c] repeat for v in [1,2,3]]
> 
> but I expect a syntax suggar and automatic coerce.

It occurred to me that the following might make it even clearer:

what does a looping construct have to do with a Cartesian product?  Except that
one may (but doesn't have to) use it to *implement* a function that returns all
elements of a Cartesian product.

> The * isn't the better operator because this locks
>     {1,2,3} * {1,2,3} = {1,2,3,4,6,9} 
> and {1,2,3} + {1,2,3} = {2,3,4,5,6}

I actually wondered already once, why "+" is not union$Set, "-" not
difference$Set.  I didn't think of the possibility above, although I doubt that
it would be too useful.  After all, you can even define it only if the elements
understand "+" and "*".

Martin




From MAILER-DAEMON Sat Oct 27 09:24:37 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1IlleX-0006Os-LT
	for mharc-axiom-math@gnu.org; Sat, 27 Oct 2007 09:24:37 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1IlleW-0006OL-69
	for axiom-math@nongnu.org; Sat, 27 Oct 2007 09:24:36 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1IlleR-0006Jq-26
	for axiom-math@nongnu.org; Sat, 27 Oct 2007 09:24:35 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1IlleQ-0006Jb-Qt
	for axiom-math@nongnu.org; Sat, 27 Oct 2007 09:24:30 -0400
Received: from ctb-mesg8.saix.net ([196.25.240.78])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <cfrangos@telkomsa.net>) id 1IlleQ-0002Gw-Fq
	for axiom-math@nongnu.org; Sat, 27 Oct 2007 09:24:30 -0400
Received: from zeta (tsil-ip-nas-1-p214.telkom-ipnet.co.za [155.239.188.214])
	by ctb-mesg8.saix.net (Postfix) with SMTP id 297CC2A53
	for <axiom-math@nongnu.org>; Sat, 27 Oct 2007 15:24:20 +0200 (SAST)
Content-Type: text/plain;
  charset="us-ascii"
From: C. Frangos <cfrangos@telkomsa.net>
To: axiom-math@nongnu.org
Date: Sat, 27 Oct 2007 14:26:57 +0200
X-Mailer: KMail [version 1.2]
MIME-Version: 1.0
Message-Id: <0710271236331P.20613@zeta>
Content-Transfer-Encoding: quoted-printable
X-detected-kernel: by monty-python.gnu.org: Solaris 9
Subject: [Axiom-math] Axiom: Programming examples.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: cfrangos@telkomsa.net
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sat, 27 Oct 2007 13:24:36 -0000


26 October 2007

Thanks very much to Bill Page, Time Daly, Francois Maltey and Waldeck Heb=
isch
for carefully going through my programming example below some time ago
and suggesting corrections.

Any assistance with the following would be appreciated:

(1) It would be very helpful if somebody could email me=20
    basic programming examples in axiom demonstrating the=20
    usage of the underscore _ at end of lines in combination with
    basic programming constructs     like nested for ...to... loops,
    repeat ...until..., while...do...,  if ,...then...else..., etc.
    (I prefer the underscore to piles).

(2) In Matlab, there is a pause function which halts program execution
    until any key is pressed. How can I construct a function in axiom
    to do the same thing ??

(3) How can an expression be displayed as x1*cos(x2)+........, instead
    of x1 cos(x2) +..... ??

(4) Are there accessible mathematical references that
clearly explain the theory of rings, categories, etc, and the relationshi=
p=20
with axiom rings, domains, categories etc ? (I have the axiom  book and T=
im=20
Daly's book).


(5) I uncommented the line
--testkinemat1() =3D=3D_=20
in the script below, in order to create a function from the script. Howev=
er, =20
I get an error when I try to run the function from the command line.

(6) Are there additional simplification functions (user packages, etc
    ?) other than simplify() for expressions with complicated
    trigonometric terms ?

(7) I want to mainly use local variables in function definitions. How are
    local variables declared or defined in functions ??


TIA,

C. Frangos.



--testkinemat1() =3D=3D_=20

Acon :=3D matrix([[1 , 0 , Lo1*sin(phi) , -sin(phi)*a , 0 , 0 , 0 , 0 , 0=
],_
[0 , 1 , -Lo1*cos(phi) , a*cos(phi) , 0 , 0 , 0 , 0 , 0],_
[1 , 0 , -Lo1*sin(phi) , 0 , -a*sin(phi), 0 , 0 , 0 , 0],_
[0 , 1 , Lo1*cos(phi) , 0 , a*cos(phi) , 0 , 0 , 0 , 0],_
[1,0,-Lc*cos(phi)+Lo1*sin(phi),0,0,0,-a*sin(phi)*cos(delta3)_
-a*cos(phi)*sin(delta3),0,0],_
[0,1,-Lc*sin(phi)-Lo1*cos(phi),0,0,0,a*cos(phi)*cos(delta3)_
-a*sin(phi)*sin(delta3),0,0],_=20
[1,0,-Lc*cos(phi)-Lo1*sin(phi),0,0,(-2*sin(phi)*Lo1*sin(delta3)-sin(phi)*=
_
Lc*cos(delta3)-cos(phi)*Lc*sin(delta3))*a/sqrt(4*Lo1^2*sin(delta3)^2+_
4*Lo1*sin(delta3)*Lc*cos(delta3)+Lc^2*cos(delta3)^2+Lc^2*sin(delta3)^2),0=
,0,0],_=20
[0,1,-Lc*sin(phi)+Lo1*cos(phi),0,0,a*(2*cos(phi)*Lo1*sin(delta3)+_
cos(phi)*Lc*cos(delta3)-sin(phi)*Lc*sin(delta3))/sqrt(4*Lo1^2*sin(delta3)=
^2+_
4*Lo1*sin(delta3)*Lc*cos(delta3)+Lc^2*cos(delta3)^2+Lc^2*sin(delta3)^2),0=
,0,0],_
[0 , 0 , 0 , 0 , 0 , 1 , 1 , 0 , -k]])

Acon :=3D simplify(Acon)

rankAcon :=3D rank(Acon)

Acone :=3D rowEchelon(Acon)

Aconnull :=3D nullSpace(Acon)

nullity :=3D nullity(Acon)




From MAILER-DAEMON Sun Oct 28 07:37:03 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Im6Rz-0008Jl-LE
	for mharc-axiom-math@gnu.org; Sun, 28 Oct 2007 07:37:03 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Im6Rx-0008Ih-Je
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 07:37:01 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Im6Rv-0008Hk-WB
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 07:37:00 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Im6Rv-0008Hh-R2
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 07:36:59 -0400
Received: from smtp-100-sunday.nerim.net ([62.4.16.100] helo=kraid.nerim.net)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <fmaltey@nerim.fr>) id 1Im6Ru-0001jJ-LQ
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 07:36:59 -0400
Received: from localhost (fmaltey.net0.nerim.net [213.41.170.4])
	by kraid.nerim.net (Postfix) with ESMTP id B6C3DCF05F;
	Sun, 28 Oct 2007 12:36:55 +0100 (CET)
Received: from fmy by localhost with local (Exim 4.63)
	(envelope-from <fmaltey@nerim.fr>)
	id 1Im6Rq-0001Gd-Lh; Sun, 28 Oct 2007 12:36:55 +0100
To: axiom-math@nongnu.org,cfrangos@telkomsa.net
Subject: Re: [Axiom-math] Axiom: Programming examples.
References: <0710271236331P.20613@zeta>
From: Francois Maltey <fmaltey@nerim.fr>
Date: 28 Oct 2007 12:36:54 +0100
In-Reply-To: <0710271236331P.20613@zeta>
Message-ID: <87ve8ra2sp.fsf@nerim.fr>
Lines: 157
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: by monty-python.gnu.org: FreeBSD 6.x (1)
Cc: 
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sun, 28 Oct 2007 11:37:02 -0000

Hello, 

(0) : 
The pretty print sqrt with the symbol \/--- is replaced by the
ROOT function for input longer than one line.


(1) :
> (1) It would be very helpful if somebody could email me 
>     basic programming examples in axiom demonstrating the 
>     usage of the underscore _ at end of lines in combination with
>     basic programming constructs     like nested for ...to... loops,
>     repeat ...until..., while...do...,  if ,...then...else..., etc.
>     (I prefer the underscore to piles).

The _ means one line for axiom input.
I prefer pile but you can use _ if you prefer.

-- with piles
for k in 1..10 
  repeat
    output (concat [k::String."*8=".(k*8)::String])

or 

You must? use braces {} and separate instructions with semicolon ; 
You can indent without any constraint.

With pile you can begin a new line everywhere but not at the outer piles
positions.
a := 
  matrix [[..]] -- is right, the lines aren't indented.
a := 
matrix -- is wrong, the line are indented.


for k in 1..10 _
  repeat_
  {output (concat [k::String,"*8=",(k*8)::String])}

or

for k in 1..10 repeat {output (concat [k::String,"*8=",(k*8)::String])}

The Syracuse sequence :
u(0)=a in positive integer, 
u(n+1)=u(n)/2 if n is even, and u(n+1)=3*u(n)+1
the result is the first n when u(n)=1

u := 123
n := 0
while u ~= 1 
  repeat
    if even? u then    -- the then is in the same line than if.
        u := u/2 
      else 
        u := 3*u+1
    n := n+1
n 

or

u := 123
n := 0
while u ~= 1 
  repeat
    if even? u then u := u/2 else u := 3*u+1
    n := n+1
n 

or 

u := 123;_
n := 0;_
while u ~= 1 repeat_
    {if even? u then u := u/2 else u := 3*u+1; n := n+1} ;_
n 

I can't use the => operator for if-then-else tests.

u := 123
n := 0
while u ~= 1 
  repeat
    n := n+1 --- must be placed before, the u:= 3*u+1 is the else case.
    even? u => u := u/2 
    u := 3*u+1
n 

MySeq a == 
  u := a 
  n := 0
  while u ~= 1 
    repeat
      n := n+1 --- must be placed before, the u:= 3*u+1 is the else case.
      if even? u then u := u/2 else u := 3*u+1
  n 


> (2) In Matlab, there is a pause function which halts program execution
>     until any key is pressed. How can I construct a function in axiom
>     to do the same thing ??

I don't know how are read / input / sleep commands.

> (3) How can an expression be displayed as x1*cos(x2)+........, instead
>     of x1 cos(x2) +..... ??

Do you know the text processor tex ?
You might get a tex output by tex (the expression)
There is also a fortran output command I believe.

> (4) Are there accessible mathematical references that
> clearly explain the theory of rings, categories, etc, and the relationship 
> with axiom rings, domains, categories etc ? (I have the axiom  book and Tim 
> Daly's book).

The axiom book with 1.0e3 pages is THE reference.
rings and groups are mathematic terms in algebra.
domains and categories are the way that axiom try to translate 
theses properties in a language. You can use axiom as a typed langage
and ignore the mathmeatics algebra.
 
> (5) I uncommented the line
> --testkinemat1() ==_ 
> in the script below, in order to create a function from the script. However,  
> I get an error when I try to run the function from the command line.

This command works when there is no empty line between the header and 
the Acon := ...
 
> (6) Are there additional simplification functions (user packages, etc
>     ?) other than simplify() for expressions with complicated
>     trigonometric terms ?

Can you simplify it with a pen ?
In this case it's possible to do it with computer algebra, 
In the reponse is no I fear it's impossible. 

The functions defined in axiom for trigonometric are in the file 
   .../mnt/linux/src/algebra/manip.spad
Look at the export part in the TranscendentalManipulations package
in this file.

axiom isn't intuitive for theses functions.
but they are presents...

> (7) I want to mainly use local variables in function definitions. How are
>     local variables declared or defined in functions ??

I believe that all inner variables are local. Try :

fct a == {x := 7 ; a+x} 
x := 100 
fct 11
x 




From MAILER-DAEMON Sun Oct 28 08:52:57 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1Im7dR-0002yR-KM
	for mharc-axiom-math@gnu.org; Sun, 28 Oct 2007 08:52:57 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1Im7dP-0002wR-W2
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 08:52:56 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1Im7dO-0002u1-9K
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 08:52:55 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1Im7dO-0002tU-0P
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 08:52:54 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1Im7dN-0006bo-O4
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 08:52:53 -0400
Received: from joan.univie.ac.at ([131.130.3.110] helo=joan.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.68)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1Im7dH-0004ot-RR; Sun, 28 Oct 2007 13:52:47 +0100
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by joan.univie.ac.at with esmtp (Exim 4.68)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1Im7dH-00006Q-QK; Sun, 28 Oct 2007 13:52:47 +0100
Sender: rubey@aquin.mat.univie.ac.at
To: Francois Maltey <fmaltey@nerim.fr>
Subject: Re: [Axiom-math] Axiom: Programming examples.
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 28 Oct 2007 13:52:47 +0100
In-Reply-To: <87ve8ra2sp.fsf@nerim.fr>
Message-ID: <9q8x5ncsf4.fsf@aquin.mat.univie.ac.at>
Lines: 28
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: by monty-python.gnu.org: Linux 2.6, seldom 2.4 (older, 4)
Cc: axiom-math@nongnu.org
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sun, 28 Oct 2007 12:52:56 -0000

Francois Maltey <fmaltey@nerim.fr> writes:

> You must? use braces {} and separate instructions with semicolon ; 
> You can indent without any constraint.

As far as I know this only works in Aldor!?

> > (2) In Matlab, there is a pause function which halts program execution
> >     until any key is pressed. How can I construct a function in axiom
> >     to do the same thing ??
> 
> I don't know how are read / input / sleep commands.

You'll need to go to lisp to do that, maybe using read_-line()$Lisp

> > (3) How can an expression be displayed as x1*cos(x2)+........, instead
> >     of x1 cos(x2) +..... ??

maybe you like unparse(expr)::INFORM) 

> > (7) I want to mainly use local variables in function definitions. How are
> >     local variables declared or defined in functions ??
> 
> I believe that all inner variables are local. Try :

Mostly.  within local functions it doesn't seem to work reliably, although it should.

Martin




From MAILER-DAEMON Sun Oct 28 16:32:26 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1ImEo6-0003MP-E2
	for mharc-axiom-math@gnu.org; Sun, 28 Oct 2007 16:32:26 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1ImEo4-0003Jc-A0
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 16:32:24 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1ImEo2-0003I6-U1
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 16:32:23 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1ImEo2-0003Hh-K6
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 16:32:22 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39]
	helo=smtpauthhost.risc.uni-linz.ac.at)
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1ImEo1-00005n-06
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 16:32:21 -0400
Received: from [193.170.38.119] (hemmecke@woodpecker.risc.uni-linz.ac.at
	[193.170.38.119]) (authenticated bits=0)
	by smtpauthhost.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with
	ESMTP id l9SKW1To016464
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Sun, 28 Oct 2007 21:32:01 +0100
Message-ID: <4723A556.8040502@hemmecke.de>
Date: Sat, 27 Oct 2007 22:53:42 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.6 (X11/20070728)
MIME-Version: 1.0
To: Bill Page <bill.page@newsynthesis.org>
Subject: Re: [Axiom-math] Type equivalence of domains in Axiom and Aldor
References: <fbcd16d40710251710v22eb1444w3ff5d8d56a9f6bd2@mail.gmail.com>
In-Reply-To: <fbcd16d40710251710v22eb1444w3ff5d8d56a9f6bd2@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: by monty-python.gnu.org: Linux 2.4-2.6
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net, aldor-l <aldor-l@aldor.org>
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sun, 28 Oct 2007 20:32:25 -0000

>   Def: Two domains P and Q are equivalent if and only if both domains satisfy
>   exactly the same set of categories: (P has x) = (Q has x) for all Category
>   expressions x *and* neither P nor Q has any explicit exports that are not
>   provided by some named category.

Let's see...

Cat: Category == with {
   coerce: Integer -> %;
   coerce: % -> Integer;
   bar: (%, %) ->  %;
}
P: Cat == add {
   Rep == Integer; import from Rep
   coerce(x: Integer): % == per x;
   coerce(x: %): Integer == rep x;
   bar(x: %, y: %): % == per(rep x + rep y);
}
----------------------------------^

Q: Cat == add {
   Rep == Integer; import from Rep
   coerce(x: Integer): % == per x;
   coerce(x: %): Integer == rep x;
   bar(x: %, y: %): % == per(rep x - rep y);
}
----------------------------------^

You are saying that P and Q are equivalent.

Ralf




From MAILER-DAEMON Sun Oct 28 16:32:26 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1ImEo6-0003M9-8i
	for mharc-axiom-math@gnu.org; Sun, 28 Oct 2007 16:32:26 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1ImEo4-0003Jd-A9
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 16:32:24 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1ImEo1-0003GF-Qj
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 16:32:23 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1ImEo1-0003Fn-Lh
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 16:32:21 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39]
	helo=smtpauthhost.risc.uni-linz.ac.at)
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1ImEo0-00005G-K7
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 16:32:21 -0400
Received: from [193.170.38.119] (hemmecke@woodpecker.risc.uni-linz.ac.at
	[193.170.38.119]) (authenticated bits=0)
	by smtpauthhost.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with
	ESMTP id l9SKW1To016461
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Sun, 28 Oct 2007 21:32:01 +0100
Message-ID: <47238372.2080402@hemmecke.de>
Date: Sat, 27 Oct 2007 20:29:06 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.6 (X11/20070728)
MIME-Version: 1.0
To: Bill Page <bill.page@newsynthesis.org>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>	<471D449F.4020305@hemmecke.de>	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>	<471E8D7E.6070801@hemmecke.de>	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>	<Pine.LNX.4.64.0710240649530.6939@gauss.cs.tamu.edu>	<fbcd16d40710240651u549e3f22y4b97663aa9677c5@mail.gmail.com>	<Pine.LNX.4.64.0710240905560.6939@gauss.cs.tamu.edu>	<471FC65C.6050904@hemmecke.de>
	<fbcd16d40710250950s7394c756j8b1d1fd21113ef29@mail.gmail.com>
In-Reply-To: <fbcd16d40710250950s7394c756j8b1d1fd21113ef29@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: by monty-python.gnu.org: Linux 2.4-2.6
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net, Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re:
 [fricas-devel] Re:	[fricas-devel]
 Re: [fricas-devel] Re: iterators and cartesian	product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sun, 28 Oct 2007 20:32:24 -0000

On 10/25/2007 06:50 PM, Bill Page wrote:
> On 10/24/07, Ralf Hemmecke wrote:
>>> |   '1..' is another (better?) name for PositiveInteger
>>>
>>> No, it is not.  Both behave quite differently in many situations.
>> What?
>>
>> Suppose I have given
>>
>>    PositiveIntegerCategory
>>
>> and suppose
>>
>>    PositiveInteger: PositiveIntegerCategory == add {...}
>>
> 
> In the existing Axiom library PositiveInteger is a subdomain of
> Integer. The Axiom interpreter infers the following domain
> 
>   UniversalSegment PositiveInteger
> 
> of the expression '1..'. 'UniversalSegment(S)' includes an operation
> 'expand' that returns a Stream(S) provided S had OrderedRing.
> 
>> then
>>
>>    (..)(i: Integer): PositiveIntegerCategory == PositiveInteger
>>
>> For simplicity I simply ignore the parameter and in the following I
>> simply use an existing "IntegerType" from LibAldor.
>>
>> ---BEGIN aaa.as
>> #include "aldor"
>> #include "aldorio"
>> PositiveInteger: IntegerType == Integer add;
>> (..)(i: Integer): IntegerType == PositiveInteger add;
>> one:*Integer == 1$Integer;
>> import from one..;
>> stdout << 3 << newline;
>> ---END aaa.as
>>
>> (I don't import from Integer since I use ":*" instead of ":". Remove the
>> * and see what the compiler tells you.)
>>
>> Add the line
>>
>> for i in one.. repeat stdout << i << newline;
>>
>> to the program above and try to compile. Of course it must fail.
>>  >aldor -fx -laldor aaa.as
>> "aaa.as", line 9: for i in one.. repeat stdout << i << newline;
>>                    ....^.......^
>> [L9 C5] #2 (Error) No meaning for identifier `i'.
>> [L9 C13] #1 (Error) Argument 1 of `generator' did not match any possible
>> parameter type.
>>      The rejected type is
>>                  IntegerType with
>>                      == Posi....
>>      Expected type String.
>>
>> Since there is no function (..) which returns a Generator(Something).
>>
>> But still, I cannot see, why
>>
>>    one..
>>
>> behaves in any way different from PositiveInteger.
>>
> 
> The point is that '1..' as a 'UniversalSegment' provides only certain
> specific exports which differ from those available in
> 'PositiveInteger'.

I think, you are confusing the element-domain difference. If you say

   '1..' as a 'UniversalSegment'

that can only mean that

   1..

is of *type*

   UniversalSegment

Now, UniversalSegment(T) is a domain, so "1.." is an elment and thus 
"1.." does not export anything. (That is in total contrast to what I 
have constructed above. "one.." is a *domain* or type IntegerType.)

Ralf




From MAILER-DAEMON Sun Oct 28 16:32:28 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1ImEo7-0003OQ-UP
	for mharc-axiom-math@gnu.org; Sun, 28 Oct 2007 16:32:28 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1ImEo5-0003K4-3U
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 16:32:25 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1ImEo2-0003HR-Cy
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 16:32:22 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1ImEo2-0003H3-82
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 16:32:22 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39]
	helo=smtpauthhost.risc.uni-linz.ac.at)
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1ImEo0-00005I-Jj
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 16:32:21 -0400
Received: from [193.170.38.119] (hemmecke@woodpecker.risc.uni-linz.ac.at
	[193.170.38.119]) (authenticated bits=0)
	by smtpauthhost.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with
	ESMTP id l9SKVvTo016457
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Sun, 28 Oct 2007 21:31:58 +0100
Message-ID: <472381DA.8030404@hemmecke.de>
Date: Sat, 27 Oct 2007 20:22:18 +0200
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.6 (X11/20070728)
MIME-Version: 1.0
To: Bill Page <bill.page@newsynthesis.org>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>	<471D449F.4020305@hemmecke.de>	<fbcd16d40710231700p765b1867h743803ba998f26cb@mail.gmail.com>	<471E8D7E.6070801@hemmecke.de>	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>	<471E957A.1040403@hemmecke.de>	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>	<471E9EC1.3090707@hemmecke.de>	<fbcd16d40710231856n7f5379f6r52c31da01d1d5c18@mail.gmail.com>	<471FB511.5050404@hemmecke.de>
	<fbcd16d40710250940r46093bc5t85f719fa1c3c838@mail.gmail.com>
In-Reply-To: <fbcd16d40710250940r46093bc5t85f719fa1c3c838@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: by monty-python.gnu.org: Linux 2.4-2.6
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net, Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re:
 [fricas-devel] Re:	[fricas-devel]
 Re: [fricas-devel] Re: [fricas-devel] Re:	iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sun, 28 Oct 2007 20:32:26 -0000

On 10/25/2007 06:40 PM, Bill Page wrote:
> On 10/24/07, Ralf Hemmecke wrote:
>> ...
>> I cannot live anymore without "Generator". And I very much hope it will
>> make it into SPAD.

>>> Contrast this with 'Stream' in
>>> Axiom which (so far as I understand) does not require such an
>>> extension of Spad.
>> For me a stream is like a generator with memory.

> It is not my intention to sound critical but I would like to
> understand better this distinction. If Stream is a generalization of
> Generator, why do we need Generator?

Let me cite the documentation from stream.spad.pamphlet

++ A stream is an implementation of an infinite sequence using
++ a list of terms that have been computed and a function closure
++ to compute additional terms when needed.

First, a stream is an infinite sequence. If we get

(6) -> s:=construct([1,2,3])$Stream(Integer)
(6) ->
    (6)  [1,2,3]
                                                          Type: Stream 
Integer
(7) -> s.4
  7) ->
    >> Error detected within library code:
    elt: no such element

Then there is either something wrong with the code or with the 
documentation.

Second, according to the documentation a Stream is a pair (A,B) where A 
is a list of precomputed functions and B is a function that computes the 
next value.

If you would like to know the difference between Stream and Generator, 
then think of a Generator as the B part above.

In fact, in aldor-combinat, I have implemented a "DataStream" which has 
representation:
         Rep == Record(
	    gen: Generator T,
	    cache: PrimitiveArray T,
	    size: I,
	    numberOfElements: I,
	    constant?: Boolean
	);

In more simpler terms, my A is Array and my B is Generator. Does that help?

> The larger question remains however: When to use a domain to directly
> model something that is "set-like" and when to define a higher-order
> domain whose objects are "set-like"? To me this is not clear in either
> Spad or Aldor.

I don't think you gain very much if you only consider set-like domains. 
If, however, you are looking at finite fields, for sure, you will think 
of a domain, since it is more important that there are some operations 
that connect the elements.

Ralf




From MAILER-DAEMON Sun Oct 28 17:26:37 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1ImFeW-0002Zl-Ug
	for mharc-axiom-math@gnu.org; Sun, 28 Oct 2007 17:26:36 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1ImFeW-0002Zg-1w
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 17:26:36 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1ImFeU-0002Z9-Ev
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 17:26:35 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1ImFeU-0002Z6-8S
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 17:26:34 -0400
Received: from nf-out-0910.google.com ([64.233.182.189])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1ImFeR-0005CW-7l
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 17:26:32 -0400
Received: by nf-out-0910.google.com with SMTP id 30so1271925nfu
	for <axiom-math@nongnu.org>; Sun, 28 Oct 2007 14:26:28 -0700 (PDT)
Received: by 10.86.84.5 with SMTP id h5mr4238400fgb.1193606788247;
	Sun, 28 Oct 2007 14:26:28 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Sun, 28 Oct 2007 14:26:28 -0700 (PDT)
Message-ID: <fbcd16d40710281426k71569088i2f3545a7a9572174@mail.gmail.com>
Date: Sun, 28 Oct 2007 17:26:28 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: fricas-devel@googlegroups.com
Subject: Re: [fricas-devel] Re: [Axiom-math] Type equivalence of domains in
	Axiom and Aldor
In-Reply-To: <4723A556.8040502@hemmecke.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <fbcd16d40710251710v22eb1444w3ff5d8d56a9f6bd2@mail.gmail.com>
	<4723A556.8040502@hemmecke.de>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org,
	aldor-l <aldor-l@aldor.org>
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sun, 28 Oct 2007 21:26:36 -0000

On 10/27/07, Ralf Hemmecke wrote:
>
> >   Def: Two domains P and Q are equivalent if and only if both domains satisfy
> >   exactly the same set of categories: (P has x) = (Q has x) for all Category
> >   expressions x *and* neither P nor Q has any explicit exports that are not
> >   provided by some named category.
>
> Let's see...
>
> Cat: Category == with {
>    coerce: Integer -> %;
>    coerce: % -> Integer;
>    bar: (%, %) ->  %;
> }
> P: Cat == add {
>    Rep == Integer; import from Rep
>    coerce(x: Integer): % == per x;
>    coerce(x: %): Integer == rep x;
>    bar(x: %, y: %): % == per(rep x + rep y);
> }
> ----------------------------------^
>
> Q: Cat == add {
>    Rep == Integer; import from Rep
>    coerce(x: Integer): % == per x;
>    coerce(x: %): Integer == rep x;
>    bar(x: %, y: %): % == per(rep x - rep y);
> }
> ----------------------------------^
>
> You are saying that P and Q are equivalent.
>

No. I should have explicitly written "type-equivalent" as I did
elsewhere in that message. I would only want to say that their types
are equivalent - that they necessarily represent the same kind of
things. Something like: "they are both monoids".

I would also say that without giving more information about the use of
the category 'Cat' you are at risk of abusing the intention of
defining a category - at least in the context of the design of a
library such as Axiom library. What is the "meaning" of 'Cat' if it
makes sense to give two rather different definitions of 'bar'? I
started my discussion by saying that I assumed that the intention of
defining a category was to represent some specific aspect or common
mathematical property of a as set of mathematical object(s). I do not
want to think of a category as a mere syntactical convenience for
example like a macro.

Regards,
Bill Page.



From MAILER-DAEMON Sun Oct 28 17:37:43 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1ImFpG-0005vh-UP
	for mharc-axiom-math@gnu.org; Sun, 28 Oct 2007 17:37:43 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1ImFpF-0005rn-AG
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 17:37:41 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1ImFpE-0005px-L5
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 17:37:40 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1ImFpE-0005ph-FV
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 17:37:40 -0400
Received: from nf-out-0910.google.com ([64.233.182.187])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1ImFpE-0001MV-2z
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 17:37:40 -0400
Received: by nf-out-0910.google.com with SMTP id 30so1273315nfu
	for <axiom-math@nongnu.org>; Sun, 28 Oct 2007 14:37:39 -0700 (PDT)
Received: by 10.86.98.18 with SMTP id v18mr4258720fgb.1193607458757;
	Sun, 28 Oct 2007 14:37:38 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Sun, 28 Oct 2007 14:37:38 -0700 (PDT)
Message-ID: <fbcd16d40710281437v44757b91y8dec634b0457be76@mail.gmail.com>
Date: Sun, 28 Oct 2007 17:37:38 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: fricas-devel@googlegroups.com
In-Reply-To: <472381DA.8030404@hemmecke.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<471E957A.1040403@hemmecke.de>
	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
	<471E9EC1.3090707@hemmecke.de>
	<fbcd16d40710231856n7f5379f6r52c31da01d1d5c18@mail.gmail.com>
	<471FB511.5050404@hemmecke.de>
	<fbcd16d40710250940r46093bc5t85f719fa1c3c838@mail.gmail.com>
	<472381DA.8030404@hemmecke.de>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org,
	Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
	[fricas-devel] Re: [fricas-devel] Re: [fricas-devel] Re:
	[fricas-devel] Re: [fricas-devel] Re: iterators and cartesian
	product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sun, 28 Oct 2007 21:37:41 -0000

On 10/27/07, Ralf Hemmecke wrote:
>
> Let me cite the documentation from stream.spad.pamphlet
>
> ++ A stream is an implementation of an infinite sequence using
> ++ a list of terms that have been computed and a function closure
> ++ to compute additional terms when needed.
>
> First, a stream is an infinite sequence. If we get
>
> (6) -> s:=construct([1,2,3])$Stream(Integer)
> (6) ->
>     (6)  [1,2,3]
>                                                           Type: Stream
> Integer
> (7) -> s.4
>   7) ->
>     >> Error detected within library code:
>     elt: no such element
>
> Then there is either something wrong with the code or with the
> documentation.
>

I think it is the documentation. Given the exports of Stream, it
obviously should say only "potentially infinite".

> Second, according to the documentation a Stream is a pair (A,B) where A
> is a list of precomputed functions and B is a function that computes the
> next value.
>
> If you would like to know the difference between Stream and Generator,
> then think of a Generator as the B part above.
>

Ok.

> ...
> > The larger question remains however: When to use a domain to directly
> > model something that is "set-like" and when to define a higher-order
> > domain whose objects are "set-like"? To me this is not clear in either
> > Spad or Aldor.
>
> I don't think you gain very much if you only consider set-like domains.
> If, however, you are looking at finite fields, for sure, you will think
> of a domain, since it is more important that there are some operations
> that connect the elements.
>

So you say it is natural to define "PrimeField 7" as a domain itself
rather than defining a general domain of "PrimeFields" and
constructing "PrimeField 7" as an element of that domain? Yes, I think
that makes sense. But there are of course some operations that connect
elements of any well defined set, no? If it is only a matter of
degree, then I still think it is rather confusing that Axiom (and
Aldor) provides these two rather different alternative implementation
of something that is essentially the same.

I suppose what I am saying is that (maybe) there should really be no
distinction between domains and members of domains (objects) - that
all objects should also be domains in and of themselves. But of course
that is not the way Axiom was designed.

Regards,
Bill Page.



From MAILER-DAEMON Sun Oct 28 19:53:58 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1ImHx8-0003Ih-1Q
	for mharc-axiom-math@gnu.org; Sun, 28 Oct 2007 19:53:58 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1ImHx6-0003Ge-CT
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 19:53:56 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1ImHx5-0003Fd-LG
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 19:53:55 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1ImHx5-0003FR-Ft
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 19:53:55 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39]
	helo=smtpauthhost.risc.uni-linz.ac.at)
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1ImHx5-0003Ri-2J
	for axiom-math@nongnu.org; Sun, 28 Oct 2007 19:53:55 -0400
Received: from [193.170.38.119] (hemmecke@woodpecker.risc.uni-linz.ac.at
	[193.170.38.119]) (authenticated bits=0)
	by smtpauthhost.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with
	ESMTP id l9SNrZTo022446
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Mon, 29 Oct 2007 00:53:36 +0100
Message-ID: <47252F0C.6000703@hemmecke.de>
Date: Mon, 29 Oct 2007 01:53:32 +0100
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.6 (X11/20070728)
MIME-Version: 1.0
To: Bill Page <bill.page@newsynthesis.org>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>	<471E8D7E.6070801@hemmecke.de>	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>	<471E957A.1040403@hemmecke.de>	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>	<471E9EC1.3090707@hemmecke.de>	<fbcd16d40710231856n7f5379f6r52c31da01d1d5c18@mail.gmail.com>	<471FB511.5050404@hemmecke.de>	<fbcd16d40710250940r46093bc5t85f719fa1c3c838@mail.gmail.com>	<472381DA.8030404@hemmecke.de>
	<fbcd16d40710281437v44757b91y8dec634b0457be76@mail.gmail.com>
In-Reply-To: <fbcd16d40710281437v44757b91y8dec634b0457be76@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: by monty-python.gnu.org: Linux 2.4-2.6
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net, Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re:
 [fricas-devel] Re:	[fricas-devel]
 Re: [fricas-devel] Re: [fricas-devel] Re:	[fricas-devel] Re: iterators and
 cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Sun, 28 Oct 2007 23:53:56 -0000

On 10/28/2007 10:37 PM, Bill Page wrote:
 > On 10/27/07, Ralf Hemmecke wrote:
 >> Let me cite the documentation from stream.spad.pamphlet
 >>
 >> ++ A stream is an implementation of an infinite sequence using ++ a
 >> list of terms that have been computed and a function closure ++ to
 >> compute additional terms when needed.
 >>
 >> First, a stream is an infinite sequence. If we get
 >>
 >> (6) -> s:=construct([1,2,3])$Stream(Integer) (6) -> (6)  [1,2,3]
 >> Type: Stream Integer (7) -> s.4 7) ->
 >>>> Error detected within library code:
 >> elt: no such element
 >>
 >> Then there is either something wrong with the code or with the
 >> documentation.

 > I think it is the documentation. Given the exports of Stream, it
 > obviously should say only "potentially infinite".


Hmmm, I think, now we can start fighting. ;-)

I would be in favour of letting Stream(T) encode the


   T^N

where N is the natural numbers.
It seems that you want Stream(T) to denote

   T^N union T^(N)

where the second thing denotes the set of finite sequences (which is
actually already modelled by List or Array).

I have nothing against a domain that models the above union, but I would
like to start with basic domains and then build on them. And I would
reserve the name "Stream" for the infinite thing.

 >>> The larger question remains however: When to use a domain to
 >>> directly model something that is "set-like" and when to define a
 >>> higher-order domain whose objects are "set-like"? To me this is
 >>> not clear in either Spad or Aldor.
 >> I don't think you gain very much if you only consider set-like
 >> domains. If, however, you are looking at finite fields, for sure,
 >> you will think of a domain, since it is more important that there
 >> are some operations that connect the elements.

 > So you say it is natural to define "PrimeField 7" as a domain itself
 > rather than defining a general domain of "PrimeFields" and
 > constructing "PrimeField 7" as an element of that domain?

Honestly, I don't see much of a difference. In your and my view
"PrimeField 7" is a domain, which exports certain functions.
Nobody forbids me to create a domain whose elements are domains. (Maybe
SPAD does forbid...) But I think "PrimeFields" is a rather uninteresting
domain. What exports should it have?

 > Yes, I think that makes sense. But there are of course some
 > operations that connect elements of any well defined set, no?

Which? (Sorry, but I really cannot think of one.)

 > I suppose what I am saying is that (maybe) there should really be no
 > distinction between domains and members of domains (objects) - that
 > all objects should also be domains in and of themselves.

Let's go on with your thoughts. Could you tell me what operation the 
integer 2 (considered as a domain) should export?

Ralf



From MAILER-DAEMON Mon Oct 29 09:09:13 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1ImUMj-0007fJ-1U
	for mharc-axiom-math@gnu.org; Mon, 29 Oct 2007 09:09:13 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1ImUMh-0007ei-Cs
	for axiom-math@nongnu.org; Mon, 29 Oct 2007 09:09:11 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1ImUMg-0007eW-NQ
	for axiom-math@nongnu.org; Mon, 29 Oct 2007 09:09:11 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1ImUMg-0007eT-Jj
	for axiom-math@nongnu.org; Mon, 29 Oct 2007 09:09:10 -0400
Received: from smtp-101-monday.nerim.net ([62.4.16.101] helo=kraid.nerim.net)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <fmaltey@nerim.fr>) id 1ImUMf-00048S-MA
	for axiom-math@nongnu.org; Mon, 29 Oct 2007 09:09:10 -0400
Received: from localhost (fmaltey.net0.nerim.net [213.41.170.4])
	by kraid.nerim.net (Postfix) with ESMTP id 12747CF0AD;
	Mon, 29 Oct 2007 14:09:07 +0100 (CET)
Received: from fmy by localhost with local (Exim 4.63)
	(envelope-from <fmaltey@nerim.fr>)
	id 1ImUMb-0001Ji-8F; Mon, 29 Oct 2007 14:09:05 +0100
To: fricas-devel@googlegroups.com
References: <fbcd16d40710251710v22eb1444w3ff5d8d56a9f6bd2@mail.gmail.com>
	<87ir4tzkid.fsf@nerim.fr> <9qr6jhvyix.fsf@aquin.mat.univie.ac.at>
From: Francois Maltey <fmaltey@nerim.fr>
Date: 29 Oct 2007 14:09:05 +0100
In-Reply-To: <9qr6jhvyix.fsf@aquin.mat.univie.ac.at>
Message-ID: <87ejfegj9q.fsf_-_@nerim.fr>
Lines: 40
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: quoted-printable
X-detected-kernel: by monty-python.gnu.org: FreeBSD 6.x (1)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org
Subject: [Axiom-math] Re: Type equivalence of domains in Axiom and Aldor
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 29 Oct 2007 13:09:11 -0000

Dear Martin,=20

> what does a looping construct have to do with a Cartesian product?

The construct arround reduce/concat isn't so usual in order to=20
built several overlapped loops.
cartesian product and repeat keyword are two possibilities.

> > The * isn't the better operator because this locks
> >     {1,2,3} * {1,2,3} =3D {1,2,3,4,6,9}=20
> > and {1,2,3} + {1,2,3} =3D {2,3,4,5,6}
>=20
> I actually wondered already once, why "+" is not union$Set, "-" not
> difference$Set. =20

I think that operator for sets are missing.=20
union (union (E, F), G) is less clever than E union F union G.

But why do you want a +. It might be possible to have more operators=20
than only +, -, *, /, ^, ::, $, # and @.

> I didn't think of the possibility above, although I doubt that
> it would be too useful. =20

For finite set it's not useful,=20
but very useful for intervals ; and intervals and set are close.=20

I like to use it for chaotic systems, with numerical instability.
or in order to separate root of a function.

newton methods can forget some mutiple roots.
interval methods, with operations over intervals, can add false roots.=20

> After all, you can even define it only if the elements
> understand "+" and "*".=20

I meet this needs for functions.=20
axiom doesn't understand that sin+cos is the fuction x +-> (sin x + cos x=
)

Fran=E7ois



From MAILER-DAEMON Mon Oct 29 09:39:25 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1ImUpx-0002vW-6F
	for mharc-axiom-math@gnu.org; Mon, 29 Oct 2007 09:39:25 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1ImUpv-0002sO-Ms
	for axiom-math@nongnu.org; Mon, 29 Oct 2007 09:39:23 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1ImUpt-0002oE-M7
	for axiom-math@nongnu.org; Mon, 29 Oct 2007 09:39:23 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1ImUpt-0002ng-Gw
	for axiom-math@nongnu.org; Mon, 29 Oct 2007 09:39:21 -0400
Received: from grace.univie.ac.at ([131.130.3.115])
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.60)
	(envelope-from <martin.rubey@univie.ac.at>) id 1ImUpr-000796-Of
	for axiom-math@nongnu.org; Mon, 29 Oct 2007 09:39:20 -0400
Received: from justin.univie.ac.at ([131.130.3.111] helo=justin.univie.ac.at)
	by grace.univie.ac.at with esmtp (Exim 4.68)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1ImUpm-0002bx-Ck; Mon, 29 Oct 2007 14:39:14 +0100
Received: from aquin.mat.univie.ac.at ([131.130.16.163]
	helo=aquin.mat.univie.ac.at)
	by justin.univie.ac.at with esmtp (Exim 4.68)
	(envelope-from <martin.rubey@univie.ac.at>)
	id 1ImUpm-0007nY-BS; Mon, 29 Oct 2007 14:39:14 +0100
Sender: rubey@aquin.mat.univie.ac.at
To: fricas-devel@googlegroups.com
References: <fbcd16d40710251710v22eb1444w3ff5d8d56a9f6bd2@mail.gmail.com>
	<87ir4tzkid.fsf@nerim.fr> <9qr6jhvyix.fsf@aquin.mat.univie.ac.at>
	<87ejfegj9q.fsf_-_@nerim.fr>
From: Martin Rubey <martin.rubey@univie.ac.at>
Date: 29 Oct 2007 14:39:13 +0100
In-Reply-To: <87ejfegj9q.fsf_-_@nerim.fr>
Message-ID: <9q3avuqbum.fsf_-_@aquin.mat.univie.ac.at>
Lines: 67
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: by monty-python.gnu.org: Linux 2.6, seldom 2.4 (older, 4)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org
Subject: [Axiom-math] sets and functions / interpreter bug when redefining *
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Mon, 29 Oct 2007 13:39:24 -0000

Francois Maltey <fmaltey@nerim.fr> writes:

> Dear Martin, 
> 
> > what does a looping construct have to do with a Cartesian product?
> 
> The construct arround reduce/concat isn't so usual in order to 
> built several overlapped loops.
> cartesian product and repeat keyword are two possibilities.
> 
> > > The * isn't the better operator because this locks
> > >     {1,2,3} * {1,2,3} = {1,2,3,4,6,9} 
> > > and {1,2,3} + {1,2,3} = {2,3,4,5,6}
> > 
> > I actually wondered already once, why "+" is not union$Set, "-" not
> > difference$Set.  

I was thinking of Boolean algebra.  Now, I looked a little closer to find the
Category "Logic", which exports /\ and \/, which would in fact be a lot better
than + and *.

> I think that operator for sets are missing. 
> union (union (E, F), G) is less clever than E union F union G.

(1) -> \/(a: Set INT, b: Set INT): Set INT == union(a, b)
   Function declaration ?\/? : (Set Integer,Set Integer) -> Set Integer
      has been added to workspace.

(2) -> set [1,2,3] \/ set [2,3,4]
   Compiling function \/ with type (Set Integer,Set Integer) -> Set 
      Integer 

   (2)  {1,2,3,4}
                                                            Type: Set Integer

> But why do you want a +. It might be possible to have more operators 
> than only +, -, *, /, ^, ::, $, # and @.

yes, but I want to be use the "right" operators.  As we know already (see
Monoid / AbelianMonoid discussion), currently this is not always possible in
Aldor or Axiom.  But when it is, we should use them.

Just to make sure, I did not say that your definition of * and + for sets is
bad per se.  I only found it unusual.  And I do not want "unusual" things in
the axiom library.  The user should make this definitions himself.
Unfortunately, there is a bug in the interpreter:

(1) -> _*(A: Set INT, B: Set INT): Set INT == set concat [[(a*b)$Integer for a in members A] for b in members B]
   Function declaration ?*? : (Set Integer,Set Integer) -> Set Integer 
      has been added to workspace.
                                                                   Type: Void
(2) -> 2*3
   Compiling function * with type (Set Integer,Set Integer) -> Set 
      Integer 
   Conversion failed in the compiled user function * .
 
   Cannot convert from type Integer to Set Integer for value
   2

> axiom doesn't understand that sin+cos is the function x +-> (sin x + cos x)

I do not see the connection to the topic above.  But still, you can quite
easily build a domain that has, for example, univariate functions as objects.
That might indeed be useful.


Martin




From MAILER-DAEMON Tue Oct 30 11:53:27 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1ImtPD-0006ku-2R
	for mharc-axiom-math@gnu.org; Tue, 30 Oct 2007 11:53:27 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1ImtPC-0006kY-3O
	for axiom-math@nongnu.org; Tue, 30 Oct 2007 11:53:26 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1ImtPB-0006kI-55
	for axiom-math@nongnu.org; Tue, 30 Oct 2007 11:53:25 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1ImtPB-0006kF-1V
	for axiom-math@nongnu.org; Tue, 30 Oct 2007 11:53:25 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39]
	helo=smtpauthhost.risc.uni-linz.ac.at)
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1ImtPA-00043M-SW
	for axiom-math@nongnu.org; Tue, 30 Oct 2007 11:53:25 -0400
Received: from [193.170.38.119] (hemmecke@woodpecker.risc.uni-linz.ac.at
	[193.170.38.119]) (authenticated bits=0)
	by smtpauthhost.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with
	ESMTP id l9UFr4To027334
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Tue, 30 Oct 2007 16:53:04 +0100
Message-ID: <4727616C.9070005@hemmecke.de>
Date: Tue, 30 Oct 2007 17:53:00 +0100
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.6 (X11/20070728)
MIME-Version: 1.0
To: Gabriel Dos Reis <gdr@cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<471E957A.1040403@hemmecke.de>
	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
	<471E9FFF.5050203@hemmecke.de>
	<fbcd16d40710231913y26b6f05ub2237d7727eaa081@mail.gmail.com>
	<Pine.LNX.4.64.0710240700510.6939@gauss.cs.tamu.edu>
	<fbcd16d40710240723m1f300c6cr3b3f94a44eaa5af@mail.gmail.com>
	<Pine.LNX.4.64.0710240939350.6939@gauss.cs.tamu.edu>
	<fbcd16d40710240833s7e5c0ae0ia30384b8aea960d4@mail.gmail.com>
	<Pine.LNX.4.64.0710241038350.1902@gauss.cs.tamu.edu>
In-Reply-To: <Pine.LNX.4.64.0710241038350.1902@gauss.cs.tamu.edu>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: by monty-python.gnu.org: Linux 2.4-2.6
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re: [fricas-devel]
 Re: [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 30 Oct 2007 15:53:26 -0000

Dear Gaby,

I've read the Wikipedia articles about Generator and Iterator, but 
somehow their difference is not completely clear to me. Seemingly a 
generator is more general than an iterator.

But now, coming to SPAD, do you think it is worthwhile to think of an 
implementation (for SPAD) of the Iterator concept a la C++? Wouldn't the 
Generator thing be enough? Or is there no plan to introduce Generator to 
SPAD?

Ralf

PS: I would vote for Generator instead of Iterator (a la C++).

On 10/24/2007 05:56 PM, Gabriel Dos Reis wrote:
> On Wed, 24 Oct 2007, Bill Page wrote:
> 
> |                                                 But converting a
> | domain (Product) to a List just to iterate over it seems like a waste
> | and is still less economical. I would like the compiler to make this
> | operation transparent and more efficient.
> 
> Iteration is an old topic -- did I say that SIMULA had coroutines?
> This problem has been studied to depth, with lots of solutions.  As
> Waldek would say, a variety of solutions is an indication that
> opinions are split over which is better.
> 
> I do fully agree that it does not make much sense, from efficiency
> point of view, to make a list just be to able to iterate over elments
> of Product.  There are various solutions to that problem.  One being
> generartors -- or coroutines or semi-coroutines.  Another, quite
> effective, is the notion of `iterator' in used the C++ Standard Template
> Library. 
> 
>    http://www.sgi.com/tech/stl/
> 
> It relies on semantics description of iterators, along with hierarchical
> categorisations of algorithms and containers bases on complexity and
> semantics description of iterators.  Note that STL is the result of a
> long term project, some of the earlier description may be found here
> 
>   http://www.stepanovpapers.com/
> 
> Basically, a domain that whish to be iterated over provides two
> operations -- begin() and end() -- that people use to initiate/end
> iteration over data structures.  That does not require coroutines.
> It can be made to work in Spad if we had good support for nested
> domains. 
> 
> Now, you may say that you really want begin() and end() to be implicit
> in some cases, that can be made to work too -- just like generate() is
> implicitly called in Aldor.  For C++, there is a well-advanced
> proposal for C++0x to make that work:
> 
>     vector<int> v;
>     // ...
>     for (int x: v)
>        // ...
> 
> would be roughly equivalent to
> 
>     for (auto p = v.begin(); p != v.end(); ++p) {
>        int x = *p;
>        // ...
>     }
> 
> Notice that this solution, when applied to BinaryTree, does not
> require one to first construct a List and then iterate, and finally
> throw it away.  One caniterate over BinaryTree without recursion.
> 
> -- Gaby



From MAILER-DAEMON Tue Oct 30 11:58:58 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1ImtUY-0000je-Cx
	for mharc-axiom-math@gnu.org; Tue, 30 Oct 2007 11:58:58 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1ImtUW-0000jG-Oy
	for axiom-math@nongnu.org; Tue, 30 Oct 2007 11:58:56 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1ImtUV-0000io-9I
	for axiom-math@nongnu.org; Tue, 30 Oct 2007 11:58:56 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1ImtUV-0000il-7J
	for axiom-math@nongnu.org; Tue, 30 Oct 2007 11:58:55 -0400
Received: from smtp.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>) id 1ImtUU-0006KD-IO
	for axiom-math@nongnu.org; Tue, 30 Oct 2007 11:58:54 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id 9F6D846DE14;
	Tue, 30 Oct 2007 10:58:50 -0500 (CDT)
Date: Tue, 30 Oct 2007 10:57:39 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: Ralf Hemmecke <ralf@hemmecke.de>
In-Reply-To: <4727616C.9070005@hemmecke.de>
Message-ID: <Pine.LNX.4.64.0710301052500.1773@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<471E8D7E.6070801@hemmecke.de>
	<fbcd16d40710231720i5f802f92p5cb8c4373589d057@mail.gmail.com>
	<471E957A.1040403@hemmecke.de>
	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
	<471E9FFF.5050203@hemmecke.de>
	<fbcd16d40710231913y26b6f05ub2237d7727eaa081@mail.gmail.com>
	<Pine.LNX.4.64.0710240700510.6939@gauss.cs.tamu.edu>
	<fbcd16d40710240723m1f300c6cr3b3f94a44eaa5af@mail.gmail.com>
	<Pine.LNX.4.64.0710240939350.6939@gauss.cs.tamu.edu>
	<fbcd16d40710240833s7e5c0ae0ia30384b8aea960d4@mail.gmail.com>
	<Pine.LNX.4.64.0710241038350.1902@gauss.cs.tamu.edu>
	<4727616C.9070005@hemmecke.de>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re:
 [fricas-devel] Re: [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 30 Oct 2007 15:58:56 -0000

On Tue, 30 Oct 2007, Ralf Hemmecke wrote:

| Dear Gaby,
| 
| I've read the Wikipedia articles about Generator and Iterator, but somehow
| their difference is not completely clear to me. Seemingly a generator is more
| general than an iterator.

Yes, generator -- based on co-routines -- is more general than
iterator -- which is based on functions.  But the generality comes at
a price.  Furthermore, I do not believe that they are mutually exclusive.

| 
| But now, coming to SPAD, do you think it is worthwhile to think of an
| implementation (for SPAD) of the Iterator concept a la C++? 

It depends on people.  From my perspective, certainly yes.  But
different people have different opinions.  For OpenAxiom, it is
certainly something I'm actively considering.

| Wouldn't the
| Generator thing be enough? Or is there no plan to introduce Generator to SPAD?

Enough from the theoretical point of view, certainly.  But that is not
all to it.  Personnally, I tend to consider also the effienc at which
features are delivered -- but I acknowledged that is not a universal view.

-- Gaby



From MAILER-DAEMON Tue Oct 30 13:50:39 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1ImvEd-0008Fx-HM
	for mharc-axiom-math@gnu.org; Tue, 30 Oct 2007 13:50:39 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1ImvEb-0008Ct-9n
	for axiom-math@nongnu.org; Tue, 30 Oct 2007 13:50:37 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1ImvEa-0008Ay-2F
	for axiom-math@nongnu.org; Tue, 30 Oct 2007 13:50:36 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1ImvEZ-0008AY-Iv
	for axiom-math@nongnu.org; Tue, 30 Oct 2007 13:50:35 -0400
Received: from nf-out-0910.google.com ([64.233.182.187])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1ImuLP-0004k0-UW
	for axiom-math@nongnu.org; Tue, 30 Oct 2007 12:53:36 -0400
Received: by nf-out-0910.google.com with SMTP id 30so1802194nfu
	for <axiom-math@nongnu.org>; Tue, 30 Oct 2007 09:53:33 -0700 (PDT)
Received: by 10.86.25.17 with SMTP id 17mr5837165fgy.1193763212040;
	Tue, 30 Oct 2007 09:53:32 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Tue, 30 Oct 2007 09:53:31 -0700 (PDT)
Message-ID: <fbcd16d40710300953r3429385fq85da53a84f64054d@mail.gmail.com>
Date: Tue, 30 Oct 2007 12:53:31 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: fricas-devel@googlegroups.com
In-Reply-To: <47252F0C.6000703@hemmecke.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<471E957A.1040403@hemmecke.de>
	<fbcd16d40710231807w3631fcbeo431f2834e4c8f393@mail.gmail.com>
	<471E9EC1.3090707@hemmecke.de>
	<fbcd16d40710231856n7f5379f6r52c31da01d1d5c18@mail.gmail.com>
	<471FB511.5050404@hemmecke.de>
	<fbcd16d40710250940r46093bc5t85f719fa1c3c838@mail.gmail.com>
	<472381DA.8030404@hemmecke.de>
	<fbcd16d40710281437v44757b91y8dec634b0457be76@mail.gmail.com>
	<47252F0C.6000703@hemmecke.de>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org,
	Gabriel Dos Reis <gdr@cs.tamu.edu>
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
	[fricas-devel] Re: [fricas-devel] Re: [fricas-devel] Re:
	[fricas-devel] Re: [fricas-devel] Re: [fricas-devel] Re:
	iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Tue, 30 Oct 2007 17:50:37 -0000

On 10/28/07, Ralf Hemmecke wrote:
>
> On 10/28/2007 10:37 PM, Bill Page wrote:
>  > On 10/27/07, Ralf Hemmecke wrote:
>  >> Let me cite the documentation from stream.spad.pamphlet
>  >>
>  >> ++ A stream is an implementation of an infinite sequence using ++ a
>  >> list of terms that have been computed and a function closure ++ to
>  >> compute additional terms when needed.
>  >>
>  >> First, a stream is an infinite sequence. If we get
>  >>
>  >> (6) -> s:=construct([1,2,3])$Stream(Integer) (6) -> (6)  [1,2,3]
>  >> Type: Stream Integer (7) -> s.4 7) ->
>  >>>> Error detected within library code:
>  >> elt: no such element
>  >>
>  >> Then there is either something wrong with the code or with the
>  >> documentation.
>
>  > I think it is the documentation. Given the exports of Stream, it
>  > obviously should say only "potentially infinite".
>
>
> Hmmm, I think, now we can start fighting. ;-)
>

Good. :-) I am thinking in particular about the use and meaning of the
operation 'explicitlyFinite?'.

> I would be in favour of letting Stream(T) encode the
>
>    T^N
>
> where N is the natural numbers.
>
> It seems that you want Stream(T) to denote
>
>    T^N union T^(N)
>
> where the second thing denotes the set of finite sequences (which is
> actually already modelled by List or Array).
>

No, I am only talking about the way it is implemented now.

> I have nothing against a domain that models the above union, but I would
> like to start with basic domains and then build on them. And I would
> reserve the name "Stream" for the infinite thing.

I am not sure whether I would expect STREAM to always be infinite or
not. Maybe you are right since this would be the case if we wanted to
have the semantics of STREAM given by a greatest fixed point solution
(corresponding to List as least fixed point solution) of some
recursive type equation.

>
>  >>> The larger question remains however: When to use a domain to
>  >>> directly model something that is "set-like" and when to define a
>  >>> higher-order domain whose objects are "set-like"? To me this is
>  >>> not clear in either Spad or Aldor.
>  >> I don't think you gain very much if you only consider set-like
>  >> domains. If, however, you are looking at finite fields, for sure,
>  >> you will think of a domain, since it is more important that there
>  >> are some operations that connect the elements.
>
>  > So you say it is natural to define "PrimeField 7" as a domain itself
>  > rather than defining a general domain of "PrimeFields" and
>  > constructing "PrimeField 7" as an element of that domain?
>
> Honestly, I don't see much of a difference. In your and my view
> "PrimeField 7" is a domain, which exports certain functions.
> Nobody forbids me to create a domain whose elements are domains.
> (Maybe SPAD does forbid...)

Gaby has shown how to define something of type 'List Domain' in Spad e.g.

  [Integer,Float,String]

which I suppose must qualify as a domain that has at least lists of
domains as elements. But I think a domain that actually has *domains*
as elements is something different, i.e a list of domains is not
itself a domain, as for example a Union or Product of domains would
be.

> But I think "PrimeFields" is a rather uninteresting domain. What
> exports should it have?
>
>  > Yes, I think that makes sense. But there are of course some
>  > operations that connect elements of any well defined set, no?
>
> Which? (Sorry, but I really cannot think of one.)

Ok maybe I should have said OrderedSet, then elements are at least
connected by some ordering.

>
>  > I suppose what I am saying is that (maybe) there should really be no
>  > distinction between domains and members of domains (objects) - that
>  > all objects should also be domains in and of themselves.
>
> Let's go on with your thoughts. Could you tell me what operation the
> integer 2 (considered as a domain) should export?
>

In a pure object-oriented language (which really Spad and Aldor are
not), the objects inherit operations so that the constant '2' "knows"
how to add (+) another object.

But I think I want to withdraw my comment. From a categorical
perspective such as presented by Saul Youssef (see thread [Aldor-l]
Type equivalence of domains in Axiom and Aldor, Oct 26, 2007 12:09
AM):

>       Your questions have definite answers in category theory
> and since Aldor is *almost* doing category theory, it's tempting
> to think that the categorical answers to your questions are really
> what should naturally fit into the language.  I wrote up something
> trying this out for the 2001 workshop
>
> http://atlas.bu.edu/~youssef/papers/math/aldor/aldor.pdf
>
> I still think that this is a good way to look for flaws in
> the language - implement category theory and see what
> goes wrong.

probably I really do not want the members of domains to be domains but
rather (nullary) operations which in Spad and Aldor is what they
really *are*, e.g. zero:()->%, one:()->%

Regards,
Bill Page.



From MAILER-DAEMON Wed Oct 31 05:36:49 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1InA0G-0007va-Pj
	for mharc-axiom-math@gnu.org; Wed, 31 Oct 2007 05:36:48 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1InA0E-0007pp-KZ
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 05:36:46 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1InA0B-0007gG-7P
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 05:36:45 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1InA0A-0007fx-Qu
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 05:36:42 -0400
Received: from ctb-mesg-1-3.saix.net ([196.25.240.81])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <cfrangos@telkomsa.net>) id 1InA0A-0002GZ-A9
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 05:36:42 -0400
Received: from zeta (tsil-ip-nas-1-p173.telkom-ipnet.co.za [155.239.188.173])
	by ctb-mesg-1-3.saix.net (Postfix) with SMTP id 3C0B527F0D
	for <axiom-math@nongnu.org>; Wed, 31 Oct 2007 11:36:14 +0200 (SAST)
Content-Type: text/plain;
  charset="us-ascii"
From: C. Frangos <cfrangos@telkomsa.net>
To: axiom-math@nongnu.org
Date: Wed, 31 Oct 2007 09:06:41 +0200
X-Mailer: KMail [version 1.2]
MIME-Version: 1.0
Message-Id: <07103109035802.04267@zeta>
Content-Transfer-Encoding: quoted-printable
X-detected-kernel: by monty-python.gnu.org: Solaris 10 (beta)
Subject: [Axiom-math] Axiom: Errors on suse 10.2, 32 bit
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
Reply-To: cfrangos@telkomsa.net
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 31 Oct 2007 09:36:47 -0000



I have installed the axiom binaries on a suse linux 10.2, 32 bit system, =
and=20
am trying some basic commands.

I am getting the errors below.=20

(Some time ago Tim Daly reported similar errors on my behalf. The two=20
responses that were posted referred to lisp, which I=20
unfortunately do not know. Its not clear how to fix the problem).

(In the meantime I am using 2004 axiom (no graphics) compiled on an old s=
use=20
linux 7.2 system, 32 bit).

Any assistance would be much appreciated.

TIA,

Constantine Frangos.




(11) -> x(s)=3D=3D(q:=3Dcos(s);return(q))     =20
                                                                   Type: =
Void
(12) -> x(y)
   Compiling function x with type Variable y -> Expression Integer=20
cc1: error: /root/axiom/mnt/fedora5/bin/../h: Permission denied
(12) -> x(y)

   (12)  cos(y)
                                                     Type: Expression Int=
eger
(13) ->=20


(11) -> draw(sin(x),x=3D-1..1);
   Loading /home/apps/axiombin/mnt/fedora5/algebra/SEG.o for domain=20
      Segment=20
   Loading /home/apps/axiombin/mnt/fedora5/algebra/SEGBIND.o for domain
      SegmentBinding=20
   Loading /home/apps/axiombin/mnt/fedora5/algebra/FLOAT.o for domain=20
      Float=20
.................................
 Loading /home/apps/axiombin/mnt/fedora5/algebra/DISPLAY.o for=20
      package DisplayPackage=20
   Loading /home/apps/axiombin/mnt/fedora5/algebra/MKFLCFN.o for=20


      package MakeFloatCompiledFunction=20
cc1: error: /root/axiom/mnt/fedora5/bin/../h: Permission denied
=20
   >> System error:
   (SYSTEM "gcc -c -Wall -DVOL=3Dvolatile -fsigned-char -pipe =20
-I/root/axiom/mnt/fedora5/bin/../h  -O3 -fomit-frame-pointer -c=20
\"/tmp/gazonk7.c\" -o \"/tmp/gazonk7.o\" -w") returned a non-zero value 0=
.

(11) ->=20



From MAILER-DAEMON Wed Oct 31 12:29:58 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1InGS6-00088V-NC
	for mharc-axiom-math@gnu.org; Wed, 31 Oct 2007 12:29:58 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1InGS5-00086b-9l
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 12:29:57 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1InGS3-00083w-FN
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 12:29:56 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1InGS3-00083N-7w
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 12:29:55 -0400
Received: from nf-out-0910.google.com ([64.233.182.185])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1InGS2-0003bJ-0v
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 12:29:54 -0400
Received: by nf-out-0910.google.com with SMTP id 30so204304nfu
	for <axiom-math@nongnu.org>; Wed, 31 Oct 2007 09:29:52 -0700 (PDT)
Received: by 10.86.78.4 with SMTP id a4mr6730277fgb.1193848191049;
	Wed, 31 Oct 2007 09:29:51 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Wed, 31 Oct 2007 09:29:50 -0700 (PDT)
Message-ID: <fbcd16d40710310929v658f24d2k4c05b636c35b118a@mail.gmail.com>
Date: Wed, 31 Oct 2007 12:29:50 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: "Ralf Hemmecke" <hemmecke@risc.uni-linz.ac.at>
In-Reply-To: <47289E1F.80509@risc.uni-linz.ac.at>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<fbcd16d40710220948i4cfddcf2q3cf5543a73380228@mail.gmail.com>
	<Pine.LNX.4.64.0710221155250.17358@gauss.cs.tamu.edu>
	<fbcd16d40710221106i671da534kbf76250668178a67@mail.gmail.com>
	<47279AFF.5010202@hemmecke.de>
	<fbcd16d40710310754g15372d99j2e5ba81c1da2710@mail.gmail.com>
	<47289E1F.80509@risc.uni-linz.ac.at>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re:
	[fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 31 Oct 2007 16:29:57 -0000

On 10/31/07, Ralf Hemmecke <hemmecke@risc.uni-linz.ac.at> wrote:
> > The main issue has to do with programming style. The for-loop is a
> > construction from imperative-style programming. Operations like
> > 'product' above operate directly on functions and return functions.
> > This is most common in a functional-programming style and might be
> > used for example in conjuction with another operation such as 'map' to
> > produce the same results a a for-loop constrcut:
>
> > map(product(Float,wholePart,sin),[1.1,2.2,3.3])
> >
> > versus
> >
> > [makeprod(wholePart x, sin x)$Product(Integer,Float) for x in [1.1,2.2,3.3]]
>
> Bill,
>
> you probably mean something like
>
>   map(product(wholePart, sin), [1.1,2.2,3.3])
>
> right?
>

No. The signature must include a dependent type, like this:

  product: (A:Type, A->X,A->Y) -> (A->%)

> Let's look at the signatures:
>
>   wholePart: Float -> Integer
>   sin: Float -> Float; -- I don't like Float, by the way... ;-)
>   [1.1,2.2,3.3]: List Float
>
> So we must have
>
>   product: (Float -> Integer, Float -> Float) ->
>            (Float -> Product(Integer, Float))
>
> and a corresponding signature for map. You surely believe that I can
> program exactly that in Aldor.
>

To define 'product' in general (i.e. as a categorical limit) for any
domain Product(A,B) and domain C we must have

   product(C,f,g):C->Product(A,B)

defined for any functions

  f:C->A
  g:C->B

I don't think you can do that without passing the independent domain C.

> But I guesss that is not your point. Your point is (please correct) that
> you want a categorical definition of "Product".
>
> Product(A, B) should automatically export
>
>   product: (A, B) -> %

No, this is not well defined.

>
> as well as
>
>   product: (X -> A, X -> B) -> X -> %.

What is X above?

>
> You don't want to write down that function definition yourself, right?
>

Well, I would actually expect it to be exported by a basic built-in
domain like 'Record' since that is what most directly corresponds to
categorical Product. If this was made sufficiently general, there
would be no need for a separately programmed domain in the library.

> In terms of Aldor, we have Product = Cross and that is a built-in type.
> So it should be possible (and perhaps be reasonable to extend Cross
> through the compiler, ie, give it a few more exports than it has now.
>

Yes exactly, although I am not sure why we need both Cross and Record.

> But maybe your proposal goes further and you want to be able to define
> domains/functors through categorical limit constructions. So, in fact,
> you want to enrich Aldor/SPAD by new keywords "Limit" and "CoLimit" and
> make "Cross" a library defined type.
>

Yes, maybe. What might be even nicer is if it were possible to
implement adjoint functors as described by Saul Youssef as an even
more basic concept in Aldor/SPAD. He shows how to define Limits and
CoLimits in this more fundamental way.

> If that is what you think/want, then I can somehow understand you and
> would even support it. But to my taste that was not clear enough yet in
> all the previous discussions.
>
> (I have no problem if you forward this and/or my previous mail to the
> lists.)
>

Ok, thanks.

Regards,
Bill Page.



From MAILER-DAEMON Wed Oct 31 12:30:38 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1InGSj-0000da-TS
	for mharc-axiom-math@gnu.org; Wed, 31 Oct 2007 12:30:38 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1InGSi-0000b1-5T
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 12:30:36 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1InGSf-0000Y1-P5
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 12:30:35 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1InGSf-0000XU-FF
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 12:30:33 -0400
Received: from nf-out-0910.google.com ([64.233.182.186])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1InGSf-0003wd-1c
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 12:30:33 -0400
Received: by nf-out-0910.google.com with SMTP id 30so204496nfu
	for <axiom-math@nongnu.org>; Wed, 31 Oct 2007 09:30:26 -0700 (PDT)
Received: by 10.86.51.2 with SMTP id y2mr6724460fgy.1193848226356;
	Wed, 31 Oct 2007 09:30:26 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Wed, 31 Oct 2007 09:30:26 -0700 (PDT)
Message-ID: <fbcd16d40710310930l5bc4f2eci53f6afd792d85ba4@mail.gmail.com>
Date: Wed, 31 Oct 2007 12:30:26 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: fricas-devel@googlegroups.com, open-axiom-devel@lists.sourceforge.net, 
	axiom-math@nongnu.org
In-Reply-To: <47279AFF.5010202@hemmecke.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<9qfy0374yd.fsf@aquin.mat.univie.ac.at>
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<fbcd16d40710220948i4cfddcf2q3cf5543a73380228@mail.gmail.com>
	<Pine.LNX.4.64.0710221155250.17358@gauss.cs.tamu.edu>
	<fbcd16d40710221106i671da534kbf76250668178a67@mail.gmail.com>
	<47279AFF.5010202@hemmecke.de>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: 
Subject: [Axiom-math] Fwd: [open-axiom-devel] [fricas-devel] Re:
	[fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 31 Oct 2007 16:30:36 -0000

---------- Forwarded message ----------
From: Ralf Hemmecke <ralf@hemmecke.de>
Date: Oct 30, 2007 4:58 PM
Subject: Re: [open-axiom-devel] [fricas-devel] Re: [fricas-devel]
Re:	iterators and cartesian product.
To: Bill Page <bill.page@newsynthesis.org>


Hi Bill,

this goes offlist since I don't want to spam them...

On 10/22/2007 08:06 PM, Bill Page wrote:
> On 10/22/07, Gabriel Dos Reis <gdr@cs.tamu.edu> wrote:
>> On Mon, 22 Oct 2007, Bill Page wrote:
>>
>> | As I said, I want
>> |
>> |   Product(1..9,1..4)
>> |
>> | to be a domain - the cross-product of two other domains.
>>
>> I do not think
>>
>>     I want 1..9 to be a domain so that I can write
>>     Product(1..9, 1..4) to be a cross product of two domains
>>
>> is an explanation of why `1..9' should be a domain.
>
> As I said earlier, I think the semantics of Product should be given
> categorically by the existence of the unique operation
>
> Product(X:Type, Y:Type): with ...
>
>  product: (A:Type, A->X,A->Y) -> (A->%)
>
> as a categorical limit.

As you know I like the categorical approach, but I don't understand,
what a definition like your "product" has anything to do with how the
"for" loop is traversed?

You certainly know that a function

product: (A:Type, A->X,A->Y) -> (A->%)

is easily implemented (in Aldor, I don't know for spad).
But I really don't see the connection to the "for".

Ralf



From MAILER-DAEMON Wed Oct 31 12:31:31 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1InGTb-0001fd-Df
	for mharc-axiom-math@gnu.org; Wed, 31 Oct 2007 12:31:31 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1InGTS-0001Xu-Be
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 12:31:22 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1InGTM-0001Qa-Ls
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 12:31:17 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1InGTM-0001Pk-BU
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 12:31:16 -0400
Received: from nf-out-0910.google.com ([64.233.182.186])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1InGTL-0004Fw-Dc
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 12:31:15 -0400
Received: by nf-out-0910.google.com with SMTP id 30so204761nfu
	for <axiom-math@nongnu.org>; Wed, 31 Oct 2007 09:31:14 -0700 (PDT)
Received: by 10.86.25.17 with SMTP id 17mr6732781fgy.1193848273394;
	Wed, 31 Oct 2007 09:31:13 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Wed, 31 Oct 2007 09:31:13 -0700 (PDT)
Message-ID: <fbcd16d40710310931l217bc1b7tf1686ad1273103c3@mail.gmail.com>
Date: Wed, 31 Oct 2007 12:31:13 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: fricas-devel@googlegroups.com, open-axiom-devel@lists.sourceforge.net, 
	axiom-math@nongnu.org
In-Reply-To: <fbcd16d40710310754g15372d99j2e5ba81c1da2710@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<fbcd16d40710220753h24f17931s4e5b9f910b561ac7@mail.gmail.com>
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<fbcd16d40710220948i4cfddcf2q3cf5543a73380228@mail.gmail.com>
	<Pine.LNX.4.64.0710221155250.17358@gauss.cs.tamu.edu>
	<fbcd16d40710221106i671da534kbf76250668178a67@mail.gmail.com>
	<47279AFF.5010202@hemmecke.de>
	<fbcd16d40710310754g15372d99j2e5ba81c1da2710@mail.gmail.com>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: 
Subject: [Axiom-math] Fwd: [open-axiom-devel] [fricas-devel] Re:
	[fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 31 Oct 2007 16:31:27 -0000

---------- Forwarded message ----------
From: Bill Page <bill.page@newsynthesis.org>
Date: Oct 31, 2007 10:54 AM
Subject: Re: [open-axiom-devel] [fricas-devel] Re: [fricas-devel] Re:
iterators and cartesian product.
To: Ralf Hemmecke <ralf@hemmecke.de>


On 10/30/07, Ralf Hemmecke wrote:
> Hi Bill,
>
> this goes offlist since I don't want to spam them...
>

Ok if you like, but I think other people on this list probably have
similar questions as you do so it would probably be of interest to
them too even though this thread is already quite long.

> On 10/22/2007 08:06 PM, Bill Page wrote:
> > On 10/22/07, Gabriel Dos Reis <gdr@cs.tamu.edu> wrote:
> >> On Mon, 22 Oct 2007, Bill Page wrote:
> >>
> >> | As I said, I want
> >> |
> >> |   Product(1..9,1..4)
> >> |
> >> | to be a domain - the cross-product of two other domains.
> >>
> >> I do not think
> >>
> >>     I want 1..9 to be a domain so that I can write
> >>     Product(1..9, 1..4) to be a cross product of two domains
> >>
> >> is an explanation of why `1..9' should be a domain.
> >
> > As I said earlier, I think the semantics of Product should be given
> > categorically by the existence of the unique operation
> >
> > Product(X:Type, Y:Type): with ...
> >
> >  product: (A:Type, A->X,A->Y) -> (A->%)
> >
> > as a categorical limit.
>
> As you know I like the categorical approach, but I don't understand,
> what a definition like your "product" has anything to do with how the
> "for" loop is traversed?
>
> You certainly know that a function
>
> product: (A:Type, A->X,A->Y) -> (A->%)
>
> is easily implemented (in Aldor, I don't know for spad).
> But I really don't see the connection to the "for".
>

The main issue has to do with programming style. The for-loop is a
construction from imperative-style programming. Operations like
'product' above operate directly on functions and return functions.
This is most common in a functional-programming style and might be
used for example in conjuction with another operation such as 'map' to
produce the same results a a for-loop constrcut:

map(product(Float,wholePart,sin),[1.1,2.2,3.3])

versus

[makeprod(wholePart x, sin x)$Product(Integer,Float) for x in [1.1,2.2,3.3]]

The functional-style has no dummy variables and no explicit for-loop.
In general one might view imperative-style programming as inherently
more "primitive" than functional programming so I think it should be
"allowed" because it is sometimes convenient but not encouraged. Aldor
and Spad usually provide both options. But the point with respect to
category theory is really that because the operation 'product' exists
and is uniquely defined (as a limit), it actual defines exactly what
is meant by the domain constructor Product, i.e. it provides the
semantics of Product. This has nothing directly to do with for-loops.

Regards,
Bill Page.



From MAILER-DAEMON Wed Oct 31 12:48:15 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1InGjm-0000bl-Lw
	for mharc-axiom-math@gnu.org; Wed, 31 Oct 2007 12:48:14 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1InGjl-0000ag-Bb
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 12:48:13 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1InGjk-0000ZB-8X
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 12:48:12 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43)
	id 1InGjh-0000WO-W8; Wed, 31 Oct 2007 12:48:10 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39]
	helo=smtpauthhost.risc.uni-linz.ac.at)
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>)
	id 1InGjh-0003qj-DN; Wed, 31 Oct 2007 12:48:09 -0400
Received: from [193.170.38.119] (hemmecke@woodpecker.risc.uni-linz.ac.at
	[193.170.38.119]) (authenticated bits=0)
	by smtpauthhost.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with
	ESMTP id l9VGlvn1032072
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Wed, 31 Oct 2007 17:47:57 +0100
Message-ID: <4728B1B9.807@hemmecke.de>
Date: Wed, 31 Oct 2007 17:47:53 +0100
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.6 (X11/20070728)
MIME-Version: 1.0
To: Bill Page <bill.page@newsynthesis.org>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>	
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>	
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>	
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>	
	<fbcd16d40710220948i4cfddcf2q3cf5543a73380228@mail.gmail.com>	
	<Pine.LNX.4.64.0710221155250.17358@gauss.cs.tamu.edu>	
	<fbcd16d40710221106i671da534kbf76250668178a67@mail.gmail.com>	
	<47279AFF.5010202@hemmecke.de>	
	<fbcd16d40710310754g15372d99j2e5ba81c1da2710@mail.gmail.com>	
	<47289E1F.80509@risc.uni-linz.ac.at>
	<fbcd16d40710310929v658f24d2k4c05b636c35b118a@mail.gmail.com>
In-Reply-To: <fbcd16d40710310929v658f24d2k4c05b636c35b118a@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: by monty-python.gnu.org: Linux 2.4-2.6
Cc: axiom-dev <axiom-developer@nongnu.org>, fricas-devel@googlegroups.com,
	axiom-math@nongnu.org, open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re:
 [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 31 Oct 2007 16:48:13 -0000

> Yes exactly, although I am not sure why we need both Cross and Record.

Elements of Record are mutable, elements of Cross are not.

Ralf

PS: Shouldn't this discussion go to axiom-developer instead of axiom-math?



From MAILER-DAEMON Wed Oct 31 13:06:37 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1InH1Y-0007nJ-LR
	for mharc-axiom-math@gnu.org; Wed, 31 Oct 2007 13:06:36 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1InH1W-0007lL-Pp
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 13:06:35 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1InH1V-0007kB-TA
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 13:06:34 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1InH1V-0007jt-Lp
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 13:06:33 -0400
Received: from athena.risc.uni-linz.ac.at ([140.78.116.39]
	helo=smtpauthhost.risc.uni-linz.ac.at)
	by monty-python.gnu.org with esmtps
	(TLS-1.0:DHE_RSA_3DES_EDE_CBC_SHA1:24) (Exim 4.60)
	(envelope-from <ralf@hemmecke.de>) id 1InH1V-0003GM-1V
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 13:06:33 -0400
Received: from [193.170.38.119] (hemmecke@woodpecker.risc.uni-linz.ac.at
	[193.170.38.119]) (authenticated bits=0)
	by smtpauthhost.risc.uni-linz.ac.at (8.12.3/8.12.3/Debian-7.2) with
	ESMTP id l9VH6On1032609
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Wed, 31 Oct 2007 18:06:24 +0100
Message-ID: <4728B60C.9050907@hemmecke.de>
Date: Wed, 31 Oct 2007 18:06:20 +0100
From: Ralf Hemmecke <ralf@hemmecke.de>
User-Agent: Thunderbird 2.0.0.6 (X11/20070728)
MIME-Version: 1.0
To: Bill Page <bill.page@newsynthesis.org>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>	
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>	
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>	
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>	
	<fbcd16d40710220948i4cfddcf2q3cf5543a73380228@mail.gmail.com>	
	<Pine.LNX.4.64.0710221155250.17358@gauss.cs.tamu.edu>	
	<fbcd16d40710221106i671da534kbf76250668178a67@mail.gmail.com>	
	<47279AFF.5010202@hemmecke.de>	
	<fbcd16d40710310754g15372d99j2e5ba81c1da2710@mail.gmail.com>	
	<47289E1F.80509@risc.uni-linz.ac.at>
	<fbcd16d40710310929v658f24d2k4c05b636c35b118a@mail.gmail.com>
In-Reply-To: <fbcd16d40710310929v658f24d2k4c05b636c35b118a@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-detected-kernel: by monty-python.gnu.org: Linux 2.4-2.6
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re:
 [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 31 Oct 2007 17:06:35 -0000

Hello Bill,

On 10/31/2007 05:29 PM, Bill Page wrote:
> On 10/31/07, Ralf Hemmecke <hemmecke@risc.uni-linz.ac.at> wrote:
>>> The main issue has to do with programming style. The for-loop is a
>>> construction from imperative-style programming. Operations like
>>> 'product' above operate directly on functions and return functions.
>>> This is most common in a functional-programming style and might be
>>> used for example in conjuction with another operation such as 'map' to
>>> produce the same results a a for-loop constrcut:
>>> map(product(Float,wholePart,sin),[1.1,2.2,3.3])
>>>
>>> versus
>>>
>>> [makeprod(wholePart x, sin x)$Product(Integer,Float) for x in [1.1,2.2,3.3]]
>> Bill,
>>
>> you probably mean something like
>>
>>   map(product(wholePart, sin), [1.1,2.2,3.3])
>>
>> right?
>>
> 
> No. The signature must include a dependent type, like this:
> 
>   product: (A:Type, A->X,A->Y) -> (A->%)

Of course the A must come from somewhere, but who would like to write a 
cross of two functions in that way?

I would better have something like

   cross: (A: Type) -> (A->X,A->Y) -> (A->%)

later say

   product == cross(Integer)

and then use "product" as I did above.

And since this A is actually part of the Limit definition there should 
rather be something like (dream dream ...)

   Limit(A: Type): ... {-- this introduces A
      Product(X: Type, Y: Type): with {...} == add {...}
   }

within "with {..}" and "add {...}" there would be no need to say 
anything about "product", since it would come through the Limit 
construction.

Oh, that is not well thought of... How would the compile know that the 
function is called "product"? Hmmmmm.....

>> Let's look at the signatures:
>>
>>   wholePart: Float -> Integer
>>   sin: Float -> Float; -- I don't like Float, by the way... ;-)
>>   [1.1,2.2,3.3]: List Float
>>
>> So we must have
>>
>>   product: (Float -> Integer, Float -> Float) ->
>>            (Float -> Product(Integer, Float))
>>
>> and a corresponding signature for map. You surely believe that I can
>> program exactly that in Aldor.
>>
> 
> To define 'product' in general (i.e. as a categorical limit) for any
> domain Product(A,B) and domain C we must have
> 
>    product(C,f,g):C->Product(A,B)
> 
> defined for any functions
> 
>   f:C->A
>   g:C->B
> 
> I don't think you can do that without passing the independent domain C.

No, of course not. But I would have hidden it in Product(C)(A,B). But 
also that looks ugly.

>> But I guesss that is not your point. Your point is (please correct) that
>> you want a categorical definition of "Product".
>>
>> Product(A, B) should automatically export
>>
>>   product: (A, B) -> %
> 
> No, this is not well defined.
> 
>> as well as
>>
>>   product: (X -> A, X -> B) -> X -> %.
> 
> What is X above?

All-quantified. In fact, I was thinking that the compiler would silently 
introduce this "Limit(X)" from above.

>> You don't want to write down that function definition yourself, right?

> Well, I would actually expect it to be exported by a basic built-in
> domain like 'Record' since that is what most directly corresponds to
> categorical Product. If this was made sufficiently general, there
> would be no need for a separately programmed domain in the library.

I think I can support this.

Ralf




From MAILER-DAEMON Wed Oct 31 13:16:39 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1InHBH-0000p7-3t
	for mharc-axiom-math@gnu.org; Wed, 31 Oct 2007 13:16:39 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1InHBF-0000oP-Re
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 13:16:37 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1InHBE-0000n8-6N
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 13:16:37 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1InHBE-0000n5-0j
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 13:16:36 -0400
Received: from nf-out-0910.google.com ([64.233.182.185])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1InHBD-0006qs-Km
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 13:16:35 -0400
Received: by nf-out-0910.google.com with SMTP id 30so219682nfu
	for <axiom-math@nongnu.org>; Wed, 31 Oct 2007 10:16:33 -0700 (PDT)
Received: by 10.86.4.2 with SMTP id 2mr6733903fgd.1193850992747;
	Wed, 31 Oct 2007 10:16:32 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Wed, 31 Oct 2007 10:16:32 -0700 (PDT)
Message-ID: <fbcd16d40710311016x4f028e0dj92e72ccb3552be@mail.gmail.com>
Date: Wed, 31 Oct 2007 13:16:32 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: "Ralf Hemmecke" <ralf@hemmecke.de>
In-Reply-To: <4728B1B9.807@hemmecke.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<fbcd16d40710220948i4cfddcf2q3cf5543a73380228@mail.gmail.com>
	<Pine.LNX.4.64.0710221155250.17358@gauss.cs.tamu.edu>
	<fbcd16d40710221106i671da534kbf76250668178a67@mail.gmail.com>
	<47279AFF.5010202@hemmecke.de>
	<fbcd16d40710310754g15372d99j2e5ba81c1da2710@mail.gmail.com>
	<47289E1F.80509@risc.uni-linz.ac.at>
	<fbcd16d40710310929v658f24d2k4c05b636c35b118a@mail.gmail.com>
	<4728B1B9.807@hemmecke.de>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: axiom-dev <axiom-developer@nongnu.org>, fricas-devel@googlegroups.com,
	axiom-math@nongnu.org, open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re:
	[fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 31 Oct 2007 17:16:38 -0000

On 10/31/07, Ralf Hemmecke wrote:
> > Yes exactly, although I am not sure why we need both Cross and Record.
>
> Elements of Record are mutable, elements of Cross are not.
>

Ok, thanks. I am not so sure how to deal with that distinction in a
"categorical" manner. I suppose mutability is an imperative-style
programming notion. I think the lack of mutability in functional
languages like Haskell is one of the harder things to get used to but
at the same time one of it's greatest strengths. In general I would
like Aldor/SPAD to promote a more functional style without necessarily
requiring it.

>
> PS: Shouldn't this discussion go to axiom-developer instead of axiom-math?
>

Maybe you are right but recently I have been avoiding axiom-developer
since Tim made it clear that the Axiom project per se was interested
primarily in documentation and the "30 year horizon". I originally
included axiom-math because I thought there might still be some people
subscribed there who are interested in more immediate issues in Axiom
and about category theory in Axiom/Aldor. But I have to admit that the
profusion of email lists about Axiom, it's forks and Aldor is
confusing to me and probably to our collective disadvantage.

Regards,
Bill Page.



From MAILER-DAEMON Wed Oct 31 14:23:54 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1InIEM-0007Hn-3n
	for mharc-axiom-math@gnu.org; Wed, 31 Oct 2007 14:23:54 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1InIEK-0007HH-DM
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 14:23:52 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1InIEH-0007Fu-BU
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 14:23:51 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1InIEH-0007Fp-7o
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 14:23:49 -0400
Received: from smtp-103-wednesday.noc.nerim.net ([62.4.17.103]
	helo=mallaury.nerim.net)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <fmaltey@nerim.fr>) id 1InIEG-0000MJ-IE
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 14:23:48 -0400
Received: from localhost (fmaltey.net0.nerim.net [213.41.170.4])
	by mallaury.nerim.net (Postfix) with ESMTP id 614F74F3CB;
	Wed, 31 Oct 2007 19:23:35 +0100 (CET)
Received: from fmy by localhost with local (Exim 4.63)
	(envelope-from <fmaltey@nerim.fr>)
	id 1InIEC-0001L9-Uz; Wed, 31 Oct 2007 19:23:44 +0100
To: "Bill Page" <bill.page@newsynthesis.org>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<87tzojxjqm.fsf@soliton.cs.tamu.edu>
	<fbcd16d40710220903j19204785l2072b8f005466281@mail.gmail.com>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<fbcd16d40710220948i4cfddcf2q3cf5543a73380228@mail.gmail.com>
	<Pine.LNX.4.64.0710221155250.17358@gauss.cs.tamu.edu>
	<fbcd16d40710221106i671da534kbf76250668178a67@mail.gmail.com>
	<47279AFF.5010202@hemmecke.de>
	<fbcd16d40710310754g15372d99j2e5ba81c1da2710@mail.gmail.com>
	<47289E1F.80509@risc.uni-linz.ac.at>
	<fbcd16d40710310929v658f24d2k4c05b636c35b118a@mail.gmail.com>
From: Francois Maltey <fmaltey@nerim.fr>
Date: 31 Oct 2007 19:23:44 +0100
In-Reply-To: <fbcd16d40710310929v658f24d2k4c05b636c35b118a@mail.gmail.com>
Message-ID: <87sl3rrvm7.fsf@nerim.fr>
Lines: 25
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: quoted-printable
X-detected-kernel: by monty-python.gnu.org: FreeBSD 4.6-4.9
Cc: fricas-devel@googlegroups.com, Ralf Hemmecke <hemmecke@risc.uni-linz.ac.at>,
	open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re:
	[fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 31 Oct 2007 18:23:52 -0000

Hello,

> > > The main issue has to do with programming style. The for-loop is a
> > > construction from imperative-style programming. Operations like
> > > 'product' above operate directly on functions and return functions.
> > > This is most common in a functional-programming style and might be
> > > used for example in conjuction with another operation such as 'map'=
 to
> > > produce the same results a a for-loop constrcut:

> map(product(Float,wholePart,sin),[1.1,2.2,3.3])
> versus
> [makeprod(wholePart x, sin x)$Product(Integer,Float) for x in [1.1,2.2,=
3.3]]

And what do you think about a map as :

map (t +-> [|wholePart t, sin t|], [1.1,2.2,3.3])

where [|....|]=A0creates a makeprod with right types.

It's a good thing that record will remain mutable and the other
structure product won't be mutable. So there is no ambiguity.

Have a nice day !

F. the naive guy.



From MAILER-DAEMON Wed Oct 31 14:37:02 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1InIR4-0003ru-MU
	for mharc-axiom-math@gnu.org; Wed, 31 Oct 2007 14:37:02 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1InIR2-0003ro-8D
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 14:37:00 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1InIR0-0003rZ-KJ
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 14:36:59 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1InIR0-0003rW-F2
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 14:36:58 -0400
Received: from nf-out-0910.google.com ([64.233.182.187])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1InIR0-0003Iu-2b
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 14:36:58 -0400
Received: by nf-out-0910.google.com with SMTP id 30so242145nfu
	for <axiom-math@nongnu.org>; Wed, 31 Oct 2007 11:36:56 -0700 (PDT)
Received: by 10.86.60.7 with SMTP id i7mr6805454fga.1193855816638;
	Wed, 31 Oct 2007 11:36:56 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Wed, 31 Oct 2007 11:36:56 -0700 (PDT)
Message-ID: <fbcd16d40710311136u4a7e8d28nfd46271f6fbb0b66@mail.gmail.com>
Date: Wed, 31 Oct 2007 14:36:56 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: "Ralf Hemmecke" <ralf@hemmecke.de>
In-Reply-To: <4728B60C.9050907@hemmecke.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<fbcd16d40710220948i4cfddcf2q3cf5543a73380228@mail.gmail.com>
	<Pine.LNX.4.64.0710221155250.17358@gauss.cs.tamu.edu>
	<fbcd16d40710221106i671da534kbf76250668178a67@mail.gmail.com>
	<47279AFF.5010202@hemmecke.de>
	<fbcd16d40710310754g15372d99j2e5ba81c1da2710@mail.gmail.com>
	<47289E1F.80509@risc.uni-linz.ac.at>
	<fbcd16d40710310929v658f24d2k4c05b636c35b118a@mail.gmail.com>
	<4728B60C.9050907@hemmecke.de>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: fricas-devel@googlegroups.com, axiom-math@nongnu.org,
	open-axiom-devel@lists.sourceforge.net
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re:
	[fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 31 Oct 2007 18:37:00 -0000

On 10/31/07, Ralf Hemmecke wrote:
> ...
> Of course the A must come from somewhere, but who would like to write a
> cross of two functions in that way?
>
> I would better have something like
>
>   cross: (A: Type) -> (A->X,A->Y) -> (A->%)
>
> later say
>
>   product == cross(Integer)
>
> and then use "product" as I did above.
>

Ok, that's fine.

> And since this A is actually part of the Limit definition there should
> rather be something like (dream dream ...)
>
>   Limit(A: Type): ... {-- this introduces A
>      Product(X: Type, Y: Type): with {...} == add {...}
>   }
>
> within "with {..}" and "add {...}" there would be no need to say
> anything about "product", since it would come through the Limit
> construction.
>
> Oh, that is not well thought of... How would the compile know that the
> function is called "product"? Hmmmmm.....
>

The domain constructor 'Limit', as a generalization of 'Product' needs
to be defined over both a set of domains and some arrows (functions)
involving those domains

  Limit(A,B,C, ... A->B, B->C, ... )

then 'limit', as a generalization of 'product' is the following
uniquely defined exported operation

  limit(X:Type,f:X->A,g:X->B, h:X->C, ... ): X -> %

for any X, f, g, h, ... such that everything commutes. But I am not
sure how best to write the signature of 'Limit'. It requires both a
Tuple(Type) and a Tuple of maps involving (possibly just some of)
those Type. A reasonable general syntax probably requires an extension
of the compiler but special cases can be easily defined, e.g.

  Equalizer(A:Type,B:Type,p:A->B,q:A->B)

  equalizer(X:Type,f:X->A):Union(X->%,"failed")

where "failed" is returned in the case p f ~= q f

http://en.wikipedia.org/wiki/Equalizer_%28mathematics%29
http://en.wikipedia.org/wiki/Limit_(category_theory)

> ...
> >>
> >>   product: (X -> A, X -> B) -> X -> %.
> >
> > What is X above?
>
> All-quantified. In fact, I was thinking that the compiler would silently
> introduce this "Limit(X)" from above.

It might be nice to define such generic operations where any domain X
(or other implicit types required for "unification") is deduced from
context. I guess this would be a natural generalization concept of a
"mode" in the Axiom interpreter where a type place marker can be
denoted by '?', but I am not sure if this belongs in the compiler or
not.

>
> >> You don't want to write down that function definition yourself, right?
>
> > Well, I would actually expect it to be exported by a basic built-in
> > domain like 'Record' since that is what most directly corresponds to
> > categorical Product. If this was made sufficiently general, there
> > would be no need for a separately programmed domain in the library.
>
> I think I can support this.
>

Great. :-)

Regards,
Bill Page.



From MAILER-DAEMON Wed Oct 31 14:42:53 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1InIWj-0001mq-Fp
	for mharc-axiom-math@gnu.org; Wed, 31 Oct 2007 14:42:53 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1InIWh-0001lq-K3
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 14:42:51 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1InIWf-0001jz-N9
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 14:42:50 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1InIWf-0001jY-DU
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 14:42:49 -0400
Received: from nf-out-0910.google.com ([64.233.182.190])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1InIWe-0005yk-VN
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 14:42:49 -0400
Received: by nf-out-0910.google.com with SMTP id 30so243783nfu
	for <axiom-math@nongnu.org>; Wed, 31 Oct 2007 11:42:47 -0700 (PDT)
Received: by 10.86.97.7 with SMTP id u7mr6814121fgb.1193856166733;
	Wed, 31 Oct 2007 11:42:46 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Wed, 31 Oct 2007 11:42:46 -0700 (PDT)
Message-ID: <fbcd16d40710311142w27c48390q40e72703db8ac79e@mail.gmail.com>
Date: Wed, 31 Oct 2007 14:42:46 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: "Francois Maltey" <fmaltey@nerim.fr>
In-Reply-To: <87sl3rrvm7.fsf@nerim.fr>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<fbcd16d40710220948i4cfddcf2q3cf5543a73380228@mail.gmail.com>
	<Pine.LNX.4.64.0710221155250.17358@gauss.cs.tamu.edu>
	<fbcd16d40710221106i671da534kbf76250668178a67@mail.gmail.com>
	<47279AFF.5010202@hemmecke.de>
	<fbcd16d40710310754g15372d99j2e5ba81c1da2710@mail.gmail.com>
	<47289E1F.80509@risc.uni-linz.ac.at>
	<fbcd16d40710310929v658f24d2k4c05b636c35b118a@mail.gmail.com>
	<87sl3rrvm7.fsf@nerim.fr>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: fricas-devel@googlegroups.com, Ralf Hemmecke <hemmecke@risc.uni-linz.ac.at>,
	open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re:
	[fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 31 Oct 2007 18:42:52 -0000

On 31 Oct 2007 19:23:44 +0100, Francois Maltey wrote:
>
> And what do you think about a map as :
>
> map (t +-> [|wholePart t, sin t|], [1.1,2.2,3.3])
>
> where [|....|]creates a makeprod with right types.
>

It's ok, but way should we require the dummy variable 't' when we can
operate directly on functions with the higher-order function
'product'? I think

   t +-> [|wholePart t, sin t|]

is just a slightly awkward way to write:

  product(wholePart,sin)

> It's a good thing that record will remain mutable and the other
> structure product won't be mutable. So there is no ambiguity.
>

Maybe there should be both 'Record' and 'Record!' where as usual the !
denotes mutability?

Regards,
Bill Page.



From MAILER-DAEMON Wed Oct 31 15:38:50 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1InJOs-0001ea-3q
	for mharc-axiom-math@gnu.org; Wed, 31 Oct 2007 15:38:50 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1InJOp-0001da-Ke
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 15:38:47 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1InJOp-0001dG-2Y
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 15:38:47 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1InJOo-0001dD-TY
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 15:38:46 -0400
Received: from smtp-103-wednesday.noc.nerim.net ([62.4.17.103]
	helo=mallaury.nerim.net)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <fmaltey@nerim.fr>) id 1InJOo-0002wZ-Go
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 15:38:46 -0400
Received: from localhost (fmaltey.net0.nerim.net [213.41.170.4])
	by mallaury.nerim.net (Postfix) with ESMTP id 01A324F3D1;
	Wed, 31 Oct 2007 20:38:34 +0100 (CET)
Received: from fmy by localhost with local (Exim 4.63)
	(envelope-from <fmaltey@nerim.fr>)
	id 1InJOl-0001Qb-UU; Wed, 31 Oct 2007 20:38:43 +0100
To: "Bill Page" <bill.page@newsynthesis.org>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<fbcd16d40710220948i4cfddcf2q3cf5543a73380228@mail.gmail.com>
	<Pine.LNX.4.64.0710221155250.17358@gauss.cs.tamu.edu>
	<fbcd16d40710221106i671da534kbf76250668178a67@mail.gmail.com>
	<47279AFF.5010202@hemmecke.de>
	<fbcd16d40710310754g15372d99j2e5ba81c1da2710@mail.gmail.com>
	<47289E1F.80509@risc.uni-linz.ac.at>
	<fbcd16d40710310929v658f24d2k4c05b636c35b118a@mail.gmail.com>
	<87sl3rrvm7.fsf@nerim.fr>
	<fbcd16d40710311142w27c48390q40e72703db8ac79e@mail.gmail.com>
From: Francois Maltey <fmaltey@nerim.fr>
Date: 31 Oct 2007 20:38:43 +0100
In-Reply-To: <fbcd16d40710311142w27c48390q40e72703db8ac79e@mail.gmail.com>
Message-ID: <87lk9jqdks.fsf@nerim.fr>
Lines: 28
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-detected-kernel: by monty-python.gnu.org: FreeBSD 4.6-4.9
Cc: fricas-devel@googlegroups.com, Ralf Hemmecke <hemmecke@risc.uni-linz.ac.at>,
	open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re:
	[fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 31 Oct 2007 19:38:48 -0000

Hello, again

> It's ok, but way should we require the dummy variable 't' when we can
> operate directly on functions with the higher-order function
> 'product'? I think
> 
>    t +-> [|wholePart t, sin t|]
> 
> is just a slightly awkward way to write:
> 
>   product(wholePart,sin)

Is it the reason why you want a ?function? product (A->X, A->Y, ...) ?

> 
> > It's a good thing that record will remain mutable and the other
> > structure product won't be mutable. So there is no ambiguity.
> >
> 
> Maybe there should be both 'Record' and 'Record!' where as usual the !
> denotes mutability?
> 
I'm mot sure : mathematics don't speak about record but product
or << couples or triplets or n-uplet in French >> or Tupple ?

And Record! is the most logic, but perhaps not usable because everybody 
think << Record >>.




From MAILER-DAEMON Wed Oct 31 16:29:09 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1InKBZ-0004DT-J7
	for mharc-axiom-math@gnu.org; Wed, 31 Oct 2007 16:29:09 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1InKBY-0004Ak-4c
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 16:29:08 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1InKBX-00049Z-Gf
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 16:29:07 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1InKBX-00049J-7M
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 16:29:07 -0400
Received: from nf-out-0910.google.com ([64.233.182.184])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1InKBW-000859-R0
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 16:29:06 -0400
Received: by nf-out-0910.google.com with SMTP id 30so271675nfu
	for <axiom-math@nongnu.org>; Wed, 31 Oct 2007 13:29:05 -0700 (PDT)
Received: by 10.86.86.12 with SMTP id j12mr6865441fgb.1193862545339;
	Wed, 31 Oct 2007 13:29:05 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Wed, 31 Oct 2007 13:29:05 -0700 (PDT)
Message-ID: <fbcd16d40710311329r6e62bf3fx52f2079bfdd4181b@mail.gmail.com>
Date: Wed, 31 Oct 2007 16:29:05 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: "Francois Maltey" <fmaltey@nerim.fr>
In-Reply-To: <87lk9jqdks.fsf@nerim.fr>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<Pine.LNX.4.64.0710221155250.17358@gauss.cs.tamu.edu>
	<fbcd16d40710221106i671da534kbf76250668178a67@mail.gmail.com>
	<47279AFF.5010202@hemmecke.de>
	<fbcd16d40710310754g15372d99j2e5ba81c1da2710@mail.gmail.com>
	<47289E1F.80509@risc.uni-linz.ac.at>
	<fbcd16d40710310929v658f24d2k4c05b636c35b118a@mail.gmail.com>
	<87sl3rrvm7.fsf@nerim.fr>
	<fbcd16d40710311142w27c48390q40e72703db8ac79e@mail.gmail.com>
	<87lk9jqdks.fsf@nerim.fr>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: fricas-devel@googlegroups.com, Ralf Hemmecke <hemmecke@risc.uni-linz.ac.at>,
	open-axiom-devel@lists.sourceforge.net, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [open-axiom-devel] [fricas-devel] Re:
	[fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Wed, 31 Oct 2007 20:29:08 -0000

On 31 Oct 2007 20:38:43 +0100, Francois Maltey wrote:
> Hello, again
>
> > It's ok, but way should we require the dummy variable 't' when we can
> > operate directly on functions with the higher-order function
> > 'product'? I think
> >
> >    t +-> [|wholePart t, sin t|]
> >
> > is just a slightly awkward way to write:
> >
> >   product(wholePart,sin)
>
> Is it the reason why you want a ?function? product (A->X, A->Y, ...) ?
>

No, not the real reason. My main reason for wanting the higher-order
function (i.e. functional? or maybe sometimes called functor?) is that
such functions arise naturally when you try to given the formal
(categorical) semantics of exactly what you mean by the domain called
Product (or Record).

> >
> > > It's a good thing that record will remain mutable and the other
> > > structure product won't be mutable. So there is no ambiguity.
> > >
> >
> > Maybe there should be both 'Record' and 'Record!' where as usual the !
> > denotes mutability?
> >
> I'm mot sure : mathematics don't speak about record but product
> or << couples or triplets or n-uplet in French >> or Tupple ?
>

You are right. Now Axiom and Aldor has a confusing mixture of
terminology about Product, DirectProduct, Tuple, Cross, Record, ...
All of these are (almost) the same kind of thing.

> And Record! is the most logic, but perhaps not usable because everybody
> think << Record >>.
>

I think it is good if 'Record' is not mutable by default and one is
required to use a slightly more exotic name if you want mutability.

Regards,
Bill Page.



From MAILER-DAEMON Wed Oct 31 20:00:01 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1InNTd-0000Mh-Bq
	for mharc-axiom-math@gnu.org; Wed, 31 Oct 2007 20:00:01 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1InNTb-0000K2-PV
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 19:59:59 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1InNTa-0000Iu-Tj
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 19:59:58 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43)
	id 1InNTZ-0000Gi-FP; Wed, 31 Oct 2007 19:59:57 -0400
Received: from smtp.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>)
	id 1InNTY-0004mi-D0; Wed, 31 Oct 2007 19:59:56 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id 30A0746DE0F;
	Wed, 31 Oct 2007 18:59:53 -0500 (CDT)
Date: Wed, 31 Oct 2007 18:58:41 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: fricas-devel@googlegroups.com
In-Reply-To: <fbcd16d40710311016x4f028e0dj92e72ccb3552be@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0710311857340.14870@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<Pine.LNX.4.64.0710221103300.17358@gauss.cs.tamu.edu>
	<fbcd16d40710220948i4cfddcf2q3cf5543a73380228@mail.gmail.com>
	<Pine.LNX.4.64.0710221155250.17358@gauss.cs.tamu.edu>
	<fbcd16d40710221106i671da534kbf76250668178a67@mail.gmail.com>
	<47279AFF.5010202@hemmecke.de>
	<fbcd16d40710310754g15372d99j2e5ba81c1da2710@mail.gmail.com>
	<47289E1F.80509@risc.uni-linz.ac.at>
	<fbcd16d40710310929v658f24d2k4c05b636c35b118a@mail.gmail.com>
	<4728B1B9.807@hemmecke.de>
	<fbcd16d40710311016x4f028e0dj92e72ccb3552be@mail.gmail.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: open-axiom-devel@lists.sourceforge.net,
	axiom-dev <axiom-developer@nongnu.org>, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re:
 [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 01 Nov 2007 00:00:00 -0000

On Wed, 31 Oct 2007, Bill Page wrote:

|                     I think the lack of mutability in functional
| languages like Haskell is one of the harder things to get used to but
| at the same time one of it's greatest strengths.

Haskell has imperative skin -- check out `monad'.

-- Gaby



From MAILER-DAEMON Wed Oct 31 20:39:33 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1InO5t-00043X-6L
	for mharc-axiom-math@gnu.org; Wed, 31 Oct 2007 20:39:33 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1InO5r-00041f-VE
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 20:39:32 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1InO5r-00040V-E9
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 20:39:31 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1InO5r-000408-7G
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 20:39:31 -0400
Received: from nf-out-0910.google.com ([64.233.182.189])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1InO5q-0006Ck-Rs
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 20:39:31 -0400
Received: by nf-out-0910.google.com with SMTP id 30so327669nfu
	for <axiom-math@nongnu.org>; Wed, 31 Oct 2007 17:39:29 -0700 (PDT)
Received: by 10.86.86.12 with SMTP id j12mr7019254fgb.1193877569331;
	Wed, 31 Oct 2007 17:39:29 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Wed, 31 Oct 2007 17:39:29 -0700 (PDT)
Message-ID: <fbcd16d40710311739j17695e30kc15f9d5f56e563b6@mail.gmail.com>
Date: Wed, 31 Oct 2007 20:39:29 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: fricas-devel@googlegroups.com
In-Reply-To: <Pine.LNX.4.64.0710311857340.14870@gauss.cs.tamu.edu>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<Pine.LNX.4.64.0710221155250.17358@gauss.cs.tamu.edu>
	<fbcd16d40710221106i671da534kbf76250668178a67@mail.gmail.com>
	<47279AFF.5010202@hemmecke.de>
	<fbcd16d40710310754g15372d99j2e5ba81c1da2710@mail.gmail.com>
	<47289E1F.80509@risc.uni-linz.ac.at>
	<fbcd16d40710310929v658f24d2k4c05b636c35b118a@mail.gmail.com>
	<4728B1B9.807@hemmecke.de>
	<fbcd16d40710311016x4f028e0dj92e72ccb3552be@mail.gmail.com>
	<Pine.LNX.4.64.0710311857340.14870@gauss.cs.tamu.edu>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: open-axiom-devel@lists.sourceforge.net,
	axiom-dev <axiom-developer@nongnu.org>, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
	[fricas-devel] Re: [fricas-devel] Re: iterators and cartesian
	product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 01 Nov 2007 00:39:32 -0000

On 10/31/07, Gabriel Dos Reis wrote:
>
> On Wed, 31 Oct 2007, Bill Page wrote:
>
> |                     I think the lack of mutability in functional
> | languages like Haskell is one of the harder things to get used
> | to but at the same time one of it's greatest strengths.
>
> Haskell has imperative skin -- check out `monad'.
>

Yes, I think that is a very good point and it does soften my point
above a little. "lack of mutability" is misleading. Mutable structures
can be modeled in Haskell as a derived concept.  For example:

http://en.wikipedia.org/wiki/Monads_in_functional_programming

(See especially references at the end of the article.)

Using a purely functional language does not mean that imperative-style
programming is impossible in that language. It might even be
interesting to consider implementing something akin to monads in
Aldor/SPAD, but I think you will agree that fundamentally these
languages were not designed to be purely functional.

Regards,
Bill Page.



From MAILER-DAEMON Wed Oct 31 20:58:07 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1InONq-0003OK-TD
	for mharc-axiom-math@gnu.org; Wed, 31 Oct 2007 20:58:06 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1InONp-0003O5-8B
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 20:58:05 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1InONn-0003NM-Pu
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 20:58:04 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1InONn-0003N2-LP
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 20:58:03 -0400
Received: from sd-green-bigip-177.dreamhost.com ([208.97.132.177]
	helo=spunkymail-a8.g.dreamhost.com)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <dherring@tentpost.com>) id 1InONn-0002dA-9j
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 20:58:03 -0400
Received: from [192.168.0.3] (c-24-61-15-96.hsd1.ma.comcast.net [24.61.15.96])
	by spunkymail-a8.g.dreamhost.com (Postfix) with ESMTP id 2CE8D10BAA0;
	Wed, 31 Oct 2007 17:57:48 -0700 (PDT)
Date: Wed, 31 Oct 2007 20:57:45 -0400 (EDT)
From: Daniel Herring <dherring@tentpost.com>
X-X-Sender: nuntius@strider1.home.net
To: "C.Frangos" <cfrangos@telkomsa.net>
Subject: Re: [Axiom-math] Axiom: Errors on suse 10.2, 32 bit
In-Reply-To: <07103109035802.04267@zeta>
Message-ID: <Pine.LNX.4.64.0710311955300.2606@strider1.home.net>
References: <07103109035802.04267@zeta>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII; format=flowed
X-detected-kernel: by monty-python.gnu.org: Linux 2.4-2.6
Cc: axiom-math@nongnu.org
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 01 Nov 2007 00:58:06 -0000

> I have installed the axiom binaries on a suse linux 10.2, 32 bit system, and
> am trying some basic commands.
>
> I am getting the errors below.

The language you type into Axiom is interpreted by a lisp subsystem, more 
specifically GCL.  Every time you define a function in Axiom, this 
triggers a lisp function to be generated; GCL actually writes out C source 
files, compiles them with GCC, and links the objects back in.

Below are my ramblings as I found a solution.

> (11) -> draw(sin(x),x=-1..1);
>   Loading /home/apps/axiombin/mnt/fedora5/algebra/SEG.o for domain
>      Segment
>   Loading /home/apps/axiombin/mnt/fedora5/algebra/SEGBIND.o for domain
>      SegmentBinding
>   Loading /home/apps/axiombin/mnt/fedora5/algebra/FLOAT.o for domain
>      Float

Here we see GCL loading the object files for some precompiled functions.

>   >> System error:
>   (SYSTEM "gcc -c -Wall -DVOL=volatile -fsigned-char -pipe
> -I/root/axiom/mnt/fedora5/bin/../h  -O3 -fomit-frame-pointer -c
> \"/tmp/gazonk7.c\" -o \"/tmp/gazonk7.o\" -w") returned a non-zero value 0.

Here we see GCL trying to compile a new function... and failing.

Based on the previous error message, GCC was having trouble with the 
"-I/root/axiom/mnt/fedora5/bin/../h".  Clearly not good; this path 
contains a reference to fedora5, while you're running suse and probably 
not as root...

This is a funny artifact of how Axiom is compiled.  This path points into 
the compilation directory, but is totally unnecessary for Axiom to run 
properly.  On systems where the path doesn't exist, everything is fine. 
Unfortunately, GCC sees that this path *might* exist but that your user 
doesn't have permissions to look inside /root and see if it does...

For fun, run
> strings `which AXIOMsys` | grep /root/axiom/mnt/fedora5/bin

You should see a line like
#+:akcl (setq si::*system-directory* "/root/axiom/mnt/fedora5/bin/")

That's where the problem lies.

To work around this, type the following line
)lisp (setf si::*system-directory* ".")
as your first command to Axiom after it starts up.

All your problems (wrt the above error) should go away.

Later,
Daniel



From MAILER-DAEMON Wed Oct 31 21:12:35 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1InObr-0003nC-Eu
	for mharc-axiom-math@gnu.org; Wed, 31 Oct 2007 21:12:35 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1InObp-0003jt-Nm
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 21:12:33 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1InObp-0003ig-5F
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 21:12:33 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43)
	id 1InObo-0003gO-1E; Wed, 31 Oct 2007 21:12:32 -0400
Received: from smtp.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>)
	id 1InObn-0007Py-S5; Wed, 31 Oct 2007 21:12:32 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id 46DAD46DE0F;
	Wed, 31 Oct 2007 20:12:30 -0500 (CDT)
Date: Wed, 31 Oct 2007 20:11:18 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: fricas-devel@googlegroups.com
In-Reply-To: <fbcd16d40710311739j17695e30kc15f9d5f56e563b6@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0710312006100.14870@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<Pine.LNX.4.64.0710221155250.17358@gauss.cs.tamu.edu>
	<fbcd16d40710221106i671da534kbf76250668178a67@mail.gmail.com>
	<47279AFF.5010202@hemmecke.de>
	<fbcd16d40710310754g15372d99j2e5ba81c1da2710@mail.gmail.com>
	<47289E1F.80509@risc.uni-linz.ac.at>
	<fbcd16d40710310929v658f24d2k4c05b636c35b118a@mail.gmail.com>
	<4728B1B9.807@hemmecke.de>
	<fbcd16d40710311016x4f028e0dj92e72ccb3552be@mail.gmail.com>
	<Pine.LNX.4.64.0710311857340.14870@gauss.cs.tamu.edu>
	<fbcd16d40710311739j17695e30kc15f9d5f56e563b6@mail.gmail.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: open-axiom-devel@lists.sourceforge.net,
	axiom-dev <axiom-developer@nongnu.org>, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re:
 [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 01 Nov 2007 01:12:34 -0000

On Wed, 31 Oct 2007, Bill Page wrote:

| 
| On 10/31/07, Gabriel Dos Reis wrote:
| >
| > On Wed, 31 Oct 2007, Bill Page wrote:
| >
| > |                     I think the lack of mutability in functional
| > | languages like Haskell is one of the harder things to get used
| > | to but at the same time one of it's greatest strengths.
| >
| > Haskell has imperative skin -- check out `monad'.
| >
| 
| Yes, I think that is a very good point and it does soften my point
| above a little. "lack of mutability" is misleading. Mutable structures
| can be modeled in Haskell as a derived concept.  For example:
| 
| http://en.wikipedia.org/wiki/Monads_in_functional_programming
| 
| (See especially references at the end of the article.)
| 
| Using a purely functional language does not mean that imperative-style
| programming is impossible in that language.

Note however that some functional programming evangelists consider the
'monad' solution to the state problem as a `grotesques hack': If you
use a state in your function, all the callers will be infected.

| It might even be
| interesting to consider implementing something akin to monads in
| Aldor/SPAD,

There already existe a domain called Monad in the Axiom family -- it
is a well mathematically defined notion. 

I do not however see myself implement the Haskell solution for Axiom.
I would prefer a more powerful effect system for OpenAxiom.

| but I think you will agree that fundamentally these
| languages were not designed to be purely functional.

I do not see `purely functional' as as necessity.

-- Gaby



From MAILER-DAEMON Wed Oct 31 21:42:20 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1InP4d-00061z-MU
	for mharc-axiom-math@gnu.org; Wed, 31 Oct 2007 21:42:19 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1InP4b-0005yW-ND
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 21:42:17 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1InP4a-0005xC-So
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 21:42:17 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1InP4a-0005wx-Ma
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 21:42:16 -0400
Received: from nf-out-0910.google.com ([64.233.182.184])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1InP4a-0003AV-Em
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 21:42:16 -0400
Received: by nf-out-0910.google.com with SMTP id 30so340796nfu
	for <axiom-math@nongnu.org>; Wed, 31 Oct 2007 18:42:15 -0700 (PDT)
Received: by 10.86.98.18 with SMTP id v18mr18527fgb.1193881334604;
	Wed, 31 Oct 2007 18:42:14 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Wed, 31 Oct 2007 18:42:14 -0700 (PDT)
Message-ID: <fbcd16d40710311842h4ad4db6cl6da5488903d1b0b4@mail.gmail.com>
Date: Wed, 31 Oct 2007 21:42:14 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: fricas-devel@googlegroups.com
In-Reply-To: <Pine.LNX.4.64.0710312006100.14870@gauss.cs.tamu.edu>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<47279AFF.5010202@hemmecke.de>
	<fbcd16d40710310754g15372d99j2e5ba81c1da2710@mail.gmail.com>
	<47289E1F.80509@risc.uni-linz.ac.at>
	<fbcd16d40710310929v658f24d2k4c05b636c35b118a@mail.gmail.com>
	<4728B1B9.807@hemmecke.de>
	<fbcd16d40710311016x4f028e0dj92e72ccb3552be@mail.gmail.com>
	<Pine.LNX.4.64.0710311857340.14870@gauss.cs.tamu.edu>
	<fbcd16d40710311739j17695e30kc15f9d5f56e563b6@mail.gmail.com>
	<Pine.LNX.4.64.0710312006100.14870@gauss.cs.tamu.edu>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: open-axiom-devel@lists.sourceforge.net,
	axiom-dev <axiom-developer@nongnu.org>, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
	[fricas-devel] Re: [fricas-devel] Re: iterators and cartesian
	product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 01 Nov 2007 01:42:18 -0000

On 10/31/07, Gabriel Dos Reis wrote:
>
> On Wed, 31 Oct 2007, Bill Page wrote:
> ...
> | It might even be interesting to consider implementing
> | something akin to monads in Aldor/SPAD,
>
> There already existe a domain called Monad in the Axiom family --
> it is a well mathematically defined notion.
>

Perhaps I am being dense but I do not see what this has to do with the
concept of Monad in Haskell. Could you please explain?

++ Description:
++  Monad is the class of all multiplicative monads, i.e. sets
++  with a binary operation.

)show Monad
 Monad  is a category constructor
 Abbreviation for Monad is MONAD
 This constructor is exposed in this frame.
 Issue )edit /usr/local/lib/axiom/target/i686-suse-linux/../../src/algebra/MONAD.spad
to see algebra source code for MONAD

------------------------------- Operations --------------------------------
 ?*? : (%,%) -> %                      ?**? : (%,PositiveInteger) -> %
 ?=? : (%,%) -> Boolean                coerce : % -> OutputForm
 hash : % -> SingleInteger             latex : % -> String
 ?~=? : (%,%) -> Boolean
 leftPower : (%,PositiveInteger) -> %
 rightPower : (%,PositiveInteger) -> %

-----

I think what is required "mathematically" for Haskell-like monads in
Axiom is something more related to the concept of monad in category
theory. Ref:

http://en.wikipedia.org/wiki/Monad_%28category_theory%29

perhaps implemented in the style promoted by Saul Youssef in his
article about category theory in Aldor.

> I do not however see myself implement the Haskell solution
> | for Axiom. I would prefer a more powerful effect system for
> | OpenAxiom.
>

Could you describe what you mean by "effect system"?

> | but I think you will agree that fundamentally these
> | languages were not designed to be purely functional.
>
> I do not see `purely functional' as as necessity.
>

In that case what is wrong with effects as implemented in SPAD's
imperative-style programming right now?

I am sorry. I don't mean to sound rude, but I just don't understand
where your comments lead. Could you say something more about what you
are considering for implemention in OpenAxiom?

Regards,
Bill Page.



From MAILER-DAEMON Wed Oct 31 21:56:26 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1InPII-0001gM-Qo
	for mharc-axiom-math@gnu.org; Wed, 31 Oct 2007 21:56:26 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1InPIH-0001eC-Q3
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 21:56:25 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1InPIG-0001c4-Ra
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 21:56:25 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43)
	id 1InPIE-0001XK-OO; Wed, 31 Oct 2007 21:56:22 -0400
Received: from mailhost.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>)
	id 1InPIE-0008P8-HS; Wed, 31 Oct 2007 21:56:22 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id 9774F46DE0F;
	Wed, 31 Oct 2007 20:56:21 -0500 (CDT)
Date: Wed, 31 Oct 2007 20:55:10 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: fricas-devel@googlegroups.com
In-Reply-To: <fbcd16d40710311842h4ad4db6cl6da5488903d1b0b4@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0710312042270.14870@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<47279AFF.5010202@hemmecke.de>
	<fbcd16d40710310754g15372d99j2e5ba81c1da2710@mail.gmail.com>
	<47289E1F.80509@risc.uni-linz.ac.at>
	<fbcd16d40710310929v658f24d2k4c05b636c35b118a@mail.gmail.com>
	<4728B1B9.807@hemmecke.de>
	<fbcd16d40710311016x4f028e0dj92e72ccb3552be@mail.gmail.com>
	<Pine.LNX.4.64.0710311857340.14870@gauss.cs.tamu.edu>
	<fbcd16d40710311739j17695e30kc15f9d5f56e563b6@mail.gmail.com>
	<Pine.LNX.4.64.0710312006100.14870@gauss.cs.tamu.edu>
	<fbcd16d40710311842h4ad4db6cl6da5488903d1b0b4@mail.gmail.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: open-axiom-devel@lists.sourceforge.net,
	axiom-dev <axiom-developer@nongnu.org>, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re:
 [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 01 Nov 2007 01:56:26 -0000

On Wed, 31 Oct 2007, Bill Page wrote:

| On 10/31/07, Gabriel Dos Reis wrote:
| >
| > On Wed, 31 Oct 2007, Bill Page wrote:
| > ...
| > | It might even be interesting to consider implementing
| > | something akin to monads in Aldor/SPAD,
| >
| > There already existe a domain called Monad in the Axiom family --
| > it is a well mathematically defined notion.
| >
| 
| Perhaps I am being dense but I do not see what this has to do with the
| concept of Monad in Haskell.

They are the same categorial notion.  What youhave in Haskell is a
computer scientist application of the categorial notion of `monad'.
Haskell's take derive from Moggi's work on applying monads to defined
program semantics.  See his seminal work.  And it is also true that you
don't need to understand category theory before using `monad's in
Haskell.  Which makes some haskellers say that they did a really bad job
at picking the name.

[...]

| > I do not however see myself implement the Haskell solution
| > | for Axiom. I would prefer a more powerful effect system for
| > | OpenAxiom.
| >
| 
| Could you describe what you mean by "effect system"?


  http://www.irisa.fr/prive/talpin/papers/jfp92.pdf

| > | but I think you will agree that fundamentally these
| > | languages were not designed to be purely functional.
| >
| > I do not see `purely functional' as as necessity.
| >
| 
| In that case what is wrong with effects as implemented in SPAD's
| imperative-style programming right now?

I did not make a statement to that effect, so I do not exactly what
you mean. Could you clarify?

| I am sorry. I don't mean to sound rude, but I just don't understand
| where your comments lead. Could you say something more about what you
| are considering for implemention in OpenAxiom?

Among other things, a type and effect system so that I can know which
domain are purely functional -- therefore the caching implementation
technique is sound for them -- and which have effects, therefore
should not be cached. 

-- Gaby



From MAILER-DAEMON Wed Oct 31 22:29:49 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1InPob-0002gv-KW
	for mharc-axiom-math@gnu.org; Wed, 31 Oct 2007 22:29:49 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1InPoa-0002dq-4P
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 22:29:48 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1InPoZ-0002cI-L2
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 22:29:47 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1InPoZ-0002bj-2z
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 22:29:47 -0400
Received: from nf-out-0910.google.com ([64.233.182.185])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1InPoY-0001XQ-O5
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 22:29:47 -0400
Received: by nf-out-0910.google.com with SMTP id 30so350787nfu
	for <axiom-math@nongnu.org>; Wed, 31 Oct 2007 19:29:45 -0700 (PDT)
Received: by 10.86.77.5 with SMTP id z5mr46264fga.1193884185296;
	Wed, 31 Oct 2007 19:29:45 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Wed, 31 Oct 2007 19:29:45 -0700 (PDT)
Message-ID: <fbcd16d40710311929h108f0caerd6d0879fe60b6995@mail.gmail.com>
Date: Wed, 31 Oct 2007 22:29:45 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: fricas-devel@googlegroups.com
In-Reply-To: <Pine.LNX.4.64.0710312042270.14870@gauss.cs.tamu.edu>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<47289E1F.80509@risc.uni-linz.ac.at>
	<fbcd16d40710310929v658f24d2k4c05b636c35b118a@mail.gmail.com>
	<4728B1B9.807@hemmecke.de>
	<fbcd16d40710311016x4f028e0dj92e72ccb3552be@mail.gmail.com>
	<Pine.LNX.4.64.0710311857340.14870@gauss.cs.tamu.edu>
	<fbcd16d40710311739j17695e30kc15f9d5f56e563b6@mail.gmail.com>
	<Pine.LNX.4.64.0710312006100.14870@gauss.cs.tamu.edu>
	<fbcd16d40710311842h4ad4db6cl6da5488903d1b0b4@mail.gmail.com>
	<Pine.LNX.4.64.0710312042270.14870@gauss.cs.tamu.edu>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: open-axiom-devel@lists.sourceforge.net,
	axiom-dev <axiom-developer@nongnu.org>, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
	[fricas-devel] Re: [fricas-devel] Re: iterators and cartesian
	product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 01 Nov 2007 02:29:48 -0000

On 10/31/07, Gabriel Dos Reis wrote:
>
> On Wed, 31 Oct 2007, Bill Page wrote:
>
> | On 10/31/07, Gabriel Dos Reis wrote:
> | >
> | > On Wed, 31 Oct 2007, Bill Page wrote:
> | > ...
> | > | It might even be interesting to consider implementing
> | > | something akin to monads in Aldor/SPAD,
> | >
> | > There already existe a domain called Monad in the Axiom family --
> | > it is a well mathematically defined notion.
> | >
> |
> | Perhaps I am being dense but I do not see what this has to do with the
> | concept of Monad in Haskell.
>
> They are the same categorial notion.

That is not clear to me.

> What you have in Haskell is a computer scientist application of the
> categorial notion of `monad'.

Agreed.

> Haskell's take derive from Moggi's work on applying monads to defined
> program semantics.  See his seminal work.

Yes.

> And it is also true that you don't need to understand category
> theory before using `monad's in Haskell.

I don't think that is extraordinary. One doesn't need to know much
about formal semantics of programming languages in general before
starting to program. And more relevant to this thread: I don't think
you need to know anything about category before using Record or Cross
in Axiom/Aldor either, but I would still insist that to describe it
formally as a limit in category theory adds something to the issue of
language and library design.

> Which makes some haskellers say that they did a really bad job
> at picking the name.
>

Well, the language is called *Haskell* afterall. Do those haskellers
who think monad is a bad name even remember who Haskell Curry was!?
;-)  [Rhetorical, don't answer that ...]

> [...]
>
> | > I do not however see myself implement the Haskell solution
> | > | for Axiom. I would prefer a more powerful effect system for
> | > | OpenAxiom.
> | >
> |
> | Could you describe what you mean by "effect system"?
>
>   http://www.irisa.fr/prive/talpin/papers/jfp92.pdf

Ok, thanks. This quote from the article:

"Similar to types, effects describe how expressions affect the store
in a functional language extended with imperative constructs. Types
and effects can be statically computed by algebraic reconstruction
[Jouvelot]."

makes it more clear to me.

>
> | > | but I think you will agree that fundamentally these
> | > | languages were not designed to be purely functional.
> | >
> | > I do not see `purely functional' as as necessity.
> | >
> |
> | In that case what is wrong with effects as implemented in SPAD's
> | imperative-style programming right now?
>
> I did not make a statement to that effect, so I do not exactly what
> you mean. Could you clarify?
>

Your reference above makes it more clear to me what you might have in
mind. Perhaps you are thinking that it might be possible to give a
formal description of effects related to the imperative constructs in
SPAD as it exists now (or perhaps some subset of the imperative part
of the language). I am sceptical but I really don't know enough to
comment further.

> | I am sorry. I don't mean to sound rude, but I just don't understand
> | where your comments lead. Could you say something more about
> | what you are considering for implemention in OpenAxiom?
>
> Among other things, a type and effect system so that I can know which
> domain are purely functional -- therefore the caching implementation
> technique is sound for them -- and which have effects, therefore
> should not be cached.

I think that is a very worthwhile goal. Thanks for explaining.

Regards,
Bill Page.



From MAILER-DAEMON Wed Oct 31 22:56:08 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1InQE4-00069s-Nh
	for mharc-axiom-math@gnu.org; Wed, 31 Oct 2007 22:56:08 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1InQE3-00068B-E0
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 22:56:07 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1InQE2-00066Z-Qa
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 22:56:06 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43)
	id 1InQE1-000659-C0; Wed, 31 Oct 2007 22:56:05 -0400
Received: from smtp.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>)
	id 1InQE1-0007eh-5d; Wed, 31 Oct 2007 22:56:05 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id 42FDF46DE0F;
	Wed, 31 Oct 2007 21:56:03 -0500 (CDT)
Date: Wed, 31 Oct 2007 21:54:51 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: fricas-devel@googlegroups.com
In-Reply-To: <fbcd16d40710311929h108f0caerd6d0879fe60b6995@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0710312140210.14870@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<47289E1F.80509@risc.uni-linz.ac.at>
	<fbcd16d40710310929v658f24d2k4c05b636c35b118a@mail.gmail.com>
	<4728B1B9.807@hemmecke.de>
	<fbcd16d40710311016x4f028e0dj92e72ccb3552be@mail.gmail.com>
	<Pine.LNX.4.64.0710311857340.14870@gauss.cs.tamu.edu>
	<fbcd16d40710311739j17695e30kc15f9d5f56e563b6@mail.gmail.com>
	<Pine.LNX.4.64.0710312006100.14870@gauss.cs.tamu.edu>
	<fbcd16d40710311842h4ad4db6cl6da5488903d1b0b4@mail.gmail.com>
	<Pine.LNX.4.64.0710312042270.14870@gauss.cs.tamu.edu>
	<fbcd16d40710311929h108f0caerd6d0879fe60b6995@mail.gmail.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: open-axiom-devel@lists.sourceforge.net,
	axiom-dev <axiom-developer@nongnu.org>, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re:
 [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 01 Nov 2007 02:56:07 -0000

On Wed, 31 Oct 2007, Bill Page wrote:

| 
| On 10/31/07, Gabriel Dos Reis wrote:
| >
| > On Wed, 31 Oct 2007, Bill Page wrote:
| >
| > | On 10/31/07, Gabriel Dos Reis wrote:
| > | >
| > | > On Wed, 31 Oct 2007, Bill Page wrote:
| > | > ...
| > | > | It might even be interesting to consider implementing
| > | > | something akin to monads in Aldor/SPAD,
| > | >
| > | > There already existe a domain called Monad in the Axiom family --
| > | > it is a well mathematically defined notion.
| > | >
| > |
| > | Perhaps I am being dense but I do not see what this has to do with the
| > | concept of Monad in Haskell.
| >
| > They are the same categorial notion.
| 
| That is not clear to me.
| 
| > What you have in Haskell is a computer scientist application of the
| > categorial notion of `monad'.
| 
| Agreed.

I cannot reconcile both your statements.  

Anyway, check out

    "Comprehending Monads", by Philip Wadler
     Proceedings of the 1990 ACM conference on LISP and functional
     programming 

[...]

| > Which makes some haskellers say that they did a really bad job
| > at picking the name.
| >
| 
| Well, the language is called *Haskell* afterall. Do those haskellers
| who think monad is a bad name even remember who Haskell Curry was!?
| ;-)  [Rhetorical, don't answer that ...]


http://research.microsoft.com/~simonpj/papers/haskell-retrospective/HaskellRetrospective.pdf

skip to page 40.


-- Gaby



From MAILER-DAEMON Wed Oct 31 23:13:48 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1InQVA-0002Rl-Ax
	for mharc-axiom-math@gnu.org; Wed, 31 Oct 2007 23:13:48 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1InQV9-0002RU-Eg
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 23:13:47 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1InQV7-0002Q8-Pp
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 23:13:47 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43) id 1InQV7-0002Q3-M0
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 23:13:45 -0400
Received: from mu-out-0910.google.com ([209.85.134.189])
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <bill.page@newsynthesis.org>) id 1InQV7-0003EN-MN
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 23:13:45 -0400
Received: by mu-out-0910.google.com with SMTP id i2so408825mue
	for <axiom-math@nongnu.org>; Wed, 31 Oct 2007 20:13:44 -0700 (PDT)
Received: by 10.86.96.18 with SMTP id t18mr102211fgb.1193886823877;
	Wed, 31 Oct 2007 20:13:43 -0700 (PDT)
Received: by 10.86.57.11 with HTTP; Wed, 31 Oct 2007 20:13:43 -0700 (PDT)
Message-ID: <fbcd16d40710312013m262be109u154552cd56dc8468@mail.gmail.com>
Date: Wed, 31 Oct 2007 23:13:43 -0400
From: "Bill Page" <bill.page@newsynthesis.org>
To: fricas-devel@googlegroups.com
In-Reply-To: <Pine.LNX.4.64.0710312140210.14870@gauss.cs.tamu.edu>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<4728B1B9.807@hemmecke.de>
	<fbcd16d40710311016x4f028e0dj92e72ccb3552be@mail.gmail.com>
	<Pine.LNX.4.64.0710311857340.14870@gauss.cs.tamu.edu>
	<fbcd16d40710311739j17695e30kc15f9d5f56e563b6@mail.gmail.com>
	<Pine.LNX.4.64.0710312006100.14870@gauss.cs.tamu.edu>
	<fbcd16d40710311842h4ad4db6cl6da5488903d1b0b4@mail.gmail.com>
	<Pine.LNX.4.64.0710312042270.14870@gauss.cs.tamu.edu>
	<fbcd16d40710311929h108f0caerd6d0879fe60b6995@mail.gmail.com>
	<Pine.LNX.4.64.0710312140210.14870@gauss.cs.tamu.edu>
X-detected-kernel: by monty-python.gnu.org: Linux 2.6 (newer, 2)
Cc: open-axiom-devel@lists.sourceforge.net,
	axiom-dev <axiom-developer@nongnu.org>, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
	[fricas-devel] Re: [fricas-devel] Re: iterators and cartesian
	product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 01 Nov 2007 03:13:47 -0000

On 10/31/07, Gabriel Dos Reis wrote:
>
> On Wed, 31 Oct 2007, Bill Page wrote:
> ...
> | > |
> | > | Perhaps I am being dense but I do not see what this has to do with the
> | > | concept of Monad in Haskell.
> | >
> | > They are the same categorial notion.
> |
> | That is not clear to me.
> |
> | > What you have in Haskell is a computer scientist application of the
> | > categorial notion of `monad'.
> |
> | Agreed.
>
> I cannot reconcile both your statements.
>

I mean: What does Monad as defined in the Axiom library right now:

++  Monad is the class of all multiplicative monads, i.e. sets
++  with a binary operation.

have to do with Monads in Haskell? Isn't that what you implied by your comment?

"There already existe a domain called Monad in the Axiom family -- it
is a well mathematically defined notion."

Or did you just mean that if one implemented Haskell-style monads in
Axiom, one should use a different name?


> http://research.microsoft.com/~simonpj/papers/haskell-retrospective/HaskellRetrospective.pdf
>
> skip to page 40.
>

Oh yah, I remember that. I suppose we could use that name for monad in Axiom:

)abbrev domain WarmFuzzyThing WFT
...
;-)

Regards,
Bill Page.



From MAILER-DAEMON Wed Oct 31 23:18:10 2007
Received: from mailman by lists.gnu.org with archive (Exim 4.43)
	id 1InQZO-0005xZ-LN
	for mharc-axiom-math@gnu.org; Wed, 31 Oct 2007 23:18:10 -0400
Received: from mailman by lists.gnu.org with tmda-scanned (Exim 4.43)
	id 1InQZM-0005uy-Rg
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 23:18:08 -0400
Received: from exim by lists.gnu.org with spam-scanned (Exim 4.43)
	id 1InQZK-0005sA-VJ
	for axiom-math@nongnu.org; Wed, 31 Oct 2007 23:18:07 -0400
Received: from [199.232.76.173] (helo=monty-python.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.43)
	id 1InQZJ-0005p0-0n; Wed, 31 Oct 2007 23:18:05 -0400
Received: from mailhost.cs.tamu.edu ([128.194.138.100] helo=postal.cs.tamu.edu)
	by monty-python.gnu.org with esmtp (Exim 4.60)
	(envelope-from <gdr@cs.tamu.edu>)
	id 1InQZJ-0004GF-6H; Wed, 31 Oct 2007 23:18:05 -0400
Received: from gauss.cs.tamu.edu (gauss.cs.tamu.edu [128.194.146.28])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by postal.cs.tamu.edu (Postfix) with ESMTP id F2EE046DE0F;
	Wed, 31 Oct 2007 22:18:03 -0500 (CDT)
Date: Wed, 31 Oct 2007 22:16:52 -0500 (CDT)
From: Gabriel Dos Reis <gdr@cs.tamu.edu>
To: fricas-devel@googlegroups.com
In-Reply-To: <fbcd16d40710312013m262be109u154552cd56dc8468@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0710312213490.14870@gauss.cs.tamu.edu>
References: <E1IjR7R-0006NO-00@hera.math.uni.wroc.pl>
	<4728B1B9.807@hemmecke.de>
	<fbcd16d40710311016x4f028e0dj92e72ccb3552be@mail.gmail.com>
	<Pine.LNX.4.64.0710311857340.14870@gauss.cs.tamu.edu>
	<fbcd16d40710311739j17695e30kc15f9d5f56e563b6@mail.gmail.com>
	<Pine.LNX.4.64.0710312006100.14870@gauss.cs.tamu.edu>
	<fbcd16d40710311842h4ad4db6cl6da5488903d1b0b4@mail.gmail.com>
	<Pine.LNX.4.64.0710312042270.14870@gauss.cs.tamu.edu>
	<fbcd16d40710311929h108f0caerd6d0879fe60b6995@mail.gmail.com>
	<Pine.LNX.4.64.0710312140210.14870@gauss.cs.tamu.edu>
	<fbcd16d40710312013m262be109u154552cd56dc8468@mail.gmail.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-detected-kernel: by monty-python.gnu.org: Solaris 8 (1)
Cc: open-axiom-devel@lists.sourceforge.net,
	axiom-dev <axiom-developer@nongnu.org>, axiom-math@nongnu.org
Subject: [Axiom-math] Re: [fricas-devel] Re: [open-axiom-devel]
 [fricas-devel] Re:
 [fricas-devel] Re: iterators and cartesian product.
X-BeenThere: axiom-math@nongnu.org
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: axiom-math.nongnu.org
List-Unsubscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/pipermail/axiom-math>
List-Post: <mailto:axiom-math@nongnu.org>
List-Help: <mailto:axiom-math-request@nongnu.org?subject=help>
List-Subscribe: <http://lists.nongnu.org/mailman/listinfo/axiom-math>,
	<mailto:axiom-math-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 01 Nov 2007 03:18:09 -0000

On Wed, 31 Oct 2007, Bill Page wrote:

| 
| On 10/31/07, Gabriel Dos Reis wrote:
| >
| > On Wed, 31 Oct 2007, Bill Page wrote:
| > ...
| > | > |
| > | > | Perhaps I am being dense but I do not see what this has to do with the
| > | > | concept of Monad in Haskell.
| > | >
| > | > They are the same categorial notion.
| > |
| > | That is not clear to me.
| > |
| > | > What you have in Haskell is a computer scientist application of the
| > | > categorial notion of `monad'.
| > |
| > | Agreed.
| >
| > I cannot reconcile both your statements.
| >
| 
| I mean: What does Monad as defined in the Axiom library right now:
| 
| ++  Monad is the class of all multiplicative monads, i.e. sets
| ++  with a binary operation.
| 
| have to do with Monads in Haskell?

That is explained in the reference to Philip Wadler's paper I pointed
to in my earlier message.

| Isn't that what you implied by your comment?

Yes.

-- Gaby



